<?xml version="1.0" encoding="ASCII"?>
<atl:Module xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:atl="http://www.eclipse.org/gmt/2005/ATL" xmlns:ocl="http://www.eclipse.org/gmt/2005/OCL" location="1:1-925:2" name="ATL2Problem">
  <inModels location="2:27-2:35" name="IN">
    <metamodel href="new-model#/1"/>
  </inModels>
  <outModels location="2:8-2:21" name="OUT">
    <metamodel href="new-model#/0"/>
  </outModels>
  <elements xsi:type="atl:Helper" location="12:1-16:4">
    <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
    <commentsBefore>-- HELPERS --------------------------------------------------------------------</commentsBefore>
    <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
    <commentsBefore>-- This helper provides a set containing the name of the IteratorExp elements</commentsBefore>
    <commentsBefore>-- that accepts a single Iterator.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	Set(String)</commentsBefore>
    <commentsAfter>-- This helper provides a set containing the name of the IteratorExp elements</commentsAfter>
    <commentsAfter>-- for which several Iterators may be declared according to the OCL spec.</commentsAfter>
    <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
    <commentsAfter>-- RETURN:	Set(String)</commentsAfter>
    <definition location="12:8-16:3">
      <feature xsi:type="ocl:Attribute" location="12:13-16:3" name="singleIteratorExps">
        <initExpression xsi:type="ocl:SetExp" location="13:2-16:3">
          <elements xsi:type="ocl:StringExp" location="14:3-14:13" stringSymbol="isUnique"/>
          <elements xsi:type="ocl:StringExp" location="14:15-14:20" stringSymbol="any"/>
          <elements xsi:type="ocl:StringExp" location="14:22-14:27" stringSymbol="one"/>
          <elements xsi:type="ocl:StringExp" location="14:29-14:38" stringSymbol="collect"/>
          <elements xsi:type="ocl:StringExp" location="14:40-14:48" stringSymbol="select"/>
          <elements xsi:type="ocl:StringExp" location="15:3-15:11" stringSymbol="reject"/>
          <elements xsi:type="ocl:StringExp" location="15:13-15:28" stringSymbol="collectNested"/>
          <elements xsi:type="ocl:StringExp" location="15:30-15:40" stringSymbol="sortedBy"/>
        </initExpression>
        <type xsi:type="ocl:SetType" location="12:34-12:45">
          <elementType xsi:type="ocl:StringType" location="12:38-12:44"/>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="23:1-23:71">
    <commentsBefore>-- This helper provides a set containing the name of the IteratorExp elements</commentsBefore>
    <commentsBefore>-- for which several Iterators may be declared according to the OCL spec.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	Set(String)</commentsBefore>
    <commentsAfter>-- This helper computes the set of existing CollectionType elements within the</commentsAfter>
    <commentsAfter>-- input ATL Unit.</commentsAfter>
    <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
    <commentsAfter>-- RETURN:	Set(ATL!CollectionType)</commentsAfter>
    <definition location="23:8-23:70">
      <feature xsi:type="ocl:Attribute" location="23:13-23:70" name="multiIteratorExps">
        <initExpression xsi:type="ocl:SetExp" location="23:47-23:70">
          <elements xsi:type="ocl:StringExp" location="23:51-23:59" stringSymbol="exists"/>
          <elements xsi:type="ocl:StringExp" location="23:61-23:69" stringSymbol="forAll"/>
        </initExpression>
        <type xsi:type="ocl:SetType" location="23:33-23:44">
          <elementType xsi:type="ocl:StringType" location="23:37-23:43"/>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="30:1-31:36">
    <commentsBefore>-- This helper computes the set of existing CollectionType elements within the</commentsBefore>
    <commentsBefore>-- input ATL Unit.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	Set(ATL!CollectionType)</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing all the OclModel elements that</commentsAfter>
    <commentsAfter>-- are used in the input ATL Unit.</commentsAfter>
    <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!OclModel)</commentsAfter>
    <definition location="30:8-31:35">
      <feature xsi:type="ocl:Attribute" location="30:13-31:35" name="collectionTypes">
        <initExpression xsi:type="ocl:OperationCallExp" location="31:2-31:35" operationName="allInstances">
          <source xsi:type="ocl:OclModelElement" location="31:2-31:20" name="CollectionType">
            <model href="new-model#/1"/>
          </source>
        </initExpression>
        <type xsi:type="ocl:SetType" location="30:31-30:54">
          <elementType xsi:type="ocl:OclModelElement" location="30:35-30:53" name="CollectionType">
            <model href="new-model#/1"/>
          </elementType>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="38:1-45:15">
    <commentsBefore>-- This helper computes a sequence containing all the OclModel elements that</commentsBefore>
    <commentsBefore>-- are used in the input ATL Unit.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!OclModel)</commentsBefore>
    <commentsAfter>-- This helper computes the Query element that corresponds to the input ATL</commentsAfter>
    <commentsAfter>-- Unit. If the input ATL Unit corresponds to a Module (eg a transformation),</commentsAfter>
    <commentsAfter>-- the computed value is OclUndefined.</commentsAfter>
    <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
    <commentsAfter>-- RETURN:	ATL!Query</commentsAfter>
    <definition location="38:8-45:14">
      <feature xsi:type="ocl:Attribute" location="38:13-45:14" name="allModels">
        <initExpression xsi:type="ocl:LetExp" location="39:2-45:14">
          <variable location="39:6-40:51" varName="atlModule" variableExp="//@elements.3/@definition/@feature/@initExpression/@in_/@source/@elements.0/@source //@elements.3/@definition/@feature/@initExpression/@in_/@source/@elements.1/@source">
            <type xsi:type="ocl:OclModelElement" location="39:18-39:28" name="Module">
              <model href="new-model#/1"/>
            </type>
            <initExpression xsi:type="ocl:CollectionOperationCallExp" location="40:3-40:51" operationName="first">
              <source xsi:type="ocl:CollectionOperationCallExp" location="40:3-40:42" operationName="asSequence">
                <source xsi:type="ocl:OperationCallExp" location="40:3-40:28" operationName="allInstances">
                  <source xsi:type="ocl:OclModelElement" location="40:3-40:13" name="Module">
                    <model href="new-model#/1"/>
                  </source>
                </source>
              </source>
            </initExpression>
          </variable>
          <in_ xsi:type="ocl:CollectionOperationCallExp" location="42:2-45:14" operationName="flatten">
            <source xsi:type="ocl:SequenceExp" location="42:2-45:3">
              <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="43:3-43:21" name="inModels">
                <source xsi:type="ocl:VariableExp" location="43:3-43:12" referredVariable="//@elements.3/@definition/@feature/@initExpression/@variable"/>
              </elements>
              <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="44:3-44:22" name="outModels">
                <source xsi:type="ocl:VariableExp" location="44:3-44:12" referredVariable="//@elements.3/@definition/@feature/@initExpression/@variable"/>
              </elements>
            </source>
          </in_>
        </initExpression>
        <type xsi:type="ocl:SequenceType" location="38:25-38:47">
          <elementType xsi:type="ocl:OclModelElement" location="38:34-38:46" name="OclModel">
            <model href="new-model#/1"/>
          </elementType>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="53:1-54:50">
    <commentsBefore>-- This helper computes the Query element that corresponds to the input ATL</commentsBefore>
    <commentsBefore>-- Unit. If the input ATL Unit corresponds to a Module (eg a transformation),</commentsBefore>
    <commentsBefore>-- the computed value is OclUndefined.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	ATL!Query</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing all the Binding elements that</commentsAfter>
    <commentsAfter>-- are defined in the input ATL Unit.</commentsAfter>
    <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!Binding)</commentsAfter>
    <definition location="53:8-54:49">
      <feature xsi:type="ocl:Attribute" location="53:13-54:49" name="queryElt">
        <initExpression xsi:type="ocl:CollectionOperationCallExp" location="54:2-54:49" operationName="first">
          <source xsi:type="ocl:CollectionOperationCallExp" location="54:2-54:40" operationName="asSequence">
            <source xsi:type="ocl:OperationCallExp" location="54:2-54:26" operationName="allInstances">
              <source xsi:type="ocl:OclModelElement" location="54:2-54:11" name="Query">
                <model href="new-model#/1"/>
              </source>
            </source>
          </source>
        </initExpression>
        <type xsi:type="ocl:OclModelElement" location="53:24-53:33" name="Query">
          <model href="new-model#/1"/>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="61:1-62:43">
    <commentsBefore>-- This helper computes a sequence containing all the Binding elements that</commentsBefore>
    <commentsBefore>-- are defined in the input ATL Unit.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!Binding)</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing all the Pattern elements that</commentsAfter>
    <commentsAfter>-- are defined in the input ATL Unit.</commentsAfter>
    <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!InPattern)</commentsAfter>
    <definition location="61:8-62:42">
      <feature xsi:type="ocl:Attribute" location="61:13-62:42" name="allBindings">
        <initExpression xsi:type="ocl:CollectionOperationCallExp" location="62:2-62:42" operationName="asSequence">
          <source xsi:type="ocl:OperationCallExp" location="62:2-62:28" operationName="allInstances">
            <source xsi:type="ocl:OclModelElement" location="62:2-62:13" name="Binding">
              <model href="new-model#/1"/>
            </source>
          </source>
        </initExpression>
        <type xsi:type="ocl:SequenceType" location="61:27-61:48">
          <elementType xsi:type="ocl:OclModelElement" location="61:36-61:47" name="Binding">
            <model href="new-model#/1"/>
          </elementType>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="69:1-70:45">
    <commentsBefore>-- This helper computes a sequence containing all the Pattern elements that</commentsBefore>
    <commentsBefore>-- are defined in the input ATL Unit.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!InPattern)</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing all the InPatternElement elements</commentsAfter>
    <commentsAfter>-- that are defined in the input ATL Unit.</commentsAfter>
    <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!InPatternElement)</commentsAfter>
    <definition location="69:8-70:44">
      <feature xsi:type="ocl:Attribute" location="69:13-70:44" name="allInPatterns">
        <initExpression xsi:type="ocl:CollectionOperationCallExp" location="70:2-70:44" operationName="asSequence">
          <source xsi:type="ocl:OperationCallExp" location="70:2-70:30" operationName="allInstances">
            <source xsi:type="ocl:OclModelElement" location="70:2-70:15" name="InPattern">
              <model href="new-model#/1"/>
            </source>
          </source>
        </initExpression>
        <type xsi:type="ocl:SequenceType" location="69:29-69:52">
          <elementType xsi:type="ocl:OclModelElement" location="69:38-69:51" name="InPattern">
            <model href="new-model#/1"/>
          </elementType>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="77:1-78:52">
    <commentsBefore>-- This helper computes a sequence containing all the InPatternElement elements</commentsBefore>
    <commentsBefore>-- that are defined in the input ATL Unit.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!InPatternElement)</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing all the OutPatternElement</commentsAfter>
    <commentsAfter>-- elements that are defined in the input ATL Unit.</commentsAfter>
    <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!OutPatternElement)</commentsAfter>
    <definition location="77:8-78:51">
      <feature xsi:type="ocl:Attribute" location="77:13-78:51" name="allInPatternElts">
        <initExpression xsi:type="ocl:CollectionOperationCallExp" location="78:2-78:51" operationName="asSequence">
          <source xsi:type="ocl:OperationCallExp" location="78:2-78:37" operationName="allInstances">
            <source xsi:type="ocl:OclModelElement" location="78:2-78:22" name="InPatternElement">
              <model href="new-model#/1"/>
            </source>
          </source>
        </initExpression>
        <type xsi:type="ocl:SequenceType" location="77:32-77:62">
          <elementType xsi:type="ocl:OclModelElement" location="77:41-77:61" name="InPatternElement">
            <model href="new-model#/1"/>
          </elementType>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="85:1-86:53">
    <commentsBefore>-- This helper computes a sequence containing all the OutPatternElement</commentsBefore>
    <commentsBefore>-- elements that are defined in the input ATL Unit.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!OutPatternElement)</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing all the Rule elements that are</commentsAfter>
    <commentsAfter>-- defined in the input ATL Unit. If the input Unit is a query, the computed</commentsAfter>
    <commentsAfter>-- sequence is empty.</commentsAfter>
    <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!Rule)</commentsAfter>
    <definition location="85:8-86:52">
      <feature xsi:type="ocl:Attribute" location="85:13-86:52" name="allOutPatternElts">
        <initExpression xsi:type="ocl:CollectionOperationCallExp" location="86:2-86:52" operationName="asSequence">
          <source xsi:type="ocl:OperationCallExp" location="86:2-86:38" operationName="allInstances">
            <source xsi:type="ocl:OclModelElement" location="86:2-86:23" name="OutPatternElement">
              <model href="new-model#/1"/>
            </source>
          </source>
        </initExpression>
        <type xsi:type="ocl:SequenceType" location="85:33-85:64">
          <elementType xsi:type="ocl:OclModelElement" location="85:42-85:63" name="OutPatternElement">
            <model href="new-model#/1"/>
          </elementType>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="94:1-95:40">
    <commentsBefore>-- This helper computes a sequence containing all the Rule elements that are</commentsBefore>
    <commentsBefore>-- defined in the input ATL Unit. If the input Unit is a query, the computed</commentsBefore>
    <commentsBefore>-- sequence is empty.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!Rule)</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing all the Helper elements that are</commentsAfter>
    <commentsAfter>-- defined in the input ATL Unit.</commentsAfter>
    <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!Helper)</commentsAfter>
    <definition location="94:8-95:39">
      <feature xsi:type="ocl:Attribute" location="94:13-95:39" name="allRules">
        <initExpression xsi:type="ocl:CollectionOperationCallExp" location="95:2-95:39" operationName="asSequence">
          <source xsi:type="ocl:OperationCallExp" location="95:2-95:25" operationName="allInstances">
            <source xsi:type="ocl:OclModelElement" location="95:2-95:10" name="Rule">
              <model href="new-model#/1"/>
            </source>
          </source>
        </initExpression>
        <type xsi:type="ocl:SequenceType" location="94:24-94:42">
          <elementType xsi:type="ocl:OclModelElement" location="94:33-94:41" name="Rule">
            <model href="new-model#/1"/>
          </elementType>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="102:1-103:42">
    <commentsBefore>-- This helper computes a sequence containing all the Helper elements that are</commentsBefore>
    <commentsBefore>-- defined in the input ATL Unit.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!Helper)</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing all the LoopExp elements that are</commentsAfter>
    <commentsAfter>-- defined in the input ATL Unit.</commentsAfter>
    <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!LoopExp)</commentsAfter>
    <definition location="102:8-103:41">
      <feature xsi:type="ocl:Attribute" location="102:13-103:41" name="allHelpers">
        <initExpression xsi:type="ocl:CollectionOperationCallExp" location="103:2-103:41" operationName="asSequence">
          <source xsi:type="ocl:OperationCallExp" location="103:2-103:27" operationName="allInstances">
            <source xsi:type="ocl:OclModelElement" location="103:2-103:12" name="Helper">
              <model href="new-model#/1"/>
            </source>
          </source>
        </initExpression>
        <type xsi:type="ocl:SequenceType" location="102:26-102:46">
          <elementType xsi:type="ocl:OclModelElement" location="102:35-102:45" name="Helper">
            <model href="new-model#/1"/>
          </elementType>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="110:1-111:43">
    <commentsBefore>-- This helper computes a sequence containing all the LoopExp elements that are</commentsBefore>
    <commentsBefore>-- defined in the input ATL Unit.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!LoopExp)</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing all the IterateExp elements that</commentsAfter>
    <commentsAfter>-- are defined in the input ATL Unit.</commentsAfter>
    <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!IterateExp)</commentsAfter>
    <definition location="110:8-111:42">
      <feature xsi:type="ocl:Attribute" location="110:13-111:42" name="allLoopExps">
        <initExpression xsi:type="ocl:CollectionOperationCallExp" location="111:2-111:42" operationName="asSequence">
          <source xsi:type="ocl:OperationCallExp" location="111:2-111:28" operationName="allInstances">
            <source xsi:type="ocl:OclModelElement" location="111:2-111:13" name="LoopExp">
              <model href="new-model#/1"/>
            </source>
          </source>
        </initExpression>
        <type xsi:type="ocl:SequenceType" location="110:27-110:48">
          <elementType xsi:type="ocl:OclModelElement" location="110:36-110:47" name="LoopExp">
            <model href="new-model#/1"/>
          </elementType>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="118:1-119:46">
    <commentsBefore>-- This helper computes a sequence containing all the IterateExp elements that</commentsBefore>
    <commentsBefore>-- are defined in the input ATL Unit.</commentsBefore>
    <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!IterateExp)</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing all the VariableDeclaration</commentsAfter>
    <commentsAfter>-- elements that are associated with the contextual Rule. These declarations</commentsAfter>
    <commentsAfter>-- can be of 3 different kinds:</commentsAfter>
    <commentsAfter>--  * the variables declared for the rule;</commentsAfter>
    <commentsAfter>--  * the OutPatternElements of the rule;</commentsAfter>
    <commentsAfter>--  * the InPatternElements of the rule if this last is a MatchedRule.</commentsAfter>
    <commentsAfter>-- CONTEXT:	ATL!Rule</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsAfter>
    <definition location="118:8-119:45">
      <feature xsi:type="ocl:Attribute" location="118:13-119:45" name="allIterateExps">
        <initExpression xsi:type="ocl:CollectionOperationCallExp" location="119:2-119:45" operationName="asSequence">
          <source xsi:type="ocl:OperationCallExp" location="119:2-119:31" operationName="allInstances">
            <source xsi:type="ocl:OclModelElement" location="119:2-119:16" name="IterateExp">
              <model href="new-model#/1"/>
            </source>
          </source>
        </initExpression>
        <type xsi:type="ocl:SequenceType" location="118:30-118:54">
          <elementType xsi:type="ocl:OclModelElement" location="118:39-118:53" name="IterateExp">
            <model href="new-model#/1"/>
          </elementType>
        </type>
      </feature>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="130:1-141:15">
    <commentsBefore>-- This helper computes a sequence containing all the VariableDeclaration</commentsBefore>
    <commentsBefore>-- elements that are associated with the contextual Rule. These declarations</commentsBefore>
    <commentsBefore>-- can be of 3 different kinds:</commentsBefore>
    <commentsBefore>--  * the variables declared for the rule;</commentsBefore>
    <commentsBefore>--  * the OutPatternElements of the rule;</commentsBefore>
    <commentsBefore>--  * the InPatternElements of the rule if this last is a MatchedRule.</commentsBefore>
    <commentsBefore>-- CONTEXT:	ATL!Rule</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsBefore>
    <commentsAfter>-- This helper computes the Rule element in which the contextual PatterElement</commentsAfter>
    <commentsAfter>-- is declared. This is achieved by returning the Rule referred by the &quot;rule&quot;</commentsAfter>
    <commentsAfter>-- reference of the Pattern that conatins the contexual PatternElement. This </commentsAfter>
    <commentsAfter>-- last one is accessed through the &quot;outPattern&quot; reference if the contextual</commentsAfter>
    <commentsAfter>-- PatternElement is an OutPatternElement, throught the &quot;inPattern&quot; if it is</commentsAfter>
    <commentsAfter>-- an InPatternElement.</commentsAfter>
    <commentsAfter>-- CONTEXT:	ATL!PatternElement</commentsAfter>
    <commentsAfter>-- RETURN:	ATL!Rule</commentsAfter>
    <definition location="130:8-141:14">
      <feature xsi:type="ocl:Attribute" location="131:7-141:14" name="namedElements">
        <initExpression xsi:type="ocl:CollectionOperationCallExp" location="132:2-141:14" operationName="flatten">
          <source xsi:type="ocl:SequenceExp" location="132:2-141:3">
            <elements xsi:type="ocl:IfExp" location="133:3-138:8">
              <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="135:4-135:41" operationName="asSequence">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="135:4-135:27" name="elements">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="135:4-135:18" name="inPattern">
                    <source xsi:type="ocl:VariableExp" location="135:4-135:8">
                      <referredVariable href="new-model#/3"/>
                    </source>
                  </source>
                </source>
              </thenExpression>
              <condition xsi:type="ocl:OperationCallExp" location="133:6-133:39" operationName="oclIsTypeOf">
                <source xsi:type="ocl:VariableExp" location="133:6-133:10">
                  <referredVariable href="new-model#/2"/>
                </source>
                <arguments xsi:type="ocl:OclModelElement" location="133:23-133:38" name="MatchedRule">
                  <model href="new-model#/1"/>
                </arguments>
              </condition>
              <elseExpression xsi:type="ocl:SequenceExp" location="137:4-137:14"/>
            </elements>
            <elements xsi:type="ocl:CollectionOperationCallExp" location="139:3-139:31" operationName="asSequence">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="139:3-139:17" name="variables">
                <source xsi:type="ocl:VariableExp" location="139:3-139:7">
                  <referredVariable href="new-model#/4"/>
                </source>
              </source>
            </elements>
            <elements xsi:type="ocl:CollectionOperationCallExp" location="140:3-140:41" operationName="asSequence">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="140:3-140:27" name="elements">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="140:3-140:18" name="outPattern">
                  <source xsi:type="ocl:VariableExp" location="140:3-140:7">
                    <referredVariable href="new-model#/5"/>
                  </source>
                </source>
              </source>
            </elements>
          </source>
        </initExpression>
        <type xsi:type="ocl:SequenceType" location="131:23-131:56">
          <elementType xsi:type="ocl:OclModelElement" location="131:32-131:55" name="VariableDeclaration">
            <model href="new-model#/1"/>
          </elementType>
        </type>
      </feature>
      <context_ location="130:8-130:24">
        <context_ xsi:type="ocl:OclModelElement" location="130:16-130:24" name="Rule">
          <model href="new-model#/1"/>
        </context_>
      </context_>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="152:1-158:8">
    <commentsBefore>-- This helper computes the Rule element in which the contextual PatterElement</commentsBefore>
    <commentsBefore>-- is declared. This is achieved by returning the Rule referred by the &quot;rule&quot;</commentsBefore>
    <commentsBefore>-- reference of the Pattern that conatins the contexual PatternElement. This </commentsBefore>
    <commentsBefore>-- last one is accessed through the &quot;outPattern&quot; reference if the contextual</commentsBefore>
    <commentsBefore>-- PatternElement is an OutPatternElement, throught the &quot;inPattern&quot; if it is</commentsBefore>
    <commentsBefore>-- an InPatternElement.</commentsBefore>
    <commentsBefore>-- CONTEXT:	ATL!PatternElement</commentsBefore>
    <commentsBefore>-- RETURN:	ATL!Rule</commentsBefore>
    <commentsAfter>-- This helper returns the immediate composite (container) of the contextual</commentsAfter>
    <commentsAfter>-- VariableDeclaration.</commentsAfter>
    <commentsAfter>-- If the &quot;letExp&quot; reference of the contextual VariableDeclaration is not</commentsAfter>
    <commentsAfter>-- undefined, the helper returns the pointed LetExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if the &quot;letExp&quot; reference of the contextual VD is not undefined,</commentsAfter>
    <commentsAfter>-- the helper returns the pointed IterateExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if the contextual VD is an InPatternElement, the helper returns</commentsAfter>
    <commentsAfter>-- the InPattern in which it is contained.</commentsAfter>
    <commentsAfter>-- Otherwise, if the contextual VD is an OutPatternElement, the helper returns</commentsAfter>
    <commentsAfter>-- the OutPattern in which it is contained.</commentsAfter>
    <commentsAfter>-- Otherwise, if there exists a LoopExp element that contains the contextual VD</commentsAfter>
    <commentsAfter>-- as an iterator, the helper returns this LoopExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if there exists an IterateExp element that contains the contextual</commentsAfter>
    <commentsAfter>-- VD as its result, the helper returns this IterateExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if there exists a Rule element that contains the contextual VD</commentsAfter>
    <commentsAfter>-- as a rule variable iterator, the helper returns this Rule element.</commentsAfter>
    <commentsAfter>-- Otherwise, the helper returns OclUndefined as a default value.</commentsAfter>
    <commentsAfter>-- CONTEXT:	ATL!VariableDeclaration</commentsAfter>
    <commentsAfter>-- RETURN:	ATL!Element</commentsAfter>
    <definition location="152:8-158:7">
      <feature xsi:type="ocl:Attribute" location="152:40-158:7" name="rule">
        <initExpression xsi:type="ocl:IfExp" location="153:2-158:7">
          <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="155:3-155:25" name="rule">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="155:3-155:18" name="outPattern">
              <source xsi:type="ocl:VariableExp" location="155:3-155:7">
                <referredVariable href="new-model#/7"/>
              </source>
            </source>
          </thenExpression>
          <condition xsi:type="ocl:OperationCallExp" location="153:5-153:44" operationName="oclIsKindOf">
            <source xsi:type="ocl:VariableExp" location="153:5-153:9">
              <referredVariable href="new-model#/6"/>
            </source>
            <arguments xsi:type="ocl:OclModelElement" location="153:22-153:43" name="OutPatternElement">
              <model href="new-model#/1"/>
            </arguments>
          </condition>
          <elseExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="157:3-157:24" name="rule">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="157:3-157:17" name="inPattern">
              <source xsi:type="ocl:VariableExp" location="157:3-157:7">
                <referredVariable href="new-model#/8"/>
              </source>
            </source>
          </elseExpression>
        </initExpression>
        <type xsi:type="ocl:OclModelElement" location="152:49-152:57" name="Rule">
          <model href="new-model#/1"/>
        </type>
      </feature>
      <context_ location="152:8-152:34">
        <context_ xsi:type="ocl:OclModelElement" location="152:16-152:34" name="PatternElement">
          <model href="new-model#/1"/>
        </context_>
      </context_>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="180:1-201:44">
    <commentsBefore>-- This helper returns the immediate composite (container) of the contextual</commentsBefore>
    <commentsBefore>-- VariableDeclaration.</commentsBefore>
    <commentsBefore>-- If the &quot;letExp&quot; reference of the contextual VariableDeclaration is not</commentsBefore>
    <commentsBefore>-- undefined, the helper returns the pointed LetExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if the &quot;letExp&quot; reference of the contextual VD is not undefined,</commentsBefore>
    <commentsBefore>-- the helper returns the pointed IterateExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if the contextual VD is an InPatternElement, the helper returns</commentsBefore>
    <commentsBefore>-- the InPattern in which it is contained.</commentsBefore>
    <commentsBefore>-- Otherwise, if the contextual VD is an OutPatternElement, the helper returns</commentsBefore>
    <commentsBefore>-- the OutPattern in which it is contained.</commentsBefore>
    <commentsBefore>-- Otherwise, if there exists a LoopExp element that contains the contextual VD</commentsBefore>
    <commentsBefore>-- as an iterator, the helper returns this LoopExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if there exists an IterateExp element that contains the contextual</commentsBefore>
    <commentsBefore>-- VD as its result, the helper returns this IterateExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if there exists a Rule element that contains the contextual VD</commentsBefore>
    <commentsBefore>-- as a rule variable iterator, the helper returns this Rule element.</commentsBefore>
    <commentsBefore>-- Otherwise, the helper returns OclUndefined as a default value.</commentsBefore>
    <commentsBefore>-- CONTEXT:	ATL!VariableDeclaration</commentsBefore>
    <commentsBefore>-- RETURN:	ATL!Element</commentsBefore>
    <commentsAfter>-- This helper returns the immediate composite (container) of the contextual</commentsAfter>
    <commentsAfter>-- OclExpression.</commentsAfter>
    <commentsAfter>-- If the one of the &quot;ifExp1&quot;, &quot;ifExp2&quot; and &quot;ifExp3&quot; references of the</commentsAfter>
    <commentsAfter>-- contextual OclExpression is not undefined, the helper returns the pointed</commentsAfter>
    <commentsAfter>-- IfExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if its &quot;attribute&quot; is not undefined, the helper returns the</commentsAfter>
    <commentsAfter>-- pointed Attribute.</commentsAfter>
    <commentsAfter>-- Otherwise, if its &quot;operation&quot; is not undefined, the helper returns the</commentsAfter>
    <commentsAfter>-- pointed Operation.</commentsAfter>
    <commentsAfter>-- Otherwise, if its &quot;initializedVariable&quot; is not undefined, the helper returns</commentsAfter>
    <commentsAfter>-- the pointed VariableDeclaration.</commentsAfter>
    <commentsAfter>-- Otherwise, if its &quot;parentOperation&quot; is not undefined, the helper returns the</commentsAfter>
    <commentsAfter>-- pointed OperationCallExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if its &quot;loopExp&quot; is not undefined, the helper returns the pointed</commentsAfter>
    <commentsAfter>-- LoopExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if its &quot;letExp&quot; is not undefined, the helper returns the</commentsAfter>
    <commentsAfter>-- pointed LetExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if its &quot;collection&quot; is not undefined, the helper returns the</commentsAfter>
    <commentsAfter>-- pointed CollectionExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if its &quot;appliedProperty&quot; is not undefined, the helper returns the</commentsAfter>
    <commentsAfter>-- pointed PropertyCallExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if its &quot;operation&quot; is not undefined, the helper returns the</commentsAfter>
    <commentsAfter>-- pointed Operation.</commentsAfter>
    <commentsAfter>-- Otherwise, if there exists an InPattern that has the contextual OclExp as</commentsAfter>
    <commentsAfter>-- filter, the helper returns this InPattern.</commentsAfter>
    <commentsAfter>-- Otherwise, if there exists a Binding that has the contextual OclExp as</commentsAfter>
    <commentsAfter>-- value, the helper returns this Binding.</commentsAfter>
    <commentsAfter>-- Otherwise, if there exists a Query that has the contextual OclExp as body,</commentsAfter>
    <commentsAfter>-- the helper returns this Query.</commentsAfter>
    <commentsAfter>-- Otherwise, the helper retuns OclUndefined as default value.</commentsAfter>
    <commentsAfter>-- CONTEXT:	ATL!OclExpression</commentsAfter>
    <commentsAfter>-- RETURN:	ATL!Element</commentsAfter>
    <definition location="180:8-201:43">
      <feature xsi:type="ocl:Attribute" location="180:45-201:43" name="immediateComposite">
        <initExpression xsi:type="ocl:IfExp" location="181:2-201:43">
          <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="182:3-182:14" name="letExp">
            <source xsi:type="ocl:VariableExp" location="182:3-182:7">
              <referredVariable href="new-model#/10"/>
            </source>
          </thenExpression>
          <condition xsi:type="ocl:OperatorCallExp" location="181:5-181:37" operationName="not">
            <source xsi:type="ocl:OperationCallExp" location="181:9-181:37" operationName="oclIsUndefined">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="181:9-181:20" name="letExp">
                <source xsi:type="ocl:VariableExp" location="181:9-181:13">
                  <referredVariable href="new-model#/9"/>
                </source>
              </source>
            </source>
          </condition>
          <elseExpression xsi:type="ocl:IfExp" location="183:7-201:37">
            <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="184:3-184:15" name="baseExp">
              <source xsi:type="ocl:VariableExp" location="184:3-184:7">
                <referredVariable href="new-model#/12"/>
              </source>
            </thenExpression>
            <condition xsi:type="ocl:OperatorCallExp" location="183:10-183:43" operationName="not">
              <source xsi:type="ocl:OperationCallExp" location="183:14-183:43" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="183:14-183:26" name="baseExp">
                  <source xsi:type="ocl:VariableExp" location="183:14-183:18">
                    <referredVariable href="new-model#/11"/>
                  </source>
                </source>
              </source>
            </condition>
            <elseExpression xsi:type="ocl:IfExp" location="185:7-201:31">
              <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="186:3-186:71" name="inPattern">
                <source xsi:type="ocl:CollectionOperationCallExp" location="186:3-186:61" operationName="first">
                  <source xsi:type="ocl:IteratorExp" location="186:3-186:52" name="select">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="186:3-186:30" name="allInPatternElts">
                      <source xsi:type="ocl:VariableExp" location="186:3-186:13">
                        <referredVariable href="new-model#/15"/>
                      </source>
                    </source>
                    <body xsi:type="ocl:OperatorCallExp" location="186:43-186:51" operationName="=">
                      <source xsi:type="ocl:VariableExp" location="186:43-186:44" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@iterators.0"/>
                      <arguments xsi:type="ocl:VariableExp" location="186:47-186:51">
                        <referredVariable href="new-model#/16"/>
                      </arguments>
                    </body>
                    <iterators location="186:39-186:40" varName="e" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@body/@source"/>
                  </source>
                </source>
              </thenExpression>
              <condition xsi:type="ocl:IteratorExp" location="185:10-185:59" name="exists">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="185:10-185:37" name="allInPatternElts">
                  <source xsi:type="ocl:VariableExp" location="185:10-185:20">
                    <referredVariable href="new-model#/13"/>
                  </source>
                </source>
                <body xsi:type="ocl:OperatorCallExp" location="185:50-185:58" operationName="=">
                  <source xsi:type="ocl:VariableExp" location="185:50-185:51" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                  <arguments xsi:type="ocl:VariableExp" location="185:54-185:58">
                    <referredVariable href="new-model#/14"/>
                  </arguments>
                </body>
                <iterators location="185:46-185:47" varName="e" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@condition/@body/@source"/>
              </condition>
              <elseExpression xsi:type="ocl:IfExp" location="187:7-201:25">
                <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="188:3-188:73" name="outPattern">
                  <source xsi:type="ocl:CollectionOperationCallExp" location="188:3-188:62" operationName="first">
                    <source xsi:type="ocl:IteratorExp" location="188:3-188:53" name="select">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="188:3-188:31" name="allOutPatternElts">
                        <source xsi:type="ocl:VariableExp" location="188:3-188:13">
                          <referredVariable href="new-model#/19"/>
                        </source>
                      </source>
                      <body xsi:type="ocl:OperatorCallExp" location="188:44-188:52" operationName="=">
                        <source xsi:type="ocl:VariableExp" location="188:44-188:45" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@iterators.0"/>
                        <arguments xsi:type="ocl:VariableExp" location="188:48-188:52">
                          <referredVariable href="new-model#/20"/>
                        </arguments>
                      </body>
                      <iterators location="188:40-188:41" varName="e" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@body/@source"/>
                    </source>
                  </source>
                </thenExpression>
                <condition xsi:type="ocl:IteratorExp" location="187:10-187:60" name="exists">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="187:10-187:38" name="allOutPatternElts">
                    <source xsi:type="ocl:VariableExp" location="187:10-187:20">
                      <referredVariable href="new-model#/17"/>
                    </source>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="187:51-187:59" operationName="=">
                    <source xsi:type="ocl:VariableExp" location="187:51-187:52" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                    <arguments xsi:type="ocl:VariableExp" location="187:55-187:59">
                      <referredVariable href="new-model#/18"/>
                    </arguments>
                  </body>
                  <iterators location="187:47-187:48" varName="e" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@source"/>
                </condition>
                <elseExpression xsi:type="ocl:IfExp" location="189:7-201:19">
                  <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="191:3-192:60" operationName="first">
                    <source xsi:type="ocl:IteratorExp" location="191:3-192:51" name="select">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="191:3-191:25" name="allLoopExps">
                        <source xsi:type="ocl:VariableExp" location="191:3-191:13">
                          <referredVariable href="new-model#/23"/>
                        </source>
                      </source>
                      <body xsi:type="ocl:IteratorExp" location="192:17-192:50" name="exists">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="192:17-192:28" name="iterators">
                          <source xsi:type="ocl:VariableExp" location="192:17-192:18" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@iterators.0"/>
                        </source>
                        <body xsi:type="ocl:OperatorCallExp" location="192:41-192:49" operationName="=">
                          <source xsi:type="ocl:VariableExp" location="192:41-192:45">
                            <referredVariable href="new-model#/24"/>
                          </source>
                          <arguments xsi:type="ocl:VariableExp" location="192:48-192:49" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@iterators.0"/>
                        </body>
                        <iterators location="192:37-192:38" varName="e" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@body/@arguments.0"/>
                      </body>
                      <iterators location="192:13-192:14" varName="l" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@source/@source"/>
                    </source>
                  </thenExpression>
                  <condition xsi:type="ocl:IteratorExp" location="189:10-190:52" name="exists">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="189:10-189:32" name="allLoopExps">
                      <source xsi:type="ocl:VariableExp" location="189:10-189:20">
                        <referredVariable href="new-model#/21"/>
                      </source>
                    </source>
                    <body xsi:type="ocl:IteratorExp" location="190:18-190:51" name="exists">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="190:18-190:29" name="iterators">
                        <source xsi:type="ocl:VariableExp" location="190:18-190:19" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                      </source>
                      <body xsi:type="ocl:OperatorCallExp" location="190:42-190:50" operationName="=">
                        <source xsi:type="ocl:VariableExp" location="190:42-190:46">
                          <referredVariable href="new-model#/22"/>
                        </source>
                        <arguments xsi:type="ocl:VariableExp" location="190:49-190:50" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@iterators.0"/>
                      </body>
                      <iterators location="190:38-190:39" varName="e" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@body/@arguments.0"/>
                    </body>
                    <iterators location="190:14-190:15" varName="l" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@source/@source"/>
                  </condition>
                  <elseExpression xsi:type="ocl:IfExp" location="193:7-201:13">
                    <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="194:3-194:66" operationName="first">
                      <source xsi:type="ocl:IteratorExp" location="194:3-194:57" name="select">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="194:3-194:28" name="allIterateExps">
                          <source xsi:type="ocl:VariableExp" location="194:3-194:13">
                            <referredVariable href="new-model#/27"/>
                          </source>
                        </source>
                        <body xsi:type="ocl:OperatorCallExp" location="194:41-194:56" operationName="=">
                          <source xsi:type="ocl:VariableExp" location="194:41-194:45">
                            <referredVariable href="new-model#/28"/>
                          </source>
                          <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="194:48-194:56" name="result">
                            <source xsi:type="ocl:VariableExp" location="194:48-194:49" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@iterators.0"/>
                          </arguments>
                        </body>
                        <iterators location="194:37-194:38" varName="e" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@arguments.0/@source"/>
                      </source>
                    </thenExpression>
                    <condition xsi:type="ocl:IteratorExp" location="193:10-193:64" name="exists">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="193:10-193:35" name="allIterateExps">
                        <source xsi:type="ocl:VariableExp" location="193:10-193:20">
                          <referredVariable href="new-model#/25"/>
                        </source>
                      </source>
                      <body xsi:type="ocl:OperatorCallExp" location="193:48-193:63" operationName="=">
                        <source xsi:type="ocl:VariableExp" location="193:48-193:52">
                          <referredVariable href="new-model#/26"/>
                        </source>
                        <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="193:55-193:63" name="result">
                          <source xsi:type="ocl:VariableExp" location="193:55-193:56" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                        </arguments>
                      </body>
                      <iterators location="193:44-193:45" varName="e" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@arguments.0/@source"/>
                    </condition>
                    <elseExpression xsi:type="ocl:IfExp" location="195:7-201:7">
                      <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="197:3-199:13" operationName="first">
                        <source xsi:type="ocl:IteratorExp" location="197:3-198:51" name="select">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="197:3-197:22" name="allRules">
                            <source xsi:type="ocl:VariableExp" location="197:3-197:13">
                              <referredVariable href="new-model#/31"/>
                            </source>
                          </source>
                          <body xsi:type="ocl:IteratorExp" location="198:17-198:50" name="exists">
                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="198:17-198:28" name="variables">
                              <source xsi:type="ocl:VariableExp" location="198:17-198:18" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@iterators.0"/>
                            </source>
                            <body xsi:type="ocl:OperatorCallExp" location="198:41-198:49" operationName="=">
                              <source xsi:type="ocl:VariableExp" location="198:41-198:45">
                                <referredVariable href="new-model#/32"/>
                              </source>
                              <arguments xsi:type="ocl:VariableExp" location="198:48-198:49" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@iterators.0"/>
                            </body>
                            <iterators location="198:37-198:38" varName="e" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@body/@arguments.0"/>
                          </body>
                          <iterators location="198:13-198:14" varName="r" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@source/@source"/>
                        </source>
                      </thenExpression>
                      <condition xsi:type="ocl:IteratorExp" location="195:10-196:52" name="exists">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="195:10-195:29" name="allRules">
                          <source xsi:type="ocl:VariableExp" location="195:10-195:20">
                            <referredVariable href="new-model#/29"/>
                          </source>
                        </source>
                        <body xsi:type="ocl:IteratorExp" location="196:18-196:51" name="exists">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="196:18-196:29" name="variables">
                            <source xsi:type="ocl:VariableExp" location="196:18-196:19" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                          </source>
                          <body xsi:type="ocl:OperatorCallExp" location="196:42-196:50" operationName="=">
                            <source xsi:type="ocl:VariableExp" location="196:42-196:46">
                              <referredVariable href="new-model#/30"/>
                            </source>
                            <arguments xsi:type="ocl:VariableExp" location="196:49-196:50" referredVariable="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@iterators.0"/>
                          </body>
                          <iterators location="196:38-196:39" varName="e" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@body/@arguments.0"/>
                        </body>
                        <iterators location="196:14-196:15" varName="r" variableExp="//@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@source/@source"/>
                      </condition>
                      <elseExpression xsi:type="ocl:OclUndefinedExp" location="200:7-200:19"/>
                    </elseExpression>
                  </elseExpression>
                </elseExpression>
              </elseExpression>
            </elseExpression>
          </elseExpression>
        </initExpression>
        <type xsi:type="ocl:OclModelElement" location="180:66-180:77" name="Element">
          <model href="new-model#/1"/>
        </type>
      </feature>
      <context_ location="180:8-180:39">
        <context_ xsi:type="ocl:OclModelElement" location="180:16-180:39" name="VariableDeclaration">
          <model href="new-model#/1"/>
        </context_>
      </context_>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="236:1-266:38">
    <commentsBefore>-- This helper returns the immediate composite (container) of the contextual</commentsBefore>
    <commentsBefore>-- OclExpression.</commentsBefore>
    <commentsBefore>-- If the one of the &quot;ifExp1&quot;, &quot;ifExp2&quot; and &quot;ifExp3&quot; references of the</commentsBefore>
    <commentsBefore>-- contextual OclExpression is not undefined, the helper returns the pointed</commentsBefore>
    <commentsBefore>-- IfExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if its &quot;attribute&quot; is not undefined, the helper returns the</commentsBefore>
    <commentsBefore>-- pointed Attribute.</commentsBefore>
    <commentsBefore>-- Otherwise, if its &quot;operation&quot; is not undefined, the helper returns the</commentsBefore>
    <commentsBefore>-- pointed Operation.</commentsBefore>
    <commentsBefore>-- Otherwise, if its &quot;initializedVariable&quot; is not undefined, the helper returns</commentsBefore>
    <commentsBefore>-- the pointed VariableDeclaration.</commentsBefore>
    <commentsBefore>-- Otherwise, if its &quot;parentOperation&quot; is not undefined, the helper returns the</commentsBefore>
    <commentsBefore>-- pointed OperationCallExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if its &quot;loopExp&quot; is not undefined, the helper returns the pointed</commentsBefore>
    <commentsBefore>-- LoopExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if its &quot;letExp&quot; is not undefined, the helper returns the</commentsBefore>
    <commentsBefore>-- pointed LetExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if its &quot;collection&quot; is not undefined, the helper returns the</commentsBefore>
    <commentsBefore>-- pointed CollectionExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if its &quot;appliedProperty&quot; is not undefined, the helper returns the</commentsBefore>
    <commentsBefore>-- pointed PropertyCallExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if its &quot;operation&quot; is not undefined, the helper returns the</commentsBefore>
    <commentsBefore>-- pointed Operation.</commentsBefore>
    <commentsBefore>-- Otherwise, if there exists an InPattern that has the contextual OclExp as</commentsBefore>
    <commentsBefore>-- filter, the helper returns this InPattern.</commentsBefore>
    <commentsBefore>-- Otherwise, if there exists a Binding that has the contextual OclExp as</commentsBefore>
    <commentsBefore>-- value, the helper returns this Binding.</commentsBefore>
    <commentsBefore>-- Otherwise, if there exists a Query that has the contextual OclExp as body,</commentsBefore>
    <commentsBefore>-- the helper returns this Query.</commentsBefore>
    <commentsBefore>-- Otherwise, the helper retuns OclUndefined as default value.</commentsBefore>
    <commentsBefore>-- CONTEXT:	ATL!OclExpression</commentsBefore>
    <commentsBefore>-- RETURN:	ATL!Element</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing the VariableDeclarations that</commentsAfter>
    <commentsAfter>-- precede the contextual VariableDeclaration in its namespace.</commentsAfter>
    <commentsAfter>-- If the contextual VariableDeclaration is a PatternElement, the helper only</commentsAfter>
    <commentsAfter>-- returns this VD.</commentsAfter>
    <commentsAfter>-- Otherwise, it computes the container of the contextual VD. If the container</commentsAfter>
    <commentsAfter>-- is a LetExp, it returns a Sequence composed of the VD, and the results of</commentsAfter>
    <commentsAfter>-- the calls of the getUpD helper on the calculated container.</commentsAfter>
    <commentsAfter>-- If the container is an IteratorExp, the helper returns a Sequence composed</commentsAfter>
    <commentsAfter>-- of the VD and the results of the call of getUpD on the computed container.</commentsAfter>
    <commentsAfter>-- If the container is an IterateExp, the helper a Sequence containing the same</commentsAfter>
    <commentsAfter>-- elements that the one computed for an IteratorExp.</commentsAfter>
    <commentsAfter>-- Otherwise, the helper returns the only contextual VD as default value.</commentsAfter>
    <commentsAfter>-- CONTEXT:	ATL!VariableDeclaration</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsAfter>
    <definition location="236:8-266:37">
      <feature xsi:type="ocl:Attribute" location="236:39-266:37" name="immediateComposite">
        <initExpression xsi:type="ocl:IfExp" location="237:2-266:37">
          <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="237:43-237:54" name="ifExp1">
            <source xsi:type="ocl:VariableExp" location="237:43-237:47">
              <referredVariable href="new-model#/34"/>
            </source>
          </thenExpression>
          <condition xsi:type="ocl:OperatorCallExp" location="237:5-237:37" operationName="not">
            <source xsi:type="ocl:OperationCallExp" location="237:9-237:37" operationName="oclIsUndefined">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="237:9-237:20" name="ifExp1">
                <source xsi:type="ocl:VariableExp" location="237:9-237:13">
                  <referredVariable href="new-model#/33"/>
                </source>
              </source>
            </source>
          </condition>
          <elseExpression xsi:type="ocl:IfExp" location="238:7-266:31">
            <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="238:48-238:59" name="ifExp2">
              <source xsi:type="ocl:VariableExp" location="238:48-238:52">
                <referredVariable href="new-model#/36"/>
              </source>
            </thenExpression>
            <condition xsi:type="ocl:OperatorCallExp" location="238:10-238:42" operationName="not">
              <source xsi:type="ocl:OperationCallExp" location="238:14-238:42" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="238:14-238:25" name="ifExp2">
                  <source xsi:type="ocl:VariableExp" location="238:14-238:18">
                    <referredVariable href="new-model#/35"/>
                  </source>
                </source>
              </source>
            </condition>
            <elseExpression xsi:type="ocl:IfExp" location="239:7-266:25">
              <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="239:48-239:59" name="ifExp3">
                <source xsi:type="ocl:VariableExp" location="239:48-239:52">
                  <referredVariable href="new-model#/38"/>
                </source>
              </thenExpression>
              <condition xsi:type="ocl:OperatorCallExp" location="239:10-239:42" operationName="not">
                <source xsi:type="ocl:OperationCallExp" location="239:14-239:42" operationName="oclIsUndefined">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="239:14-239:25" name="ifExp3">
                    <source xsi:type="ocl:VariableExp" location="239:14-239:18">
                      <referredVariable href="new-model#/37"/>
                    </source>
                  </source>
                </source>
              </condition>
              <elseExpression xsi:type="ocl:IfExp" location="240:7-266:19">
                <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="240:53-240:69" name="attribute">
                  <source xsi:type="ocl:VariableExp" location="240:53-240:57">
                    <referredVariable href="new-model#/40"/>
                  </source>
                </thenExpression>
                <condition xsi:type="ocl:OperatorCallExp" location="240:10-240:47" operationName="not">
                  <source xsi:type="ocl:OperationCallExp" location="240:14-240:47" operationName="oclIsUndefined">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="240:14-240:30" name="attribute">
                      <source xsi:type="ocl:VariableExp" location="240:14-240:18">
                        <referredVariable href="new-model#/39"/>
                      </source>
                    </source>
                  </source>
                </condition>
                <elseExpression xsi:type="ocl:IfExp" location="241:7-266:13">
                  <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="241:53-241:69" name="operation">
                    <source xsi:type="ocl:VariableExp" location="241:53-241:57">
                      <referredVariable href="new-model#/42"/>
                    </source>
                  </thenExpression>
                  <condition xsi:type="ocl:OperatorCallExp" location="241:10-241:47" operationName="not">
                    <source xsi:type="ocl:OperationCallExp" location="241:14-241:47" operationName="oclIsUndefined">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="241:14-241:30" name="operation">
                        <source xsi:type="ocl:VariableExp" location="241:14-241:18">
                          <referredVariable href="new-model#/41"/>
                        </source>
                      </source>
                    </source>
                  </condition>
                  <elseExpression xsi:type="ocl:IfExp" location="242:7-266:7">
                    <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="243:8-243:32" name="initializedVariable">
                      <source xsi:type="ocl:VariableExp" location="243:8-243:12">
                        <referredVariable href="new-model#/44"/>
                      </source>
                    </thenExpression>
                    <condition xsi:type="ocl:OperatorCallExp" location="242:10-242:55" operationName="not">
                      <source xsi:type="ocl:OperationCallExp" location="242:14-242:55" operationName="oclIsUndefined">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="242:14-242:38" name="initializedVariable">
                          <source xsi:type="ocl:VariableExp" location="242:14-242:18">
                            <referredVariable href="new-model#/43"/>
                          </source>
                        </source>
                      </source>
                    </condition>
                    <elseExpression xsi:type="ocl:IfExp" location="244:7-265:43">
                      <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="244:57-244:77" name="parentOperation">
                        <source xsi:type="ocl:VariableExp" location="244:57-244:61">
                          <referredVariable href="new-model#/46"/>
                        </source>
                      </thenExpression>
                      <condition xsi:type="ocl:OperatorCallExp" location="244:10-244:51" operationName="not">
                        <source xsi:type="ocl:OperationCallExp" location="244:14-244:51" operationName="oclIsUndefined">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="244:14-244:34" name="parentOperation">
                            <source xsi:type="ocl:VariableExp" location="244:14-244:18">
                              <referredVariable href="new-model#/45"/>
                            </source>
                          </source>
                        </source>
                      </condition>
                      <elseExpression xsi:type="ocl:IfExp" location="245:7-265:37">
                        <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="245:49-245:61" name="loopExp">
                          <source xsi:type="ocl:VariableExp" location="245:49-245:53">
                            <referredVariable href="new-model#/48"/>
                          </source>
                        </thenExpression>
                        <condition xsi:type="ocl:OperatorCallExp" location="245:10-245:43" operationName="not">
                          <source xsi:type="ocl:OperationCallExp" location="245:14-245:43" operationName="oclIsUndefined">
                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="245:14-245:26" name="loopExp">
                              <source xsi:type="ocl:VariableExp" location="245:14-245:18">
                                <referredVariable href="new-model#/47"/>
                              </source>
                            </source>
                          </source>
                        </condition>
                        <elseExpression xsi:type="ocl:IfExp" location="246:7-265:31">
                          <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="246:48-246:59" name="letExp">
                            <source xsi:type="ocl:VariableExp" location="246:48-246:52">
                              <referredVariable href="new-model#/50"/>
                            </source>
                          </thenExpression>
                          <condition xsi:type="ocl:OperatorCallExp" location="246:10-246:42" operationName="not">
                            <source xsi:type="ocl:OperationCallExp" location="246:14-246:42" operationName="oclIsUndefined">
                              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="246:14-246:25" name="letExp">
                                <source xsi:type="ocl:VariableExp" location="246:14-246:18">
                                  <referredVariable href="new-model#/49"/>
                                </source>
                              </source>
                            </source>
                          </condition>
                          <elseExpression xsi:type="ocl:IfExp" location="247:7-265:25">
                            <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="247:52-247:67" name="collection">
                              <source xsi:type="ocl:VariableExp" location="247:52-247:56">
                                <referredVariable href="new-model#/52"/>
                              </source>
                            </thenExpression>
                            <condition xsi:type="ocl:OperatorCallExp" location="247:10-247:46" operationName="not">
                              <source xsi:type="ocl:OperationCallExp" location="247:14-247:46" operationName="oclIsUndefined">
                                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="247:14-247:29" name="collection">
                                  <source xsi:type="ocl:VariableExp" location="247:14-247:18">
                                    <referredVariable href="new-model#/51"/>
                                  </source>
                                </source>
                              </source>
                            </condition>
                            <elseExpression xsi:type="ocl:IfExp" location="248:7-265:19">
                              <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="248:57-248:77" name="appliedProperty">
                                <source xsi:type="ocl:VariableExp" location="248:57-248:61">
                                  <referredVariable href="new-model#/54"/>
                                </source>
                              </thenExpression>
                              <condition xsi:type="ocl:OperatorCallExp" location="248:10-248:51" operationName="not">
                                <source xsi:type="ocl:OperationCallExp" location="248:14-248:51" operationName="oclIsUndefined">
                                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="248:14-248:34" name="appliedProperty">
                                    <source xsi:type="ocl:VariableExp" location="248:14-248:18">
                                      <referredVariable href="new-model#/53"/>
                                    </source>
                                  </source>
                                </source>
                              </condition>
                              <elseExpression xsi:type="ocl:IfExp" location="249:7-265:13">
                                <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="250:8-250:70" operationName="first">
                                  <source xsi:type="ocl:IteratorExp" location="250:8-250:61" name="select">
                                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="250:8-250:32" name="allInPatterns">
                                      <source xsi:type="ocl:VariableExp" location="250:8-250:18">
                                        <referredVariable href="new-model#/57"/>
                                      </source>
                                    </source>
                                    <body xsi:type="ocl:OperatorCallExp" location="250:45-250:60" operationName="=">
                                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="250:45-250:53" name="filter">
                                        <source xsi:type="ocl:VariableExp" location="250:45-250:46" referredVariable="//@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@iterators.0"/>
                                      </source>
                                      <arguments xsi:type="ocl:VariableExp" location="250:56-250:60">
                                        <referredVariable href="new-model#/58"/>
                                      </arguments>
                                    </body>
                                    <iterators location="250:41-250:42" varName="e" variableExp="//@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@source/@source"/>
                                  </source>
                                </thenExpression>
                                <condition xsi:type="ocl:IteratorExp" location="249:10-249:63" name="exists">
                                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="249:10-249:34" name="allInPatterns">
                                    <source xsi:type="ocl:VariableExp" location="249:10-249:20">
                                      <referredVariable href="new-model#/55"/>
                                    </source>
                                  </source>
                                  <body xsi:type="ocl:OperatorCallExp" location="249:47-249:62" operationName="=">
                                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="249:47-249:55" name="filter">
                                      <source xsi:type="ocl:VariableExp" location="249:47-249:48" referredVariable="//@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                                    </source>
                                    <arguments xsi:type="ocl:VariableExp" location="249:58-249:62">
                                      <referredVariable href="new-model#/56"/>
                                    </arguments>
                                  </body>
                                  <iterators location="249:43-249:44" varName="e" variableExp="//@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@source/@source"/>
                                </condition>
                                <elseExpression xsi:type="ocl:IfExp" location="251:7-265:7">
                                  <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="252:8-252:67" operationName="first">
                                    <source xsi:type="ocl:IteratorExp" location="252:8-252:58" name="select">
                                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="252:8-252:30" name="allBindings">
                                        <source xsi:type="ocl:VariableExp" location="252:8-252:18">
                                          <referredVariable href="new-model#/61"/>
                                        </source>
                                      </source>
                                      <body xsi:type="ocl:OperatorCallExp" location="252:43-252:57" operationName="=">
                                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="252:43-252:50" name="value">
                                          <source xsi:type="ocl:VariableExp" location="252:43-252:44" referredVariable="//@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@iterators.0"/>
                                        </source>
                                        <arguments xsi:type="ocl:VariableExp" location="252:53-252:57">
                                          <referredVariable href="new-model#/62"/>
                                        </arguments>
                                      </body>
                                      <iterators location="252:39-252:40" varName="e" variableExp="//@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@source/@source"/>
                                    </source>
                                  </thenExpression>
                                  <condition xsi:type="ocl:IteratorExp" location="251:10-251:60" name="exists">
                                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="251:10-251:32" name="allBindings">
                                      <source xsi:type="ocl:VariableExp" location="251:10-251:20">
                                        <referredVariable href="new-model#/59"/>
                                      </source>
                                    </source>
                                    <body xsi:type="ocl:OperatorCallExp" location="251:45-251:59" operationName="=">
                                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="251:45-251:52" name="value">
                                        <source xsi:type="ocl:VariableExp" location="251:45-251:46" referredVariable="//@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                                      </source>
                                      <arguments xsi:type="ocl:VariableExp" location="251:55-251:59">
                                        <referredVariable href="new-model#/60"/>
                                      </arguments>
                                    </body>
                                    <iterators location="251:41-251:42" varName="e" variableExp="//@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@source/@source"/>
                                  </condition>
                                  <elseExpression xsi:type="ocl:IfExp" location="254:3-264:8">
                                    <thenExpression xsi:type="ocl:IfExp" location="256:4-261:9">
                                      <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="258:5-258:24" name="queryElt">
                                        <source xsi:type="ocl:VariableExp" location="258:5-258:15">
                                          <referredVariable href="new-model#/66"/>
                                        </source>
                                      </thenExpression>
                                      <condition xsi:type="ocl:OperatorCallExp" location="256:7-256:38" operationName="=">
                                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="256:7-256:31" name="body">
                                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="256:7-256:26" name="queryElt">
                                            <source xsi:type="ocl:VariableExp" location="256:7-256:17">
                                              <referredVariable href="new-model#/64"/>
                                            </source>
                                          </source>
                                        </source>
                                        <arguments xsi:type="ocl:VariableExp" location="256:34-256:38">
                                          <referredVariable href="new-model#/65"/>
                                        </arguments>
                                      </condition>
                                      <elseExpression xsi:type="ocl:OclUndefinedExp" location="260:5-260:17"/>
                                    </thenExpression>
                                    <condition xsi:type="ocl:OperatorCallExp" location="254:6-254:46" operationName="not">
                                      <source xsi:type="ocl:OperationCallExp" location="254:10-254:46" operationName="oclIsUndefined">
                                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="254:10-254:29" name="queryElt">
                                          <source xsi:type="ocl:VariableExp" location="254:10-254:20">
                                            <referredVariable href="new-model#/63"/>
                                          </source>
                                        </source>
                                      </source>
                                    </condition>
                                    <elseExpression xsi:type="ocl:OclUndefinedExp" location="263:4-263:16"/>
                                  </elseExpression>
                                </elseExpression>
                              </elseExpression>
                            </elseExpression>
                          </elseExpression>
                        </elseExpression>
                      </elseExpression>
                    </elseExpression>
                  </elseExpression>
                </elseExpression>
              </elseExpression>
            </elseExpression>
          </elseExpression>
        </initExpression>
        <type xsi:type="ocl:OclModelElement" location="236:60-236:71" name="Element">
          <model href="new-model#/1"/>
        </type>
      </feature>
      <context_ location="236:8-236:33">
        <context_ xsi:type="ocl:OclModelElement" location="236:16-236:33" name="OclExpression">
          <model href="new-model#/1"/>
        </context_>
      </context_>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="283:1-317:8">
    <commentsBefore>-- This helper computes a sequence containing the VariableDeclarations that</commentsBefore>
    <commentsBefore>-- precede the contextual VariableDeclaration in its namespace.</commentsBefore>
    <commentsBefore>-- If the contextual VariableDeclaration is a PatternElement, the helper only</commentsBefore>
    <commentsBefore>-- returns this VD.</commentsBefore>
    <commentsBefore>-- Otherwise, it computes the container of the contextual VD. If the container</commentsBefore>
    <commentsBefore>-- is a LetExp, it returns a Sequence composed of the VD, and the results of</commentsBefore>
    <commentsBefore>-- the calls of the getUpD helper on the calculated container.</commentsBefore>
    <commentsBefore>-- If the container is an IteratorExp, the helper returns a Sequence composed</commentsBefore>
    <commentsBefore>-- of the VD and the results of the call of getUpD on the computed container.</commentsBefore>
    <commentsBefore>-- If the container is an IterateExp, the helper a Sequence containing the same</commentsBefore>
    <commentsBefore>-- elements that the one computed for an IteratorExp.</commentsBefore>
    <commentsBefore>-- Otherwise, the helper returns the only contextual VD as default value.</commentsBefore>
    <commentsBefore>-- CONTEXT:	ATL!VariableDeclaration</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing the VariableDeclarations that are</commentsAfter>
    <commentsAfter>-- defined higher than the contextual OclExpression in its namespace tree.</commentsAfter>
    <commentsAfter>-- The helper first computes the container of the contextual OclExp. If this</commentsAfter>
    <commentsAfter>-- container is undefined, it retuns an empty sequence.</commentsAfter>
    <commentsAfter>-- Otherwise, if this container is not an OclExpression:</commentsAfter>
    <commentsAfter>--  * If the container is a RuleVariableDeclaration, the helper returns a</commentsAfter>
    <commentsAfter>--    sequence containing all the named elements of the rule that contains this</commentsAfter>
    <commentsAfter>--    InPattern.</commentsAfter>
    <commentsAfter>--  * If the container is a Binding, the helper returns a sequence containing</commentsAfter>
    <commentsAfter>--    all the named elements of the rule that contains this Binding.</commentsAfter>
    <commentsAfter>-- Otherwise, if the computed container is an OclExpression:</commentsAfter>
    <commentsAfter>--  * If the container is a LetExp, the helper returns a sequence composed of</commentsAfter>
    <commentsAfter>--    the LetExp variable and the result of its recursive call on the LetExp.</commentsAfter>
    <commentsAfter>--  * If the container is an IfExp, the helper returns a sequence composed of</commentsAfter>
    <commentsAfter>--    the result of its recursive call on the IfExp.</commentsAfter>
    <commentsAfter>--  * If the container is an IteratorExp, if the contextual OclExp is the</commentsAfter>
    <commentsAfter>--    source of the IteratorExp then the helper returns the result of its</commentsAfter>
    <commentsAfter>--    recursive call on the IteratorExp, else it returns this result with the</commentsAfter>
    <commentsAfter>--    &quot;iterators&quot; elements of the IteratorExp.</commentsAfter>
    <commentsAfter>--  * If the container is an IterateExp, the helper returns the same sequences</commentsAfter>
    <commentsAfter>--    that for an IteratorExp, with the additional &quot;result&quot; element in case the</commentsAfter>
    <commentsAfter>--    contextual OclExp is not the source of the IterateExp.</commentsAfter>
    <commentsAfter>-- Otherwise, the helper returns an empty sequence as default value.</commentsAfter>
    <commentsAfter>-- CONTEXT:	ATL!OclExpression</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsAfter>
    <definition location="283:8-317:7">
      <feature xsi:type="ocl:Operation" location="284:7-317:7" name="getDeclarations">
        <returnType xsi:type="ocl:SequenceType" location="284:27-284:60">
          <elementType xsi:type="ocl:OclModelElement" location="284:36-284:59" name="VariableDeclaration">
            <model href="new-model#/1"/>
          </elementType>
        </returnType>
        <body xsi:type="ocl:IfExp" location="285:2-317:7">
          <thenExpression xsi:type="ocl:SequenceExp" location="287:3-287:17">
            <elements xsi:type="ocl:VariableExp" location="287:12-287:16">
              <referredVariable href="new-model#/68"/>
            </elements>
          </thenExpression>
          <condition xsi:type="ocl:OperationCallExp" location="285:5-285:41" operationName="oclIsKindOf">
            <source xsi:type="ocl:VariableExp" location="285:5-285:9">
              <referredVariable href="new-model#/67"/>
            </source>
            <arguments xsi:type="ocl:OclModelElement" location="285:22-285:40" name="PatternElement">
              <model href="new-model#/1"/>
            </arguments>
          </condition>
          <elseExpression xsi:type="ocl:LetExp" location="289:3-316:8">
            <variable location="289:7-289:56" varName="container" variableExp="//@elements.17/@definition/@feature/@body/@elseExpression/@in_/@condition/@source //@elements.17/@definition/@feature/@body/@elseExpression/@in_/@thenExpression/@source/@elements.1/@source //@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@condition/@source //@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@thenExpression/@source/@elements.1/@source //@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@elseExpression/@condition/@source //@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@elseExpression/@thenExpression/@source/@elements.1/@source">
              <type xsi:type="ocl:OclModelElement" location="289:19-289:30" name="Element">
                <model href="new-model#/1"/>
              </type>
              <initExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="289:33-289:56" name="immediateComposite">
                <source xsi:type="ocl:VariableExp" location="289:33-289:37">
                  <referredVariable href="new-model#/69"/>
                </source>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:IfExp" location="290:3-316:8">
              <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="292:4-295:16" operationName="flatten">
                <source xsi:type="ocl:SequenceExp" location="292:4-295:5">
                  <elements xsi:type="ocl:VariableExp" location="293:5-293:9">
                    <referredVariable href="new-model#/70"/>
                  </elements>
                  <elements xsi:type="ocl:OperationCallExp" location="294:5-294:23" operationName="getUpD">
                    <source xsi:type="ocl:VariableExp" location="294:5-294:14" referredVariable="//@elements.17/@definition/@feature/@body/@elseExpression/@variable"/>
                  </elements>
                </source>
              </thenExpression>
              <condition xsi:type="ocl:OperationCallExp" location="290:6-290:39" operationName="oclIsTypeOf">
                <source xsi:type="ocl:VariableExp" location="290:6-290:15" referredVariable="//@elements.17/@definition/@feature/@body/@elseExpression/@variable"/>
                <arguments xsi:type="ocl:OclModelElement" location="290:28-290:38" name="LetExp">
                  <model href="new-model#/1"/>
                </arguments>
              </condition>
              <elseExpression xsi:type="ocl:IfExp" location="297:4-315:9">
                <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="299:5-302:17" operationName="flatten">
                  <source xsi:type="ocl:SequenceExp" location="299:5-302:6">
                    <elements xsi:type="ocl:VariableExp" location="300:6-300:10">
                      <referredVariable href="new-model#/71"/>
                    </elements>
                    <elements xsi:type="ocl:OperationCallExp" location="301:6-301:24" operationName="getUpD">
                      <source xsi:type="ocl:VariableExp" location="301:6-301:15" referredVariable="//@elements.17/@definition/@feature/@body/@elseExpression/@variable"/>
                    </elements>
                  </source>
                </thenExpression>
                <condition xsi:type="ocl:OperationCallExp" location="297:7-297:45" operationName="oclIsTypeOf">
                  <source xsi:type="ocl:VariableExp" location="297:7-297:16" referredVariable="//@elements.17/@definition/@feature/@body/@elseExpression/@variable"/>
                  <arguments xsi:type="ocl:OclModelElement" location="297:29-297:44" name="IteratorExp">
                    <model href="new-model#/1"/>
                  </arguments>
                </condition>
                <elseExpression xsi:type="ocl:IfExp" location="304:5-314:10">
                  <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="306:6-309:18" operationName="flatten">
                    <source xsi:type="ocl:SequenceExp" location="306:6-309:7">
                      <elements xsi:type="ocl:VariableExp" location="307:7-307:11">
                        <referredVariable href="new-model#/72"/>
                      </elements>
                      <elements xsi:type="ocl:OperationCallExp" location="308:7-308:25" operationName="getUpD">
                        <source xsi:type="ocl:VariableExp" location="308:7-308:16" referredVariable="//@elements.17/@definition/@feature/@body/@elseExpression/@variable"/>
                      </elements>
                    </source>
                  </thenExpression>
                  <condition xsi:type="ocl:OperationCallExp" location="304:8-304:45" operationName="oclIsTypeOf">
                    <source xsi:type="ocl:VariableExp" location="304:8-304:17" referredVariable="//@elements.17/@definition/@feature/@body/@elseExpression/@variable"/>
                    <arguments xsi:type="ocl:OclModelElement" location="304:30-304:44" name="IterateExp">
                      <model href="new-model#/1"/>
                    </arguments>
                  </condition>
                  <elseExpression xsi:type="ocl:CollectionOperationCallExp" location="311:6-313:18" operationName="flatten">
                    <source xsi:type="ocl:SequenceExp" location="311:6-313:7">
                      <elements xsi:type="ocl:VariableExp" location="312:7-312:11">
                        <referredVariable href="new-model#/73"/>
                      </elements>
                    </source>
                  </elseExpression>
                </elseExpression>
              </elseExpression>
            </in_>
          </elseExpression>
        </body>
      </feature>
      <context_ location="283:8-283:39">
        <context_ xsi:type="ocl:OclModelElement" location="283:16-283:39" name="VariableDeclaration">
          <model href="new-model#/1"/>
        </context_>
      </context_>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="345:1-401:38">
    <commentsBefore>-- This helper computes a sequence containing the VariableDeclarations that are</commentsBefore>
    <commentsBefore>-- defined higher than the contextual OclExpression in its namespace tree.</commentsBefore>
    <commentsBefore>-- The helper first computes the container of the contextual OclExp. If this</commentsBefore>
    <commentsBefore>-- container is undefined, it retuns an empty sequence.</commentsBefore>
    <commentsBefore>-- Otherwise, if this container is not an OclExpression:</commentsBefore>
    <commentsBefore>--  * If the container is a RuleVariableDeclaration, the helper returns a</commentsBefore>
    <commentsBefore>--    sequence containing all the named elements of the rule that contains this</commentsBefore>
    <commentsBefore>--    InPattern.</commentsBefore>
    <commentsBefore>--  * If the container is a Binding, the helper returns a sequence containing</commentsBefore>
    <commentsBefore>--    all the named elements of the rule that contains this Binding.</commentsBefore>
    <commentsBefore>-- Otherwise, if the computed container is an OclExpression:</commentsBefore>
    <commentsBefore>--  * If the container is a LetExp, the helper returns a sequence composed of</commentsBefore>
    <commentsBefore>--    the LetExp variable and the result of its recursive call on the LetExp.</commentsBefore>
    <commentsBefore>--  * If the container is an IfExp, the helper returns a sequence composed of</commentsBefore>
    <commentsBefore>--    the result of its recursive call on the IfExp.</commentsBefore>
    <commentsBefore>--  * If the container is an IteratorExp, if the contextual OclExp is the</commentsBefore>
    <commentsBefore>--    source of the IteratorExp then the helper returns the result of its</commentsBefore>
    <commentsBefore>--    recursive call on the IteratorExp, else it returns this result with the</commentsBefore>
    <commentsBefore>--    &quot;iterators&quot; elements of the IteratorExp.</commentsBefore>
    <commentsBefore>--  * If the container is an IterateExp, the helper returns the same sequences</commentsBefore>
    <commentsBefore>--    that for an IteratorExp, with the additional &quot;result&quot; element in case the</commentsBefore>
    <commentsBefore>--    contextual OclExp is not the source of the IterateExp.</commentsBefore>
    <commentsBefore>-- Otherwise, the helper returns an empty sequence as default value.</commentsBefore>
    <commentsBefore>-- CONTEXT:	ATL!OclExpression</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsBefore>
    <commentsAfter>-- This helper computes a sequence containing the VariableDeclarations that are</commentsAfter>
    <commentsAfter>-- defined lower than the contextual OclExpression in its namespace tree.</commentsAfter>
    <commentsAfter>-- If the contextual OclExpression is a LetExp, the helper returns a sequence</commentsAfter>
    <commentsAfter>-- composed of the LetExp variable and the result of its recursive call on the</commentsAfter>
    <commentsAfter>-- &quot;in_&quot; reference of the LetExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if the contextual OclExpression is a IfExp, the helper returns a</commentsAfter>
    <commentsAfter>-- sequence composed of the results of its recursive calls on the &quot;condition&quot;,</commentsAfter>
    <commentsAfter>-- &quot;thenExpression&quot; and &quot;elseExpression&quot; references of the IfExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if the contextual OclExpression is an IteratorExp, the helper</commentsAfter>
    <commentsAfter>-- returns a sequence composed of the IteratorExp iterators along with the</commentsAfter>
    <commentsAfter>-- results of its recursive calls on the &quot;source&quot; and the &quot;body&quot; references</commentsAfter>
    <commentsAfter>-- of the IteratorExp.</commentsAfter>
    <commentsAfter>-- Otherwise, if the contextual OclExpression is an IterateExp, the helper</commentsAfter>
    <commentsAfter>-- returns the sequence returned for an IteratorExp with its additional result</commentsAfter>
    <commentsAfter>-- element.</commentsAfter>
    <commentsAfter>-- Otherwise, the helper returns an empty sequence as default value.</commentsAfter>
    <commentsAfter>-- CONTEXT:	ATL!OclExpression</commentsAfter>
    <commentsAfter>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsAfter>
    <commentsAfter>--helper context ATL!OclExpression</commentsAfter>
    <commentsAfter>--	def: getDownD() : Sequence(ATL!VariableDeclaration) =</commentsAfter>
    <commentsAfter>--	if self.oclIsTypeOf(ATL!LetExp) then</commentsAfter>
    <commentsAfter>--		Sequence{</commentsAfter>
    <commentsAfter>--			self.variable,</commentsAfter>
    <commentsAfter>--			self.in_.getDownD()</commentsAfter>
    <commentsAfter>--		}->flatten()</commentsAfter>
    <commentsAfter>--	else if self.oclIsTypeOf(ATL!IfExp) then</commentsAfter>
    <commentsAfter>--		Sequence{</commentsAfter>
    <commentsAfter>--			self.condition.getDownD(),</commentsAfter>
    <commentsAfter>--			self.thenExpression.getDownD(),</commentsAfter>
    <commentsAfter>--			self.elseExpression.getDownD()</commentsAfter>
    <commentsAfter>--		}->flatten()</commentsAfter>
    <commentsAfter>--	else if self.oclIsTypeOf(ATL!IteratorExp) then</commentsAfter>
    <commentsAfter>--		Sequence{</commentsAfter>
    <commentsAfter>--			self.iterators,</commentsAfter>
    <commentsAfter>--			self.source.getDownD(),</commentsAfter>
    <commentsAfter>--			self.body.getDownD()</commentsAfter>
    <commentsAfter>--		}->flatten()</commentsAfter>
    <commentsAfter>--	else if self.oclIsTypeOf(ATL!IterateExp) then</commentsAfter>
    <commentsAfter>--		Sequence{</commentsAfter>
    <commentsAfter>--			self.iterators,</commentsAfter>
    <commentsAfter>--			self.result,</commentsAfter>
    <commentsAfter>--			self.source.getDownD(),</commentsAfter>
    <commentsAfter>--			self.body.getDownD()</commentsAfter>
    <commentsAfter>--		}->flatten()</commentsAfter>
    <commentsAfter>--	else Sequence{}</commentsAfter>
    <commentsAfter>--	endif endif endif endif;</commentsAfter>
    <commentsAfter>-- This helper returns the root composite (container) of the contextual</commentsAfter>
    <commentsAfter>-- OclExpression. For this purpose, the helper first computes the immediate</commentsAfter>
    <commentsAfter>-- composite of the contextual OclExpression.</commentsAfter>
    <commentsAfter>-- If this container is undefined, the helper returns OclUndefined.</commentsAfter>
    <commentsAfter>-- Otherwise, if it is a kind of OclExpression, the helper returns the value</commentsAfter>
    <commentsAfter>-- provided by its recursive call on the computed container.</commentsAfter>
    <commentsAfter>-- Finally, if this container is not an OclExpression, the root composite has</commentsAfter>
    <commentsAfter>-- been reached (Binding/InPattern/Operation/Query/Attribute) and is returned.</commentsAfter>
    <commentsAfter>-- CONTEXT:	ATL!OclExpression</commentsAfter>
    <commentsAfter>-- RETURN:	ATL!Element</commentsAfter>
    <definition location="345:8-401:37">
      <feature xsi:type="ocl:Operation" location="346:7-401:37" name="getUpD">
        <returnType xsi:type="ocl:SequenceType" location="346:18-346:51">
          <elementType xsi:type="ocl:OclModelElement" location="346:27-346:50" name="VariableDeclaration">
            <model href="new-model#/1"/>
          </elementType>
        </returnType>
        <body xsi:type="ocl:LetExp" location="347:2-401:37">
          <variable location="347:6-347:55" varName="container" variableExp="//@elements.18/@definition/@feature/@body/@in_/@condition/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@condition/@source/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@thenExpression/@condition/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@thenExpression/@thenExpression/@source/@elements.0/@source/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@thenExpression/@elseExpression/@condition/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@thenExpression/@elseExpression/@thenExpression/@source/@elements.0/@source/@source/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@condition/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@thenExpression/@source/@elements.0/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@thenExpression/@source/@elements.1/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@condition/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@elements.0/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@condition/@source/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@thenExpression/@source/@elements.0/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@elseExpression/@source/@elements.0/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@elseExpression/@source/@elements.1/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@condition/@source/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@thenExpression/@source/@elements.0/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@elseExpression/@source/@elements.0/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@elseExpression/@source/@elements.1/@source //@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@elseExpression/@source/@elements.2/@source">
            <type xsi:type="ocl:OclModelElement" location="347:18-347:29" name="Element">
              <model href="new-model#/1"/>
            </type>
            <initExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="347:32-347:55" name="immediateComposite">
              <source xsi:type="ocl:VariableExp" location="347:32-347:36">
                <referredVariable href="new-model#/74"/>
              </source>
            </initExpression>
          </variable>
          <in_ xsi:type="ocl:IfExp" location="348:2-401:37">
            <thenExpression xsi:type="ocl:SequenceExp" location="349:3-349:13"/>
            <condition xsi:type="ocl:OperationCallExp" location="348:5-348:31" operationName="oclIsUndefined">
              <source xsi:type="ocl:VariableExp" location="348:5-348:14" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
            </condition>
            <elseExpression xsi:type="ocl:IfExp" location="350:7-401:31">
              <thenExpression xsi:type="ocl:IfExp" location="351:3-365:8">
                <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="353:4-355:16" operationName="flatten">
                  <source xsi:type="ocl:SequenceExp" location="353:4-355:5">
                    <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="354:5-354:35" name="namedElements">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="354:5-354:21" name="rule">
                        <source xsi:type="ocl:VariableExp" location="354:5-354:14" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                      </source>
                    </elements>
                  </source>
                </thenExpression>
                <condition xsi:type="ocl:OperationCallExp" location="351:6-351:56" operationName="oclIsTypeOf">
                  <source xsi:type="ocl:VariableExp" location="351:6-351:15" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                  <arguments xsi:type="ocl:OclModelElement" location="351:28-351:55" name="RuleVariableDeclaration">
                    <model href="new-model#/1"/>
                  </arguments>
                </condition>
                <elseExpression xsi:type="ocl:IfExp" location="357:4-364:9">
                  <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="359:5-361:17" operationName="flatten">
                    <source xsi:type="ocl:SequenceExp" location="359:5-361:6">
                      <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="360:6-360:54" name="namedElements">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="360:6-360:40" name="rule">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="360:6-360:33" name="outPatternElement">
                            <source xsi:type="ocl:VariableExp" location="360:6-360:15" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                          </source>
                        </source>
                      </elements>
                    </source>
                  </thenExpression>
                  <condition xsi:type="ocl:OperationCallExp" location="357:7-357:41" operationName="oclIsTypeOf">
                    <source xsi:type="ocl:VariableExp" location="357:7-357:16" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                    <arguments xsi:type="ocl:OclModelElement" location="357:29-357:40" name="Binding">
                      <model href="new-model#/1"/>
                    </arguments>
                  </condition>
                  <elseExpression xsi:type="ocl:SequenceExp" location="363:5-363:15"/>
                </elseExpression>
              </thenExpression>
              <condition xsi:type="ocl:OperatorCallExp" location="350:10-350:54" operationName="not">
                <source xsi:type="ocl:OperationCallExp" location="350:14-350:54" operationName="oclIsKindOf">
                  <source xsi:type="ocl:VariableExp" location="350:14-350:23" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                  <arguments xsi:type="ocl:OclModelElement" location="350:36-350:53" name="OclExpression">
                    <model href="new-model#/1"/>
                  </arguments>
                </source>
              </condition>
              <elseExpression xsi:type="ocl:IfExp" location="366:7-401:25">
                <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="367:3-370:15" operationName="flatten">
                  <source xsi:type="ocl:SequenceExp" location="367:3-370:4">
                    <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="368:4-368:22" name="variable">
                      <source xsi:type="ocl:VariableExp" location="368:4-368:13" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                    </elements>
                    <elements xsi:type="ocl:OperationCallExp" location="369:4-369:22" operationName="getUpD">
                      <source xsi:type="ocl:VariableExp" location="369:4-369:13" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                    </elements>
                  </source>
                </thenExpression>
                <condition xsi:type="ocl:OperationCallExp" location="366:10-366:43" operationName="oclIsTypeOf">
                  <source xsi:type="ocl:VariableExp" location="366:10-366:19" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                  <arguments xsi:type="ocl:OclModelElement" location="366:32-366:42" name="LetExp">
                    <model href="new-model#/1"/>
                  </arguments>
                </condition>
                <elseExpression xsi:type="ocl:IfExp" location="371:7-401:19">
                  <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="372:3-374:15" operationName="flatten">
                    <source xsi:type="ocl:SequenceExp" location="372:3-374:4">
                      <elements xsi:type="ocl:OperationCallExp" location="373:4-373:22" operationName="getUpD">
                        <source xsi:type="ocl:VariableExp" location="373:4-373:13" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                      </elements>
                    </source>
                  </thenExpression>
                  <condition xsi:type="ocl:OperationCallExp" location="371:10-371:42" operationName="oclIsTypeOf">
                    <source xsi:type="ocl:VariableExp" location="371:10-371:19" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                    <arguments xsi:type="ocl:OclModelElement" location="371:32-371:41" name="IfExp">
                      <model href="new-model#/1"/>
                    </arguments>
                  </condition>
                  <elseExpression xsi:type="ocl:IfExp" location="375:7-401:13">
                    <thenExpression xsi:type="ocl:IfExp" location="376:3-386:8">
                      <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="378:4-380:16" operationName="flatten">
                        <source xsi:type="ocl:SequenceExp" location="378:4-380:5">
                          <elements xsi:type="ocl:OperationCallExp" location="379:5-379:23" operationName="getUpD">
                            <source xsi:type="ocl:VariableExp" location="379:5-379:14" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                          </elements>
                        </source>
                      </thenExpression>
                      <condition xsi:type="ocl:OperatorCallExp" location="376:6-376:29" operationName="=">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="376:6-376:22" name="source">
                          <source xsi:type="ocl:VariableExp" location="376:6-376:15" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                        </source>
                        <arguments xsi:type="ocl:VariableExp" location="376:25-376:29">
                          <referredVariable href="new-model#/75"/>
                        </arguments>
                      </condition>
                      <elseExpression xsi:type="ocl:CollectionOperationCallExp" location="382:4-385:16" operationName="flatten">
                        <source xsi:type="ocl:SequenceExp" location="382:4-385:5">
                          <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="383:5-383:24" name="iterators">
                            <source xsi:type="ocl:VariableExp" location="383:5-383:14" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                          </elements>
                          <elements xsi:type="ocl:OperationCallExp" location="384:5-384:23" operationName="getUpD">
                            <source xsi:type="ocl:VariableExp" location="384:5-384:14" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                          </elements>
                        </source>
                      </elseExpression>
                    </thenExpression>
                    <condition xsi:type="ocl:OperationCallExp" location="375:10-375:48" operationName="oclIsTypeOf">
                      <source xsi:type="ocl:VariableExp" location="375:10-375:19" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                      <arguments xsi:type="ocl:OclModelElement" location="375:32-375:47" name="IteratorExp">
                        <model href="new-model#/1"/>
                      </arguments>
                    </condition>
                    <elseExpression xsi:type="ocl:IfExp" location="387:7-401:7">
                      <thenExpression xsi:type="ocl:IfExp" location="388:3-399:8">
                        <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="390:4-392:16" operationName="flatten">
                          <source xsi:type="ocl:SequenceExp" location="390:4-392:5">
                            <elements xsi:type="ocl:OperationCallExp" location="391:5-391:23" operationName="getUpD">
                              <source xsi:type="ocl:VariableExp" location="391:5-391:14" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                            </elements>
                          </source>
                        </thenExpression>
                        <condition xsi:type="ocl:OperatorCallExp" location="388:6-388:29" operationName="=">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="388:6-388:22" name="source">
                            <source xsi:type="ocl:VariableExp" location="388:6-388:15" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                          </source>
                          <arguments xsi:type="ocl:VariableExp" location="388:25-388:29">
                            <referredVariable href="new-model#/76"/>
                          </arguments>
                        </condition>
                        <elseExpression xsi:type="ocl:CollectionOperationCallExp" location="394:4-398:16" operationName="flatten">
                          <source xsi:type="ocl:SequenceExp" location="394:4-398:5">
                            <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="395:5-395:24" name="iterators">
                              <source xsi:type="ocl:VariableExp" location="395:5-395:14" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                            </elements>
                            <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="396:5-396:21" name="result">
                              <source xsi:type="ocl:VariableExp" location="396:5-396:14" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                            </elements>
                            <elements xsi:type="ocl:OperationCallExp" location="397:5-397:23" operationName="getUpD">
                              <source xsi:type="ocl:VariableExp" location="397:5-397:14" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                            </elements>
                          </source>
                        </elseExpression>
                      </thenExpression>
                      <condition xsi:type="ocl:OperationCallExp" location="387:10-387:47" operationName="oclIsTypeOf">
                        <source xsi:type="ocl:VariableExp" location="387:10-387:19" referredVariable="//@elements.18/@definition/@feature/@body/@variable"/>
                        <arguments xsi:type="ocl:OclModelElement" location="387:32-387:46" name="IterateExp">
                          <model href="new-model#/1"/>
                        </arguments>
                      </condition>
                      <elseExpression xsi:type="ocl:SequenceExp" location="400:7-400:17"/>
                    </elseExpression>
                  </elseExpression>
                </elseExpression>
              </elseExpression>
            </elseExpression>
          </in_>
        </body>
      </feature>
      <context_ location="345:8-345:33">
        <context_ xsi:type="ocl:OclModelElement" location="345:16-345:33" name="OclExpression">
          <model href="new-model#/1"/>
        </context_>
      </context_>
    </definition>
  </elements>
  <elements xsi:type="atl:Helper" location="462:1-475:8">
    <commentsBefore>-- This helper computes a sequence containing the VariableDeclarations that are</commentsBefore>
    <commentsBefore>-- defined lower than the contextual OclExpression in its namespace tree.</commentsBefore>
    <commentsBefore>-- If the contextual OclExpression is a LetExp, the helper returns a sequence</commentsBefore>
    <commentsBefore>-- composed of the LetExp variable and the result of its recursive call on the</commentsBefore>
    <commentsBefore>-- &quot;in_&quot; reference of the LetExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if the contextual OclExpression is a IfExp, the helper returns a</commentsBefore>
    <commentsBefore>-- sequence composed of the results of its recursive calls on the &quot;condition&quot;,</commentsBefore>
    <commentsBefore>-- &quot;thenExpression&quot; and &quot;elseExpression&quot; references of the IfExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if the contextual OclExpression is an IteratorExp, the helper</commentsBefore>
    <commentsBefore>-- returns a sequence composed of the IteratorExp iterators along with the</commentsBefore>
    <commentsBefore>-- results of its recursive calls on the &quot;source&quot; and the &quot;body&quot; references</commentsBefore>
    <commentsBefore>-- of the IteratorExp.</commentsBefore>
    <commentsBefore>-- Otherwise, if the contextual OclExpression is an IterateExp, the helper</commentsBefore>
    <commentsBefore>-- returns the sequence returned for an IteratorExp with its additional result</commentsBefore>
    <commentsBefore>-- element.</commentsBefore>
    <commentsBefore>-- Otherwise, the helper returns an empty sequence as default value.</commentsBefore>
    <commentsBefore>-- CONTEXT:	ATL!OclExpression</commentsBefore>
    <commentsBefore>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsBefore>
    <commentsBefore>--helper context ATL!OclExpression</commentsBefore>
    <commentsBefore>--	def: getDownD() : Sequence(ATL!VariableDeclaration) =</commentsBefore>
    <commentsBefore>--	if self.oclIsTypeOf(ATL!LetExp) then</commentsBefore>
    <commentsBefore>--		Sequence{</commentsBefore>
    <commentsBefore>--			self.variable,</commentsBefore>
    <commentsBefore>--			self.in_.getDownD()</commentsBefore>
    <commentsBefore>--		}->flatten()</commentsBefore>
    <commentsBefore>--	else if self.oclIsTypeOf(ATL!IfExp) then</commentsBefore>
    <commentsBefore>--		Sequence{</commentsBefore>
    <commentsBefore>--			self.condition.getDownD(),</commentsBefore>
    <commentsBefore>--			self.thenExpression.getDownD(),</commentsBefore>
    <commentsBefore>--			self.elseExpression.getDownD()</commentsBefore>
    <commentsBefore>--		}->flatten()</commentsBefore>
    <commentsBefore>--	else if self.oclIsTypeOf(ATL!IteratorExp) then</commentsBefore>
    <commentsBefore>--		Sequence{</commentsBefore>
    <commentsBefore>--			self.iterators,</commentsBefore>
    <commentsBefore>--			self.source.getDownD(),</commentsBefore>
    <commentsBefore>--			self.body.getDownD()</commentsBefore>
    <commentsBefore>--		}->flatten()</commentsBefore>
    <commentsBefore>--	else if self.oclIsTypeOf(ATL!IterateExp) then</commentsBefore>
    <commentsBefore>--		Sequence{</commentsBefore>
    <commentsBefore>--			self.iterators,</commentsBefore>
    <commentsBefore>--			self.result,</commentsBefore>
    <commentsBefore>--			self.source.getDownD(),</commentsBefore>
    <commentsBefore>--			self.body.getDownD()</commentsBefore>
    <commentsBefore>--		}->flatten()</commentsBefore>
    <commentsBefore>--	else Sequence{}</commentsBefore>
    <commentsBefore>--	endif endif endif endif;</commentsBefore>
    <commentsBefore>-- This helper returns the root composite (container) of the contextual</commentsBefore>
    <commentsBefore>-- OclExpression. For this purpose, the helper first computes the immediate</commentsBefore>
    <commentsBefore>-- composite of the contextual OclExpression.</commentsBefore>
    <commentsBefore>-- If this container is undefined, the helper returns OclUndefined.</commentsBefore>
    <commentsBefore>-- Otherwise, if it is a kind of OclExpression, the helper returns the value</commentsBefore>
    <commentsBefore>-- provided by its recursive call on the computed container.</commentsBefore>
    <commentsBefore>-- Finally, if this container is not an OclExpression, the root composite has</commentsBefore>
    <commentsBefore>-- been reached (Binding/InPattern/Operation/Query/Attribute) and is returned.</commentsBefore>
    <commentsBefore>-- CONTEXT:	ATL!OclExpression</commentsBefore>
    <commentsBefore>-- RETURN:	ATL!Element</commentsBefore>
    <commentsAfter>-------------------------------------------------------------------------------</commentsAfter>
    <commentsAfter>-- RULES ----------------------------------------------------------------------</commentsAfter>
    <commentsAfter>-------------------------------------------------------------------------------</commentsAfter>
    <commentsAfter>-- Rule 'FreeVariableIsSelfOrThisModule'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem for each VariableDeclaration that has</commentsAfter>
    <commentsAfter>-- no composite, and whose name is different from both 'self' and 'thisModule'.</commentsAfter>
    <commentsAfter>-- The VariableExps that have not been previously declared in an ATL file are</commentsAfter>
    <commentsAfter>-- associated with a new VariableDeclaration without any composite in the</commentsAfter>
    <commentsAfter>-- correspoding ATL model.</commentsAfter>
    <definition location="462:8-475:7">
      <feature xsi:type="ocl:Operation" location="462:39-475:7" name="getRootComposite">
        <returnType xsi:type="ocl:OclModelElement" location="462:60-462:71" name="Element">
          <model href="new-model#/1"/>
        </returnType>
        <body xsi:type="ocl:LetExp" location="463:2-475:7">
          <variable location="463:6-463:55" varName="container" variableExp="//@elements.19/@definition/@feature/@body/@in_/@condition/@source //@elements.19/@definition/@feature/@body/@in_/@elseExpression/@condition/@source //@elements.19/@definition/@feature/@body/@in_/@elseExpression/@thenExpression/@source //@elements.19/@definition/@feature/@body/@in_/@elseExpression/@elseExpression">
            <type xsi:type="ocl:OclModelElement" location="463:18-463:29" name="Element">
              <model href="new-model#/1"/>
            </type>
            <initExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="463:32-463:55" name="immediateComposite">
              <source xsi:type="ocl:VariableExp" location="463:32-463:36">
                <referredVariable href="new-model#/77"/>
              </source>
            </initExpression>
          </variable>
          <in_ xsi:type="ocl:IfExp" location="465:2-475:7">
            <thenExpression xsi:type="ocl:OclUndefinedExp" location="467:3-467:15"/>
            <condition xsi:type="ocl:OperationCallExp" location="465:5-465:31" operationName="oclIsUndefined">
              <source xsi:type="ocl:VariableExp" location="465:5-465:14" referredVariable="//@elements.19/@definition/@feature/@body/@variable"/>
            </condition>
            <elseExpression xsi:type="ocl:IfExp" location="469:3-474:8">
              <thenExpression xsi:type="ocl:OperationCallExp" location="471:4-471:32" operationName="getRootComposite">
                <source xsi:type="ocl:VariableExp" location="471:4-471:13" referredVariable="//@elements.19/@definition/@feature/@body/@variable"/>
              </thenExpression>
              <condition xsi:type="ocl:OperationCallExp" location="469:6-469:46" operationName="oclIsKindOf">
                <source xsi:type="ocl:VariableExp" location="469:6-469:15" referredVariable="//@elements.19/@definition/@feature/@body/@variable"/>
                <arguments xsi:type="ocl:OclModelElement" location="469:28-469:45" name="OclExpression">
                  <model href="new-model#/1"/>
                </arguments>
              </condition>
              <elseExpression xsi:type="ocl:VariableExp" location="473:4-473:13" referredVariable="//@elements.19/@definition/@feature/@body/@variable"/>
            </elseExpression>
          </in_>
        </body>
      </feature>
      <context_ location="462:8-462:33">
        <context_ xsi:type="ocl:OclModelElement" location="462:16-462:33" name="OclExpression">
          <model href="new-model#/1"/>
        </context_>
      </context_>
    </definition>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="488:1-506:2" name="FreeVariableIsSelfOrThisModule">
    <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
    <commentsBefore>-- RULES ----------------------------------------------------------------------</commentsBefore>
    <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
    <commentsBefore>-- Rule 'FreeVariableIsSelfOrThisModule'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem for each VariableDeclaration that has</commentsBefore>
    <commentsBefore>-- no composite, and whose name is different from both 'self' and 'thisModule'.</commentsBefore>
    <commentsBefore>-- The VariableExps that have not been previously declared in an ATL file are</commentsBefore>
    <commentsBefore>-- associated with a new VariableDeclaration without any composite in the</commentsBefore>
    <commentsBefore>-- correspoding ATL model.</commentsBefore>
    <commentsAfter>-- Rule 'ModelNameIsUnique'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem when there exists models that have</commentsAfter>
    <commentsAfter>-- the same name that the checked model.</commentsAfter>
    <outPattern location="494:2-505:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="495:3-505:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="495:7-495:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="496:4-496:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="496:16-496:22" name="error"/>
        </bindings>
        <bindings location="497:4-503:10" propertyName="location">
          <value xsi:type="ocl:IfExp" location="498:5-503:10">
            <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="500:6-500:16" name="location">
              <source xsi:type="ocl:VariableExp" location="500:6-500:7" referredVariable="//@elements.20/@inPattern/@elements.0"/>
            </thenExpression>
            <condition xsi:type="ocl:CollectionOperationCallExp" location="498:8-498:32" operationName="isEmpty">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="498:8-498:21" name="variableExp">
                <source xsi:type="ocl:VariableExp" location="498:8-498:9" referredVariable="//@elements.20/@inPattern/@elements.0"/>
              </source>
            </condition>
            <elseExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="502:6-502:37" name="location">
              <source xsi:type="ocl:CollectionOperationCallExp" location="502:6-502:28" operationName="first">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="502:6-502:19" name="variableExp">
                  <source xsi:type="ocl:VariableExp" location="502:6-502:7" referredVariable="//@elements.20/@inPattern/@elements.0"/>
                </source>
              </source>
            </elseExpression>
          </value>
        </bindings>
        <bindings location="504:4-504:61" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="504:19-504:61" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="504:19-504:44" operationName="+">
              <source xsi:type="ocl:StringExp" location="504:19-504:32" stringSymbol="variable '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="504:35-504:44" name="varName">
                <source xsi:type="ocl:VariableExp" location="504:35-504:36" referredVariable="//@elements.20/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="504:47-504:61" stringSymbol="' undefined"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="489:2-493:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="490:3-490:30" varName="s" variableExp="//@elements.20/@inPattern/@filter/@source/@source/@source/@source //@elements.20/@inPattern/@filter/@source/@arguments.0/@source/@source //@elements.20/@inPattern/@filter/@arguments.0/@source/@source //@elements.20/@outPattern/@elements.0/@bindings.1/@value/@condition/@source/@source //@elements.20/@outPattern/@elements.0/@bindings.1/@value/@thenExpression/@source //@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@source/@source/@source //@elements.20/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="490:7-490:30" name="VariableDeclaration">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:OperatorCallExp" location="491:4-492:53" operationName="and">
        <source xsi:type="ocl:OperatorCallExp" location="491:4-492:23" operationName="and">
          <source xsi:type="ocl:OperationCallExp" location="491:4-491:41" operationName="oclIsUndefined">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="491:4-491:24" name="immediateComposite">
              <source xsi:type="ocl:VariableExp" location="491:4-491:5" referredVariable="//@elements.20/@inPattern/@elements.0"/>
            </source>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="492:4-492:23" operationName="&lt;>">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="492:4-492:13" name="varName">
              <source xsi:type="ocl:VariableExp" location="492:4-492:5" referredVariable="//@elements.20/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:StringExp" location="492:17-492:23" stringSymbol="self"/>
          </arguments>
        </source>
        <arguments xsi:type="ocl:OperatorCallExp" location="492:28-492:53" operationName="&lt;>">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="492:28-492:37" name="varName">
            <source xsi:type="ocl:VariableExp" location="492:28-492:29" referredVariable="//@elements.20/@inPattern/@elements.0"/>
          </source>
          <arguments xsi:type="ocl:StringExp" location="492:41-492:53" stringSymbol="thisModule"/>
        </arguments>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="511:1-522:2" name="ModelNameIsUnique">
    <commentsBefore>-- Rule 'ModelNameIsUnique'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem when there exists models that have</commentsBefore>
    <commentsBefore>-- the same name that the checked model.</commentsBefore>
    <commentsAfter>-- Rule 'RuleNameIsUnique'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem when there exists rules that have</commentsAfter>
    <commentsAfter>-- the same name that the checked rule.</commentsAfter>
    <outPattern location="516:2-521:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="517:3-521:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="517:7-517:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="518:4-518:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="518:16-518:22" name="error"/>
        </bindings>
        <bindings location="519:4-519:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="519:16-519:26" name="location">
            <source xsi:type="ocl:VariableExp" location="519:16-519:17" referredVariable="//@elements.21/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="520:4-520:61" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="520:19-520:61" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="520:19-520:38" operationName="+">
              <source xsi:type="ocl:StringExp" location="520:19-520:29" stringSymbol="model '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="520:32-520:38" name="name">
                <source xsi:type="ocl:VariableExp" location="520:32-520:33" referredVariable="//@elements.21/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="520:41-520:61" stringSymbol="' already defined"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="512:2-515:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="513:3-513:19" varName="s" variableExp="//@elements.21/@inPattern/@filter/@body/@source/@arguments.0/@source //@elements.21/@inPattern/@filter/@body/@arguments.0/@arguments.0 //@elements.21/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.21/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="513:7-513:19" name="OclModel">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:IteratorExp" location="514:4-514:64" name="exists">
        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="514:4-514:24" name="allModels">
          <source xsi:type="ocl:VariableExp" location="514:4-514:14">
            <referredVariable href="new-model#/78"/>
          </source>
        </source>
        <body xsi:type="ocl:OperatorCallExp" location="514:37-514:63" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="514:37-514:52" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="514:37-514:43" name="name">
              <source xsi:type="ocl:VariableExp" location="514:37-514:38" referredVariable="//@elements.21/@inPattern/@filter/@iterators.0"/>
            </source>
            <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="514:46-514:52" name="name">
              <source xsi:type="ocl:VariableExp" location="514:46-514:47" referredVariable="//@elements.21/@inPattern/@elements.0"/>
            </arguments>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="514:57-514:63" operationName="&lt;>">
            <source xsi:type="ocl:VariableExp" location="514:57-514:58" referredVariable="//@elements.21/@inPattern/@filter/@iterators.0"/>
            <arguments xsi:type="ocl:VariableExp" location="514:62-514:63" referredVariable="//@elements.21/@inPattern/@elements.0"/>
          </arguments>
        </body>
        <iterators location="514:33-514:34" varName="e" variableExp="//@elements.21/@inPattern/@filter/@body/@source/@source/@source //@elements.21/@inPattern/@filter/@body/@arguments.0/@source"/>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="527:1-538:2" name="RuleNameIsUnique">
    <commentsBefore>-- Rule 'RuleNameIsUnique'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem when there exists rules that have</commentsBefore>
    <commentsBefore>-- the same name that the checked rule.</commentsBefore>
    <commentsAfter>-- Rule 'HelperSignatureIsUnique'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem when there exists helpers that have</commentsAfter>
    <commentsAfter>-- the same signature that the checked helper.</commentsAfter>
    <commentsAfter>-- Note that in current implementation, the helper signature corresponds to the</commentsAfter>
    <commentsAfter>-- name and the context of the helper.</commentsAfter>
    <outPattern location="532:2-537:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="533:3-537:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="533:7-533:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="534:4-534:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="534:16-534:22" name="error"/>
        </bindings>
        <bindings location="535:4-535:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="535:16-535:26" name="location">
            <source xsi:type="ocl:VariableExp" location="535:16-535:17" referredVariable="//@elements.22/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="536:4-536:60" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="536:19-536:60" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="536:19-536:37" operationName="+">
              <source xsi:type="ocl:StringExp" location="536:19-536:28" stringSymbol="rule '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="536:31-536:37" name="name">
                <source xsi:type="ocl:VariableExp" location="536:31-536:32" referredVariable="//@elements.22/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="536:40-536:60" stringSymbol="' already defined"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="528:2-531:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="529:3-529:15" varName="s" variableExp="//@elements.22/@inPattern/@filter/@body/@source/@arguments.0/@source //@elements.22/@inPattern/@filter/@body/@arguments.0/@arguments.0 //@elements.22/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.22/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="529:7-529:15" name="Rule">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:IteratorExp" location="530:4-530:63" name="exists">
        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="530:4-530:23" name="allRules">
          <source xsi:type="ocl:VariableExp" location="530:4-530:14">
            <referredVariable href="new-model#/79"/>
          </source>
        </source>
        <body xsi:type="ocl:OperatorCallExp" location="530:36-530:62" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="530:36-530:51" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="530:36-530:42" name="name">
              <source xsi:type="ocl:VariableExp" location="530:36-530:37" referredVariable="//@elements.22/@inPattern/@filter/@iterators.0"/>
            </source>
            <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="530:45-530:51" name="name">
              <source xsi:type="ocl:VariableExp" location="530:45-530:46" referredVariable="//@elements.22/@inPattern/@elements.0"/>
            </arguments>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="530:56-530:62" operationName="&lt;>">
            <source xsi:type="ocl:VariableExp" location="530:56-530:57" referredVariable="//@elements.22/@inPattern/@filter/@iterators.0"/>
            <arguments xsi:type="ocl:VariableExp" location="530:61-530:62" referredVariable="//@elements.22/@inPattern/@elements.0"/>
          </arguments>
        </body>
        <iterators location="530:32-530:33" varName="e" variableExp="//@elements.22/@inPattern/@filter/@body/@source/@source/@source //@elements.22/@inPattern/@filter/@body/@arguments.0/@source"/>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="545:1-584:2" name="HelperSignatureIsUnique">
    <commentsBefore>-- Rule 'HelperSignatureIsUnique'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem when there exists helpers that have</commentsBefore>
    <commentsBefore>-- the same signature that the checked helper.</commentsBefore>
    <commentsBefore>-- Note that in current implementation, the helper signature corresponds to the</commentsBefore>
    <commentsBefore>-- name and the context of the helper.</commentsBefore>
    <commentsAfter>-- Rule 'BindingNameIsUniqueInPattern'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem when there exists, in a same pattern,</commentsAfter>
    <commentsAfter>-- bindings that have the same name that the checked binding.</commentsAfter>
    <outPattern location="577:2-583:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="578:3-583:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="578:7-578:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="579:4-579:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="579:16-579:22" name="error"/>
        </bindings>
        <bindings location="580:4-580:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="580:16-580:26" name="location">
            <source xsi:type="ocl:VariableExp" location="580:16-580:17" referredVariable="//@elements.23/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="581:4-582:30" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="581:19-582:30" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="581:19-581:58" operationName="+">
              <source xsi:type="ocl:StringExp" location="581:19-581:30" stringSymbol="helper '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="581:33-581:58" name="name">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="581:33-581:53" name="feature">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="581:33-581:45" name="definition">
                    <source xsi:type="ocl:VariableExp" location="581:33-581:34" referredVariable="//@elements.23/@inPattern/@elements.0"/>
                  </source>
                </source>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="582:10-582:30" stringSymbol="' already defined"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="546:2-576:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="547:3-547:17" varName="s" variableExp="//@elements.23/@inPattern/@filter/@body/@source/@source/@arguments.0 //@elements.23/@inPattern/@filter/@body/@source/@arguments.0/@source/@source/@source/@source //@elements.23/@inPattern/@filter/@body/@arguments.0/@condition/@source/@source/@source/@source //@elements.23/@inPattern/@filter/@body/@arguments.0/@thenExpression/@thenExpression/@condition/@source/@source/@source/@source/@source/@source //@elements.23/@inPattern/@filter/@body/@arguments.0/@thenExpression/@thenExpression/@thenExpression/@thenExpression/@source/@source/@source/@source/@source //@elements.23/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.23/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source/@source/@source">
        <type xsi:type="ocl:OclModelElement" location="547:7-547:17" name="Helper">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:IteratorExp" location="548:4-575:6" name="exists">
        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="548:4-548:25" name="allHelpers">
          <source xsi:type="ocl:VariableExp" location="548:4-548:14">
            <referredVariable href="new-model#/80"/>
          </source>
        </source>
        <body xsi:type="ocl:OperatorCallExp" location="550:6-574:8" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="550:6-551:59" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="550:6-550:12" operationName="&lt;>">
              <source xsi:type="ocl:VariableExp" location="550:6-550:7" referredVariable="//@elements.23/@inPattern/@filter/@iterators.0"/>
              <arguments xsi:type="ocl:VariableExp" location="550:11-550:12" referredVariable="//@elements.23/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="551:6-551:59" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="551:6-551:31" name="name">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="551:6-551:26" name="feature">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="551:6-551:18" name="definition">
                    <source xsi:type="ocl:VariableExp" location="551:6-551:7" referredVariable="//@elements.23/@inPattern/@elements.0"/>
                  </source>
                </source>
              </source>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="551:34-551:59" name="name">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="551:34-551:54" name="feature">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="551:34-551:46" name="definition">
                    <source xsi:type="ocl:VariableExp" location="551:34-551:35" referredVariable="//@elements.23/@inPattern/@filter/@iterators.0"/>
                  </source>
                </source>
              </arguments>
            </arguments>
          </source>
          <arguments xsi:type="ocl:IfExp" location="553:7-573:12">
            <thenExpression xsi:type="ocl:IfExp" location="555:8-570:12">
              <thenExpression xsi:type="ocl:IfExp" location="557:7-567:13">
                <thenExpression xsi:type="ocl:IfExp" location="559:8-564:14">
                  <thenExpression xsi:type="ocl:OperatorCallExp" location="561:10-561:83" operationName="=">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="561:10-561:45" name="name">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="561:10-561:40" name="context_">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="561:10-561:31" name="context_">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="561:10-561:22" name="definition">
                            <source xsi:type="ocl:VariableExp" location="561:10-561:11" referredVariable="//@elements.23/@inPattern/@elements.0"/>
                          </source>
                        </source>
                      </source>
                    </source>
                    <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="561:48-561:83" name="name">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="561:48-561:78" name="context_">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="561:48-561:69" name="context_">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="561:48-561:60" name="definition">
                            <source xsi:type="ocl:VariableExp" location="561:48-561:49" referredVariable="//@elements.23/@inPattern/@filter/@iterators.0"/>
                          </source>
                        </source>
                      </source>
                    </arguments>
                  </thenExpression>
                  <condition xsi:type="ocl:OperatorCallExp" location="559:11-559:67" operationName="not">
                    <source xsi:type="ocl:OperationCallExp" location="559:15-559:67" operationName="oclIsUndefined">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="559:15-559:50" name="name">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="559:15-559:45" name="context_">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="559:15-559:36" name="context_">
                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="559:15-559:27" name="definition">
                              <source xsi:type="ocl:VariableExp" location="559:15-559:16" referredVariable="//@elements.23/@inPattern/@filter/@iterators.0"/>
                            </source>
                          </source>
                        </source>
                      </source>
                    </source>
                  </condition>
                  <elseExpression xsi:type="ocl:BooleanExp" location="563:10-563:15"/>
                </thenExpression>
                <condition xsi:type="ocl:OperatorCallExp" location="557:10-557:66" operationName="not">
                  <source xsi:type="ocl:OperationCallExp" location="557:14-557:66" operationName="oclIsUndefined">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="557:14-557:49" name="name">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="557:14-557:44" name="context_">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="557:14-557:35" name="context_">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="557:14-557:26" name="definition">
                            <source xsi:type="ocl:VariableExp" location="557:14-557:15" referredVariable="//@elements.23/@inPattern/@elements.0"/>
                          </source>
                        </source>
                      </source>
                    </source>
                  </source>
                </condition>
                <elseExpression xsi:type="ocl:OperationCallExp" location="566:9-566:61" operationName="oclIsUndefined">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="566:9-566:44" name="name">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="566:9-566:39" name="context_">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="566:9-566:30" name="context_">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="566:9-566:21" name="definition">
                          <source xsi:type="ocl:VariableExp" location="566:9-566:10" referredVariable="//@elements.23/@inPattern/@filter/@iterators.0"/>
                        </source>
                      </source>
                    </source>
                  </source>
                </elseExpression>
              </thenExpression>
              <condition xsi:type="ocl:OperatorCallExp" location="555:11-555:53" operationName="not">
                <source xsi:type="ocl:OperationCallExp" location="555:15-555:53" operationName="oclIsUndefined">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="555:15-555:36" name="context_">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="555:15-555:27" name="definition">
                      <source xsi:type="ocl:VariableExp" location="555:15-555:16" referredVariable="//@elements.23/@inPattern/@filter/@iterators.0"/>
                    </source>
                  </source>
                </source>
              </condition>
              <elseExpression xsi:type="ocl:BooleanExp" location="569:8-569:13"/>
            </thenExpression>
            <condition xsi:type="ocl:OperatorCallExp" location="553:10-553:52" operationName="not">
              <source xsi:type="ocl:OperationCallExp" location="553:14-553:52" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="553:14-553:35" name="context_">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="553:14-553:26" name="definition">
                    <source xsi:type="ocl:VariableExp" location="553:14-553:15" referredVariable="//@elements.23/@inPattern/@elements.0"/>
                  </source>
                </source>
              </source>
            </condition>
            <elseExpression xsi:type="ocl:OperationCallExp" location="572:8-572:46" operationName="oclIsUndefined">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="572:8-572:29" name="context_">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="572:8-572:20" name="definition">
                  <source xsi:type="ocl:VariableExp" location="572:8-572:9" referredVariable="//@elements.23/@inPattern/@filter/@iterators.0"/>
                </source>
              </source>
            </elseExpression>
          </arguments>
        </body>
        <iterators location="549:14-549:15" varName="e" variableExp="//@elements.23/@inPattern/@filter/@body/@source/@source/@source //@elements.23/@inPattern/@filter/@body/@source/@arguments.0/@arguments.0/@source/@source/@source //@elements.23/@inPattern/@filter/@body/@arguments.0/@thenExpression/@condition/@source/@source/@source/@source //@elements.23/@inPattern/@filter/@body/@arguments.0/@thenExpression/@thenExpression/@thenExpression/@condition/@source/@source/@source/@source/@source/@source //@elements.23/@inPattern/@filter/@body/@arguments.0/@thenExpression/@thenExpression/@thenExpression/@thenExpression/@arguments.0/@source/@source/@source/@source //@elements.23/@inPattern/@filter/@body/@arguments.0/@thenExpression/@thenExpression/@elseExpression/@source/@source/@source/@source/@source //@elements.23/@inPattern/@filter/@body/@arguments.0/@elseExpression/@source/@source/@source"/>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="589:1-602:2" name="BindingNameIsUniqueInPattern">
    <commentsBefore>-- Rule 'BindingNameIsUniqueInPattern'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem when there exists, in a same pattern,</commentsBefore>
    <commentsBefore>-- bindings that have the same name that the checked binding.</commentsBefore>
    <commentsAfter>-- Rule 'PatternNameIsUniqueInRule'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem when there exists, in a same rule,</commentsAfter>
    <commentsAfter>-- some named elements (InPatternElement/OutPatternElement/</commentsAfter>
    <commentsAfter>-- RuleVariableDeclaration) that have the same name that the checked pattern.</commentsAfter>
    <outPattern location="595:2-601:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="596:3-601:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="596:7-596:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="597:4-597:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="597:16-597:22" name="error"/>
        </bindings>
        <bindings location="598:4-598:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="598:16-598:26" name="location">
            <source xsi:type="ocl:VariableExp" location="598:16-598:17" referredVariable="//@elements.24/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="599:4-600:68" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="600:5-600:68" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="600:5-600:34" operationName="+">
              <source xsi:type="ocl:StringExp" location="600:5-600:17" stringSymbol="binding '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="600:20-600:34" name="propertyName">
                <source xsi:type="ocl:VariableExp" location="600:20-600:21" referredVariable="//@elements.24/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="600:37-600:68" stringSymbol="' already defined in pattern"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="590:2-594:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="591:3-591:18" varName="s" variableExp="//@elements.24/@inPattern/@filter/@source/@source/@source //@elements.24/@inPattern/@filter/@body/@source/@arguments.0/@source //@elements.24/@inPattern/@filter/@body/@arguments.0/@arguments.0 //@elements.24/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.24/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="591:7-591:18" name="Binding">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:IteratorExp" location="592:4-593:61" name="exists">
        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="592:4-592:32" name="bindings">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="592:4-592:23" name="outPatternElement">
            <source xsi:type="ocl:VariableExp" location="592:4-592:5" referredVariable="//@elements.24/@inPattern/@elements.0"/>
          </source>
        </source>
        <body xsi:type="ocl:OperatorCallExp" location="593:18-593:60" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="593:18-593:49" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="593:18-593:32" name="propertyName">
              <source xsi:type="ocl:VariableExp" location="593:18-593:19" referredVariable="//@elements.24/@inPattern/@filter/@iterators.0"/>
            </source>
            <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="593:35-593:49" name="propertyName">
              <source xsi:type="ocl:VariableExp" location="593:35-593:36" referredVariable="//@elements.24/@inPattern/@elements.0"/>
            </arguments>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="593:54-593:60" operationName="&lt;>">
            <source xsi:type="ocl:VariableExp" location="593:54-593:55" referredVariable="//@elements.24/@inPattern/@filter/@iterators.0"/>
            <arguments xsi:type="ocl:VariableExp" location="593:59-593:60" referredVariable="//@elements.24/@inPattern/@elements.0"/>
          </arguments>
        </body>
        <iterators location="593:14-593:15" varName="e" variableExp="//@elements.24/@inPattern/@filter/@body/@source/@source/@source //@elements.24/@inPattern/@filter/@body/@arguments.0/@source"/>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="608:1-622:2" name="PatternNameIsUniqueInRule">
    <commentsBefore>-- Rule 'PatternNameIsUniqueInRule'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem when there exists, in a same rule,</commentsBefore>
    <commentsBefore>-- some named elements (InPatternElement/OutPatternElement/</commentsBefore>
    <commentsBefore>-- RuleVariableDeclaration) that have the same name that the checked pattern.</commentsBefore>
    <commentsAfter>-- Rule 'VariableNameIsUniqueInRule'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem when there exists, in a same rule,</commentsAfter>
    <commentsAfter>-- some named elements (InPatternElement/OutPatternElement/</commentsAfter>
    <commentsAfter>-- RuleVariableDeclaration) that have the same name that the checked rule</commentsAfter>
    <commentsAfter>-- variable declaration.</commentsAfter>
    <outPattern location="614:2-621:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="615:3-621:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="615:7-615:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="616:4-616:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="616:16-616:22" name="error"/>
        </bindings>
        <bindings location="617:4-617:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="617:16-617:26" name="location">
            <source xsi:type="ocl:VariableExp" location="617:16-617:17" referredVariable="//@elements.25/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="618:4-620:47" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="619:5-620:47" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="619:5-620:16" operationName="+">
              <source xsi:type="ocl:StringExp" location="619:5-619:35" stringSymbol="pattern or variable named '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="620:7-620:16" name="varName">
                <source xsi:type="ocl:VariableExp" location="620:7-620:8" referredVariable="//@elements.25/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="620:19-620:47" stringSymbol="' already defined in rule"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="609:2-613:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="610:3-610:25" varName="s" variableExp="//@elements.25/@inPattern/@filter/@source/@source/@source //@elements.25/@inPattern/@filter/@body/@source/@arguments.0/@source //@elements.25/@inPattern/@filter/@body/@arguments.0/@arguments.0 //@elements.25/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.25/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="610:7-610:25" name="PatternElement">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:IteratorExp" location="611:4-612:51" name="exists">
        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="611:4-611:26" name="namedElements">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="611:4-611:12" name="rule">
            <source xsi:type="ocl:VariableExp" location="611:4-611:5" referredVariable="//@elements.25/@inPattern/@elements.0"/>
          </source>
        </source>
        <body xsi:type="ocl:OperatorCallExp" location="612:18-612:50" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="612:18-612:39" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="612:18-612:27" name="varName">
              <source xsi:type="ocl:VariableExp" location="612:18-612:19" referredVariable="//@elements.25/@inPattern/@filter/@iterators.0"/>
            </source>
            <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="612:30-612:39" name="varName">
              <source xsi:type="ocl:VariableExp" location="612:30-612:31" referredVariable="//@elements.25/@inPattern/@elements.0"/>
            </arguments>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="612:44-612:50" operationName="&lt;>">
            <source xsi:type="ocl:VariableExp" location="612:44-612:45" referredVariable="//@elements.25/@inPattern/@filter/@iterators.0"/>
            <arguments xsi:type="ocl:VariableExp" location="612:49-612:50" referredVariable="//@elements.25/@inPattern/@elements.0"/>
          </arguments>
        </body>
        <iterators location="612:14-612:15" varName="e" variableExp="//@elements.25/@inPattern/@filter/@body/@source/@source/@source //@elements.25/@inPattern/@filter/@body/@arguments.0/@source"/>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="629:1-643:2" name="VariableNameIsUniqueInRule">
    <commentsBefore>-- Rule 'VariableNameIsUniqueInRule'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem when there exists, in a same rule,</commentsBefore>
    <commentsBefore>-- some named elements (InPatternElement/OutPatternElement/</commentsBefore>
    <commentsBefore>-- RuleVariableDeclaration) that have the same name that the checked rule</commentsBefore>
    <commentsBefore>-- variable declaration.</commentsBefore>
    <commentsAfter>-- Rule 'NoHelperWithCollectionAsContext'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem for each Helper defined with a</commentsAfter>
    <commentsAfter>-- collection type as context.</commentsAfter>
    <commentsAfter>-- Note that this problem is due to the limitations of the current</commentsAfter>
    <commentsAfter>-- implementation</commentsAfter>
    <outPattern location="635:2-642:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="636:3-642:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="636:7-636:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="637:4-637:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="637:16-637:22" name="error"/>
        </bindings>
        <bindings location="638:4-638:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="638:16-638:26" name="location">
            <source xsi:type="ocl:VariableExp" location="638:16-638:17" referredVariable="//@elements.26/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="639:4-641:35" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="640:5-641:35" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="640:5-640:47" operationName="+">
              <source xsi:type="ocl:StringExp" location="640:5-640:35" stringSymbol="pattern or variable named '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="640:38-640:47" name="varName">
                <source xsi:type="ocl:VariableExp" location="640:38-640:39" referredVariable="//@elements.26/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="641:7-641:35" stringSymbol="' already defined in rule"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="630:2-634:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="631:3-631:34" varName="s" variableExp="//@elements.26/@inPattern/@filter/@source/@source/@source //@elements.26/@inPattern/@filter/@body/@source/@arguments.0/@source //@elements.26/@inPattern/@filter/@body/@arguments.0/@arguments.0 //@elements.26/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.26/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="631:7-631:34" name="RuleVariableDeclaration">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:IteratorExp" location="632:4-633:51" name="exists">
        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="632:4-632:26" name="namedElements">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="632:4-632:12" name="rule">
            <source xsi:type="ocl:VariableExp" location="632:4-632:5" referredVariable="//@elements.26/@inPattern/@elements.0"/>
          </source>
        </source>
        <body xsi:type="ocl:OperatorCallExp" location="633:18-633:50" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="633:18-633:39" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="633:18-633:27" name="varName">
              <source xsi:type="ocl:VariableExp" location="633:18-633:19" referredVariable="//@elements.26/@inPattern/@filter/@iterators.0"/>
            </source>
            <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="633:30-633:39" name="varName">
              <source xsi:type="ocl:VariableExp" location="633:30-633:31" referredVariable="//@elements.26/@inPattern/@elements.0"/>
            </arguments>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="633:44-633:50" operationName="&lt;>">
            <source xsi:type="ocl:VariableExp" location="633:44-633:45" referredVariable="//@elements.26/@inPattern/@filter/@iterators.0"/>
            <arguments xsi:type="ocl:VariableExp" location="633:49-633:50" referredVariable="//@elements.26/@inPattern/@elements.0"/>
          </arguments>
        </body>
        <iterators location="633:14-633:15" varName="e" variableExp="//@elements.26/@inPattern/@filter/@body/@source/@source/@source //@elements.26/@inPattern/@filter/@body/@arguments.0/@source"/>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="650:1-670:2" name="NoHelperWithCollectionAsContext">
    <commentsBefore>-- Rule 'NoHelperWithCollectionAsContext'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem for each Helper defined with a</commentsBefore>
    <commentsBefore>-- collection type as context.</commentsBefore>
    <commentsBefore>-- Note that this problem is due to the limitations of the current</commentsBefore>
    <commentsBefore>-- implementation</commentsBefore>
    <commentsAfter>-- Rule 'NoSelfOrThisModuleVariableDeclaration'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem for each declaration of a variable</commentsAfter>
    <commentsAfter>-- named 'self' or 'thisModule' in the ATL program.</commentsAfter>
    <commentsAfter>-- Considered variable declarations must have a non-undefined immediate</commentsAfter>
    <commentsAfter>-- composite since the input ATL model may already include a 'self' and a</commentsAfter>
    <commentsAfter>-- 'thisModule' VD without any immediate composite that correspond to the</commentsAfter>
    <commentsAfter>-- global declarations of the 'self' and 'thisModule' variables.</commentsAfter>
    <outPattern location="661:2-669:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="662:3-669:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="662:7-662:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="663:4-663:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="663:16-663:22" name="error"/>
        </bindings>
        <bindings location="664:4-664:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="664:16-664:26" name="location">
            <source xsi:type="ocl:VariableExp" location="664:16-664:17" referredVariable="//@elements.27/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="665:4-668:49" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="666:5-668:49" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="666:5-667:46" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="666:5-666:44" operationName="+">
                <source xsi:type="ocl:StringExp" location="666:5-666:16" stringSymbol="helper '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="666:19-666:44" name="name">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="666:19-666:39" name="feature">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="666:19-666:31" name="definition">
                      <source xsi:type="ocl:VariableExp" location="666:19-666:20" referredVariable="//@elements.27/@inPattern/@elements.0"/>
                    </source>
                  </source>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="667:8-667:46" stringSymbol="': current implementation does not "/>
            </source>
            <arguments xsi:type="ocl:StringExp" location="668:8-668:49" stringSymbol="support helpers with collection context"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="651:2-660:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="652:3-652:17" varName="s" variableExp="//@elements.27/@inPattern/@filter/@condition/@source/@source/@source //@elements.27/@inPattern/@filter/@elseExpression/@body/@source/@source/@source/@source //@elements.27/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.27/@outPattern/@elements.0/@bindings.2/@value/@source/@source/@arguments.0/@source/@source/@source">
        <type xsi:type="ocl:OclModelElement" location="652:7-652:17" name="Helper">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:IfExp" location="653:4-659:9">
        <thenExpression xsi:type="ocl:BooleanExp" location="655:5-655:10"/>
        <condition xsi:type="ocl:OperationCallExp" location="653:7-653:45" operationName="oclIsUndefined">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="653:7-653:28" name="context_">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="653:7-653:19" name="definition">
              <source xsi:type="ocl:VariableExp" location="653:7-653:8" referredVariable="//@elements.27/@inPattern/@elements.0"/>
            </source>
          </source>
        </condition>
        <elseExpression xsi:type="ocl:IteratorExp" location="657:5-658:54" name="exists">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="657:5-657:31" name="collectionTypes">
            <source xsi:type="ocl:VariableExp" location="657:5-657:15">
              <referredVariable href="new-model#/81"/>
            </source>
          </source>
          <body xsi:type="ocl:OperatorCallExp" location="658:19-658:53" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="658:19-658:49" name="context_">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="658:19-658:40" name="context_">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="658:19-658:31" name="definition">
                  <source xsi:type="ocl:VariableExp" location="658:19-658:20" referredVariable="//@elements.27/@inPattern/@elements.0"/>
                </source>
              </source>
            </source>
            <arguments xsi:type="ocl:VariableExp" location="658:52-658:53" referredVariable="//@elements.27/@inPattern/@filter/@elseExpression/@iterators.0"/>
          </body>
          <iterators location="658:15-658:16" varName="e" variableExp="//@elements.27/@inPattern/@filter/@elseExpression/@body/@arguments.0"/>
        </elseExpression>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="679:1-692:2" name="NoSelfOrThisModuleVariableDeclaration">
    <commentsBefore>-- Rule 'NoSelfOrThisModuleVariableDeclaration'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem for each declaration of a variable</commentsBefore>
    <commentsBefore>-- named 'self' or 'thisModule' in the ATL program.</commentsBefore>
    <commentsBefore>-- Considered variable declarations must have a non-undefined immediate</commentsBefore>
    <commentsBefore>-- composite since the input ATL model may already include a 'self' and a</commentsBefore>
    <commentsBefore>-- 'thisModule' VD without any immediate composite that correspond to the</commentsBefore>
    <commentsBefore>-- global declarations of the 'self' and 'thisModule' variables.</commentsBefore>
    <commentsAfter>-- Rule 'NoSelfVariableInRule'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem for each 'self' variable expression</commentsAfter>
    <commentsAfter>-- that is contained by a rule element.</commentsAfter>
    <outPattern location="685:2-691:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="686:3-691:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="686:7-686:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="687:4-687:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="687:16-687:22" name="error"/>
        </bindings>
        <bindings location="688:4-688:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="688:16-688:26" name="location">
            <source xsi:type="ocl:VariableExp" location="688:16-688:17" referredVariable="//@elements.28/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="689:4-690:62" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="690:5-690:62" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="690:5-690:28" operationName="+">
              <source xsi:type="ocl:StringExp" location="690:5-690:16" stringSymbol="helper '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="690:19-690:28" name="varName">
                <source xsi:type="ocl:VariableExp" location="690:19-690:20" referredVariable="//@elements.28/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="690:31-690:62" stringSymbol="' is not valid variable name"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="680:2-684:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="681:3-681:30" varName="s" variableExp="//@elements.28/@inPattern/@filter/@source/@source/@source/@source //@elements.28/@inPattern/@filter/@arguments.0/@source/@source/@source //@elements.28/@inPattern/@filter/@arguments.0/@arguments.0/@source/@source //@elements.28/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.28/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="681:7-681:30" name="VariableDeclaration">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:OperatorCallExp" location="682:4-683:52" operationName="and">
        <source xsi:type="ocl:OperatorCallExp" location="682:4-682:45" operationName="not">
          <source xsi:type="ocl:OperationCallExp" location="682:8-682:45" operationName="oclIsUndefined">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="682:8-682:28" name="immediateComposite">
              <source xsi:type="ocl:VariableExp" location="682:8-682:9" referredVariable="//@elements.28/@inPattern/@elements.0"/>
            </source>
          </source>
        </source>
        <arguments xsi:type="ocl:OperatorCallExp" location="683:5-683:51" operationName="or">
          <source xsi:type="ocl:OperatorCallExp" location="683:5-683:23" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="683:5-683:14" name="varName">
              <source xsi:type="ocl:VariableExp" location="683:5-683:6" referredVariable="//@elements.28/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:StringExp" location="683:17-683:23" stringSymbol="self"/>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="683:27-683:51" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="683:27-683:36" name="varName">
              <source xsi:type="ocl:VariableExp" location="683:27-683:28" referredVariable="//@elements.28/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:StringExp" location="683:39-683:51" stringSymbol="thisModule"/>
          </arguments>
        </arguments>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="697:1-726:2" name="NoSelfVariableInRule">
    <commentsBefore>-- Rule 'NoSelfVariableInRule'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem for each 'self' variable expression</commentsBefore>
    <commentsBefore>-- that is contained by a rule element.</commentsBefore>
    <commentsAfter>-- Rule 'NoResolveTempInSourcePattern'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem for each call of the</commentsAfter>
    <commentsAfter>-- 'thisModule.resolveTemp()' operation within a source pattern of a rule.</commentsAfter>
    <outPattern location="718:2-725:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="719:3-725:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="719:7-719:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="720:4-720:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="720:16-720:22" name="error"/>
        </bindings>
        <bindings location="721:4-721:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="721:16-721:26" name="location">
            <source xsi:type="ocl:VariableExp" location="721:16-721:17" referredVariable="//@elements.29/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="722:4-724:61" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="723:5-724:61" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="723:5-723:43" operationName="+">
              <source xsi:type="ocl:StringExp" location="723:5-723:14" stringSymbol="rule '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="723:17-723:43" name="varName">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="723:17-723:35" name="referredVariable">
                  <source xsi:type="ocl:VariableExp" location="723:17-723:18" referredVariable="//@elements.29/@inPattern/@elements.0"/>
                </source>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="724:7-724:61" stringSymbol="': use of the 'self' variable prohibited in rules"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="698:2-717:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="699:3-699:22" varName="s" variableExp="//@elements.29/@inPattern/@filter/@condition/@source/@source //@elements.29/@inPattern/@filter/@elseExpression/@source/@source/@source/@source //@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@variable/@initExpression/@source //@elements.29/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.29/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source/@source">
        <type xsi:type="ocl:OclModelElement" location="699:7-699:22" name="VariableExp">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:IfExp" location="706:4-716:9">
        <commentsBefore>--			s.referredVariable.varName = 'self' and </commentsBefore>
        <commentsBefore>--			(</commentsBefore>
        <commentsBefore>--				let rComp : ATL!Element = s.getRootComposite() in</commentsBefore>
        <commentsBefore>--				rComp.oclIsTypeOf(ATL!Binding) or</commentsBefore>
        <commentsBefore>--				rComp.oclIsTypeOf(ATL!InPattern)</commentsBefore>
        <commentsBefore>--			)</commentsBefore>
        <thenExpression xsi:type="ocl:BooleanExp" location="708:5-708:10"/>
        <condition xsi:type="ocl:OperationCallExp" location="706:7-706:42" operationName="oclIsUndefined">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="706:7-706:25" name="referredVariable">
            <source xsi:type="ocl:VariableExp" location="706:7-706:8" referredVariable="//@elements.29/@inPattern/@elements.0"/>
          </source>
        </condition>
        <elseExpression xsi:type="ocl:OperatorCallExp" location="710:5-715:6" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="710:5-710:40" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="710:5-710:31" name="varName">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="710:5-710:23" name="referredVariable">
                <source xsi:type="ocl:VariableExp" location="710:5-710:6" referredVariable="//@elements.29/@inPattern/@elements.0"/>
              </source>
            </source>
            <arguments xsi:type="ocl:StringExp" location="710:34-710:40" stringSymbol="self"/>
          </source>
          <arguments xsi:type="ocl:LetExp" location="712:6-714:38">
            <variable location="712:10-712:52" varName="rComp" variableExp="//@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@in_/@source/@source //@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@in_/@arguments.0/@source">
              <type xsi:type="ocl:OclModelElement" location="712:18-712:29" name="Element">
                <model href="new-model#/1"/>
              </type>
              <initExpression xsi:type="ocl:OperationCallExp" location="712:32-712:52" operationName="getRootComposite">
                <source xsi:type="ocl:VariableExp" location="712:32-712:33" referredVariable="//@elements.29/@inPattern/@elements.0"/>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:OperatorCallExp" location="713:6-714:38" operationName="or">
              <source xsi:type="ocl:OperationCallExp" location="713:6-713:36" operationName="oclIsTypeOf">
                <source xsi:type="ocl:VariableExp" location="713:6-713:11" referredVariable="//@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@variable"/>
                <arguments xsi:type="ocl:OclModelElement" location="713:24-713:35" name="Binding">
                  <model href="new-model#/1"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:OperationCallExp" location="714:6-714:38" operationName="oclIsTypeOf">
                <source xsi:type="ocl:VariableExp" location="714:6-714:11" referredVariable="//@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@variable"/>
                <arguments xsi:type="ocl:OclModelElement" location="714:24-714:37" name="InPattern">
                  <model href="new-model#/1"/>
                </arguments>
              </arguments>
            </in_>
          </arguments>
        </elseExpression>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="731:1-759:2" name="NoResolveTempInSourcePattern">
    <commentsBefore>-- Rule 'NoResolveTempInSourcePattern'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem for each call of the</commentsBefore>
    <commentsBefore>-- 'thisModule.resolveTemp()' operation within a source pattern of a rule.</commentsBefore>
    <commentsAfter>-- Rule 'NoResolveTempInModuleAttribute'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem for each call of the</commentsAfter>
    <commentsAfter>-- 'thisModule.resolveTemp()' operation within a model attribute.</commentsAfter>
    <outPattern location="750:2-758:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="751:3-758:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="751:7-751:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="752:4-752:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="752:16-752:22" name="error"/>
        </bindings>
        <bindings location="753:4-753:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="753:16-753:26" name="location">
            <source xsi:type="ocl:VariableExp" location="753:16-753:17" referredVariable="//@elements.30/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="754:4-757:41" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="755:5-757:41" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="755:5-756:58" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="755:5-755:49" operationName="+">
                <source xsi:type="ocl:StringExp" location="755:5-755:14" stringSymbol="rule '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="755:17-755:49" name="name">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="755:17-755:44" name="rule">
                    <source xsi:type="ocl:OperationCallExp" location="755:17-755:37" operationName="getRootComposite">
                      <source xsi:type="ocl:VariableExp" location="755:17-755:18" referredVariable="//@elements.30/@inPattern/@elements.0"/>
                    </source>
                  </source>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="756:7-756:58" stringSymbol="': use of 'thisModule.resolveTemp()' function "/>
            </source>
            <arguments xsi:type="ocl:StringExp" location="757:7-757:41" stringSymbol="is prohibited in source patterns"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="732:2-749:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="733:3-733:27" varName="s" variableExp="//@elements.30/@inPattern/@filter/@source/@source/@source/@source //@elements.30/@inPattern/@filter/@source/@arguments.0/@condition/@source/@source //@elements.30/@inPattern/@filter/@source/@arguments.0/@thenExpression/@condition/@source/@source/@source //@elements.30/@inPattern/@filter/@source/@arguments.0/@thenExpression/@elseExpression/@source/@source/@source/@source //@elements.30/@inPattern/@filter/@arguments.0/@source/@source //@elements.30/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.30/@outPattern/@elements.0/@bindings.2/@value/@source/@source/@arguments.0/@source/@source/@source">
        <type xsi:type="ocl:OclModelElement" location="733:7-733:27" name="OperationCallExp">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:OperatorCallExp" location="734:4-748:51" operationName="and">
        <source xsi:type="ocl:OperatorCallExp" location="734:4-747:5" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="734:4-734:35" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="734:4-734:19" name="operationName">
              <source xsi:type="ocl:VariableExp" location="734:4-734:5" referredVariable="//@elements.30/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:StringExp" location="734:22-734:35" stringSymbol="resolveTemp"/>
          </source>
          <arguments xsi:type="ocl:IfExp" location="736:5-746:10">
            <thenExpression xsi:type="ocl:IfExp" location="738:6-743:11">
              <thenExpression xsi:type="ocl:BooleanExp" location="740:7-740:12"/>
              <condition xsi:type="ocl:OperationCallExp" location="738:9-738:51" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="738:9-738:34" name="referredVariable">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="738:9-738:17" name="source">
                    <source xsi:type="ocl:VariableExp" location="738:9-738:10" referredVariable="//@elements.30/@inPattern/@elements.0"/>
                  </source>
                </source>
              </condition>
              <elseExpression xsi:type="ocl:OperatorCallExp" location="742:7-742:55" operationName="=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="742:7-742:40" name="varName">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="742:7-742:32" name="referredVariable">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="742:7-742:15" name="source">
                      <source xsi:type="ocl:VariableExp" location="742:7-742:8" referredVariable="//@elements.30/@inPattern/@elements.0"/>
                    </source>
                  </source>
                </source>
                <arguments xsi:type="ocl:StringExp" location="742:43-742:55" stringSymbol="thisModule"/>
              </elseExpression>
            </thenExpression>
            <condition xsi:type="ocl:OperationCallExp" location="736:8-736:45" operationName="oclIsTypeOf">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="736:8-736:16" name="source">
                <source xsi:type="ocl:VariableExp" location="736:8-736:9" referredVariable="//@elements.30/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:OclModelElement" location="736:29-736:44" name="VariableExp">
                <model href="new-model#/1"/>
              </arguments>
            </condition>
            <elseExpression xsi:type="ocl:BooleanExp" location="745:6-745:11"/>
          </arguments>
        </source>
        <arguments xsi:type="ocl:OperationCallExp" location="748:4-748:51" operationName="oclIsTypeOf">
          <source xsi:type="ocl:OperationCallExp" location="748:4-748:24" operationName="getRootComposite">
            <source xsi:type="ocl:VariableExp" location="748:4-748:5" referredVariable="//@elements.30/@inPattern/@elements.0"/>
          </source>
          <arguments xsi:type="ocl:OclModelElement" location="748:37-748:50" name="InPattern">
            <model href="new-model#/1"/>
          </arguments>
        </arguments>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="764:1-792:2" name="NoResolveTempInModuleAttribute">
    <commentsBefore>-- Rule 'NoResolveTempInModuleAttribute'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem for each call of the</commentsBefore>
    <commentsBefore>-- 'thisModule.resolveTemp()' operation within a model attribute.</commentsBefore>
    <commentsAfter>-- Rule 'ProhibitedMultiIteratorCollectionOperation'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem for each IteratorExp of the</commentsAfter>
    <commentsAfter>-- singleIteratorExps set that is associated with several Iterators.</commentsAfter>
    <outPattern location="783:2-791:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="784:3-791:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="784:7-784:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="785:4-785:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="785:16-785:22" name="error"/>
        </bindings>
        <bindings location="786:4-786:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="786:16-786:26" name="location">
            <source xsi:type="ocl:VariableExp" location="786:16-786:17" referredVariable="//@elements.31/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="787:4-790:36" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="788:5-790:36" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="788:5-789:58" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="788:5-788:47" operationName="+">
                <source xsi:type="ocl:StringExp" location="788:5-788:19" stringSymbol="attribute '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="788:22-788:47" name="name">
                  <source xsi:type="ocl:OperationCallExp" location="788:22-788:42" operationName="getRootComposite">
                    <source xsi:type="ocl:VariableExp" location="788:22-788:23" referredVariable="//@elements.31/@inPattern/@elements.0"/>
                  </source>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="789:7-789:58" stringSymbol="': use of 'thisModule.resolveTemp()' function "/>
            </source>
            <arguments xsi:type="ocl:StringExp" location="790:7-790:36" stringSymbol="is prohibited in attributes"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="765:2-782:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="766:3-766:27" varName="s" variableExp="//@elements.31/@inPattern/@filter/@source/@source/@source/@source //@elements.31/@inPattern/@filter/@source/@arguments.0/@condition/@source/@source //@elements.31/@inPattern/@filter/@source/@arguments.0/@thenExpression/@condition/@source/@source/@source //@elements.31/@inPattern/@filter/@source/@arguments.0/@thenExpression/@elseExpression/@source/@source/@source/@source //@elements.31/@inPattern/@filter/@arguments.0/@source/@source //@elements.31/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.31/@outPattern/@elements.0/@bindings.2/@value/@source/@source/@arguments.0/@source/@source">
        <type xsi:type="ocl:OclModelElement" location="766:7-766:27" name="OperationCallExp">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:OperatorCallExp" location="767:4-781:51" operationName="and">
        <source xsi:type="ocl:OperatorCallExp" location="767:4-780:5" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="767:4-767:35" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="767:4-767:19" name="operationName">
              <source xsi:type="ocl:VariableExp" location="767:4-767:5" referredVariable="//@elements.31/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:StringExp" location="767:22-767:35" stringSymbol="resolveTemp"/>
          </source>
          <arguments xsi:type="ocl:IfExp" location="769:5-779:10">
            <thenExpression xsi:type="ocl:IfExp" location="771:6-776:11">
              <thenExpression xsi:type="ocl:BooleanExp" location="773:7-773:12"/>
              <condition xsi:type="ocl:OperationCallExp" location="771:9-771:51" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="771:9-771:34" name="referredVariable">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="771:9-771:17" name="source">
                    <source xsi:type="ocl:VariableExp" location="771:9-771:10" referredVariable="//@elements.31/@inPattern/@elements.0"/>
                  </source>
                </source>
              </condition>
              <elseExpression xsi:type="ocl:OperatorCallExp" location="775:7-775:55" operationName="=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="775:7-775:40" name="varName">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="775:7-775:32" name="referredVariable">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="775:7-775:15" name="source">
                      <source xsi:type="ocl:VariableExp" location="775:7-775:8" referredVariable="//@elements.31/@inPattern/@elements.0"/>
                    </source>
                  </source>
                </source>
                <arguments xsi:type="ocl:StringExp" location="775:43-775:55" stringSymbol="thisModule"/>
              </elseExpression>
            </thenExpression>
            <condition xsi:type="ocl:OperationCallExp" location="769:8-769:45" operationName="oclIsTypeOf">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="769:8-769:16" name="source">
                <source xsi:type="ocl:VariableExp" location="769:8-769:9" referredVariable="//@elements.31/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:OclModelElement" location="769:29-769:44" name="VariableExp">
                <model href="new-model#/1"/>
              </arguments>
            </condition>
            <elseExpression xsi:type="ocl:BooleanExp" location="778:6-778:11"/>
          </arguments>
        </source>
        <arguments xsi:type="ocl:OperationCallExp" location="781:4-781:51" operationName="oclIsTypeOf">
          <source xsi:type="ocl:OperationCallExp" location="781:4-781:24" operationName="getRootComposite">
            <source xsi:type="ocl:VariableExp" location="781:4-781:5" referredVariable="//@elements.31/@inPattern/@elements.0"/>
          </source>
          <arguments xsi:type="ocl:OclModelElement" location="781:37-781:50" name="Attribute">
            <model href="new-model#/1"/>
          </arguments>
        </arguments>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="797:1-811:2" name="ProhibitedMultiIteratorCollectionOperation">
    <commentsBefore>-- Rule 'ProhibitedMultiIteratorCollectionOperation'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem for each IteratorExp of the</commentsBefore>
    <commentsBefore>-- singleIteratorExps set that is associated with several Iterators.</commentsBefore>
    <commentsAfter>-- Rule 'UnsupportedMultiIteratorCollectionOperation'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem for each IteratorExp of the</commentsAfter>
    <commentsAfter>-- multiIteratorExps set that is associated with several Iterators.</commentsAfter>
    <commentsAfter>-- Note that this problem is due to limitations of the current implementation.</commentsAfter>
    <outPattern location="803:2-810:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="804:3-810:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="804:7-804:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="805:4-805:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="805:16-805:22" name="error"/>
        </bindings>
        <bindings location="806:4-806:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="806:16-806:26" name="location">
            <source xsi:type="ocl:VariableExp" location="806:16-806:17" referredVariable="//@elements.32/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="807:4-809:50" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="808:5-809:50" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="808:5-808:27" operationName="+">
              <source xsi:type="ocl:StringExp" location="808:5-808:18" stringSymbol="iterator '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="808:21-808:27" name="name">
                <source xsi:type="ocl:VariableExp" location="808:21-808:22" referredVariable="//@elements.32/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="809:7-809:50" stringSymbol="' may have at most one iterator variable"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="798:2-802:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="799:3-799:22" varName="s" variableExp="//@elements.32/@inPattern/@filter/@source/@body/@source/@source //@elements.32/@inPattern/@filter/@arguments.0/@source/@source/@source //@elements.32/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.32/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="799:7-799:22" name="IteratorExp">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:OperatorCallExp" location="800:4-801:27" operationName="and">
        <source xsi:type="ocl:IteratorExp" location="800:4-800:57" name="exists">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="800:4-800:33" name="singleIteratorExps">
            <source xsi:type="ocl:VariableExp" location="800:4-800:14">
              <referredVariable href="new-model#/82"/>
            </source>
          </source>
          <body xsi:type="ocl:OperatorCallExp" location="800:46-800:56" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="800:46-800:52" name="name">
              <source xsi:type="ocl:VariableExp" location="800:46-800:47" referredVariable="//@elements.32/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:VariableExp" location="800:55-800:56" referredVariable="//@elements.32/@inPattern/@filter/@source/@iterators.0"/>
          </body>
          <iterators location="800:42-800:43" varName="e" variableExp="//@elements.32/@inPattern/@filter/@source/@body/@arguments.0"/>
        </source>
        <arguments xsi:type="ocl:OperatorCallExp" location="801:4-801:27" operationName=">">
          <source xsi:type="ocl:CollectionOperationCallExp" location="801:4-801:23" operationName="size">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="801:4-801:15" name="iterators">
              <source xsi:type="ocl:VariableExp" location="801:4-801:5" referredVariable="//@elements.32/@inPattern/@elements.0"/>
            </source>
          </source>
          <arguments xsi:type="ocl:IntegerExp" location="801:26-801:27" integerSymbol="1"/>
        </arguments>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="817:1-831:2" name="UnsupportedMultiIteratorCollectionOperation">
    <commentsBefore>-- Rule 'UnsupportedMultiIteratorCollectionOperation'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem for each IteratorExp of the</commentsBefore>
    <commentsBefore>-- multiIteratorExps set that is associated with several Iterators.</commentsBefore>
    <commentsBefore>-- Note that this problem is due to limitations of the current implementation.</commentsBefore>
    <commentsAfter>-- Rule 'ParameterNameIsUniqueInOperation'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem for each parameter for which there</commentsAfter>
    <commentsAfter>-- exists another parameter of the same name in the operation declaration.</commentsAfter>
    <outPattern location="823:2-830:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="824:3-830:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="824:7-824:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="825:4-825:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="825:16-825:22" name="error"/>
        </bindings>
        <bindings location="826:4-826:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="826:16-826:26" name="location">
            <source xsi:type="ocl:VariableExp" location="826:16-826:17" referredVariable="//@elements.33/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="827:4-829:50" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="828:5-829:50" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="828:5-828:56" operationName="+">
              <source xsi:type="ocl:StringExp" location="828:5-828:47" stringSymbol="with current implementation, iterator '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="828:50-828:56" name="name">
                <source xsi:type="ocl:VariableExp" location="828:50-828:51" referredVariable="//@elements.33/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="829:7-829:50" stringSymbol="' may have at most one iterator variable"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="818:2-822:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="819:3-819:22" varName="s" variableExp="//@elements.33/@inPattern/@filter/@source/@body/@source/@source //@elements.33/@inPattern/@filter/@arguments.0/@source/@source/@source //@elements.33/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.33/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="819:7-819:22" name="IteratorExp">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:OperatorCallExp" location="820:4-821:27" operationName="and">
        <source xsi:type="ocl:IteratorExp" location="820:4-820:56" name="exists">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="820:4-820:32" name="multiIteratorExps">
            <source xsi:type="ocl:VariableExp" location="820:4-820:14">
              <referredVariable href="new-model#/83"/>
            </source>
          </source>
          <body xsi:type="ocl:OperatorCallExp" location="820:45-820:55" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="820:45-820:51" name="name">
              <source xsi:type="ocl:VariableExp" location="820:45-820:46" referredVariable="//@elements.33/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:VariableExp" location="820:54-820:55" referredVariable="//@elements.33/@inPattern/@filter/@source/@iterators.0"/>
          </body>
          <iterators location="820:41-820:42" varName="e" variableExp="//@elements.33/@inPattern/@filter/@source/@body/@arguments.0"/>
        </source>
        <arguments xsi:type="ocl:OperatorCallExp" location="821:4-821:27" operationName=">">
          <source xsi:type="ocl:CollectionOperationCallExp" location="821:4-821:23" operationName="size">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="821:4-821:15" name="iterators">
              <source xsi:type="ocl:VariableExp" location="821:4-821:5" referredVariable="//@elements.33/@inPattern/@elements.0"/>
            </source>
          </source>
          <arguments xsi:type="ocl:IntegerExp" location="821:26-821:27" integerSymbol="1"/>
        </arguments>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="836:1-853:2" name="ParameterNameIsUniqueInOperation">
    <commentsBefore>-- Rule 'ParameterNameIsUniqueInOperation'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem for each parameter for which there</commentsBefore>
    <commentsBefore>-- exists another parameter of the same name in the operation declaration.</commentsBefore>
    <commentsAfter>-- Rule 'IteratorNameIsUniqueInLoop'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem for each Iterator declaration for</commentsAfter>
    <commentsAfter>-- which there exists either another Iterator or a result variable declaration</commentsAfter>
    <commentsAfter>-- (for Iterate loop only) of the same name within the same loop definition.</commentsAfter>
    <outPattern location="845:2-852:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="846:3-852:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="846:7-846:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="847:4-847:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="847:16-847:22" name="error"/>
        </bindings>
        <bindings location="848:4-848:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="848:16-848:26" name="location">
            <source xsi:type="ocl:VariableExp" location="848:16-848:17" referredVariable="//@elements.34/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="849:4-851:49" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="850:5-851:49" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="850:5-850:39" operationName="+">
              <source xsi:type="ocl:StringExp" location="850:5-850:27" stringSymbol="a parameter named '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="850:30-850:39" name="varName">
                <source xsi:type="ocl:VariableExp" location="850:30-850:31" referredVariable="//@elements.34/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="851:7-851:49" stringSymbol="' is already declared in this operation"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="837:2-844:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="838:3-838:20" varName="s" variableExp="//@elements.34/@inPattern/@filter/@source/@source/@source/@source //@elements.34/@inPattern/@filter/@source/@body/@source/@source/@source //@elements.34/@inPattern/@filter/@source/@body/@arguments.0/@source //@elements.34/@inPattern/@filter/@arguments.0/@source/@source/@source/@source/@source //@elements.34/@inPattern/@filter/@arguments.0/@source/@source/@arguments.0/@source/@source //@elements.34/@inPattern/@filter/@arguments.0/@source/@arguments.0/@source/@source //@elements.34/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.34/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="838:7-838:20" name="Parameter">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:OperatorCallExp" location="839:4-843:5" operationName="and">
        <source xsi:type="ocl:IteratorExp" location="839:5-840:51" name="exists">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="839:5-839:27" name="parameters">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="839:5-839:16" name="operation">
              <source xsi:type="ocl:VariableExp" location="839:5-839:6" referredVariable="//@elements.34/@inPattern/@elements.0"/>
            </source>
          </source>
          <body xsi:type="ocl:OperatorCallExp" location="840:18-840:50" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="840:18-840:39" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="840:18-840:27" name="varName">
                <source xsi:type="ocl:VariableExp" location="840:18-840:19" referredVariable="//@elements.34/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="840:30-840:39" name="varName">
                <source xsi:type="ocl:VariableExp" location="840:30-840:31" referredVariable="//@elements.34/@inPattern/@filter/@source/@iterators.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="840:44-840:50" operationName="&lt;>">
              <source xsi:type="ocl:VariableExp" location="840:44-840:45" referredVariable="//@elements.34/@inPattern/@elements.0"/>
              <arguments xsi:type="ocl:VariableExp" location="840:49-840:50" referredVariable="//@elements.34/@inPattern/@filter/@source/@iterators.0"/>
            </arguments>
          </body>
          <iterators location="840:14-840:15" varName="e" variableExp="//@elements.34/@inPattern/@filter/@source/@body/@source/@arguments.0/@source //@elements.34/@inPattern/@filter/@source/@body/@arguments.0/@arguments.0"/>
        </source>
        <arguments xsi:type="ocl:OperatorCallExp" location="840:57-843:5" operationName="not">
          <source xsi:type="ocl:OperatorCallExp" location="841:4-842:53" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="841:4-842:23" operationName="and">
              <source xsi:type="ocl:OperationCallExp" location="841:4-841:41" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="841:4-841:24" name="immediateComposite">
                  <source xsi:type="ocl:VariableExp" location="841:4-841:5" referredVariable="//@elements.34/@inPattern/@elements.0"/>
                </source>
              </source>
              <arguments xsi:type="ocl:OperatorCallExp" location="842:4-842:23" operationName="&lt;>">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="842:4-842:13" name="varName">
                  <source xsi:type="ocl:VariableExp" location="842:4-842:5" referredVariable="//@elements.34/@inPattern/@elements.0"/>
                </source>
                <arguments xsi:type="ocl:StringExp" location="842:17-842:23" stringSymbol="self"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="842:28-842:53" operationName="&lt;>">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="842:28-842:37" name="varName">
                <source xsi:type="ocl:VariableExp" location="842:28-842:29" referredVariable="//@elements.34/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="842:41-842:53" stringSymbol="thisModule"/>
            </arguments>
          </source>
        </arguments>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="859:1-880:2" name="VariableNameIsUniqueInLoop">
    <commentsBefore>-- Rule 'IteratorNameIsUniqueInLoop'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem for each Iterator declaration for</commentsBefore>
    <commentsBefore>-- which there exists either another Iterator or a result variable declaration</commentsBefore>
    <commentsBefore>-- (for Iterate loop only) of the same name within the same loop definition.</commentsBefore>
    <commentsAfter>-- Rule 'ResultNameIsUniqueInIterate'</commentsAfter>
    <commentsAfter>-- This rule generates an 'error' Problem for each 'result' variable</commentsAfter>
    <commentsAfter>-- declaration of an IterateExp for which there exists an Iterator variable of</commentsAfter>
    <commentsAfter>-- the same name in the Iterate loop definition.</commentsAfter>
    <outPattern location="872:2-879:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="873:3-879:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="873:7-873:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="874:4-874:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="874:16-874:22" name="error"/>
        </bindings>
        <bindings location="875:4-875:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="875:16-875:26" name="location">
            <source xsi:type="ocl:VariableExp" location="875:16-875:17" referredVariable="//@elements.35/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="876:4-878:44" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="877:5-878:44" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="877:5-877:38" operationName="+">
              <source xsi:type="ocl:StringExp" location="877:5-877:26" stringSymbol="a variable named '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="877:29-877:38" name="varName">
                <source xsi:type="ocl:VariableExp" location="877:29-877:30" referredVariable="//@elements.35/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="878:7-878:44" stringSymbol="' is already declared in this loop"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="860:2-871:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="861:3-861:19" varName="s" variableExp="//@elements.35/@inPattern/@filter/@source/@source/@source/@source //@elements.35/@inPattern/@filter/@source/@body/@source/@source/@source //@elements.35/@inPattern/@filter/@source/@body/@arguments.0/@source //@elements.35/@inPattern/@filter/@arguments.0/@condition/@source/@source //@elements.35/@inPattern/@filter/@arguments.0/@thenExpression/@source/@source/@source/@source //@elements.35/@inPattern/@filter/@arguments.0/@thenExpression/@arguments.0/@source //@elements.35/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.35/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="861:7-861:19" name="Iterator">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:OperatorCallExp" location="862:4-870:9" operationName="or">
        <source xsi:type="ocl:IteratorExp" location="862:4-863:51" name="exists">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="862:4-862:24" name="iterators">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="862:4-862:14" name="loopExpr">
              <source xsi:type="ocl:VariableExp" location="862:4-862:5" referredVariable="//@elements.35/@inPattern/@elements.0"/>
            </source>
          </source>
          <body xsi:type="ocl:OperatorCallExp" location="863:18-863:50" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="863:18-863:39" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="863:18-863:27" name="varName">
                <source xsi:type="ocl:VariableExp" location="863:18-863:19" referredVariable="//@elements.35/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="863:30-863:39" name="varName">
                <source xsi:type="ocl:VariableExp" location="863:30-863:31" referredVariable="//@elements.35/@inPattern/@filter/@source/@iterators.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="863:44-863:50" operationName="&lt;>">
              <source xsi:type="ocl:VariableExp" location="863:44-863:45" referredVariable="//@elements.35/@inPattern/@elements.0"/>
              <arguments xsi:type="ocl:VariableExp" location="863:49-863:50" referredVariable="//@elements.35/@inPattern/@filter/@source/@iterators.0"/>
            </arguments>
          </body>
          <iterators location="863:14-863:15" varName="e" variableExp="//@elements.35/@inPattern/@filter/@source/@body/@source/@arguments.0/@source //@elements.35/@inPattern/@filter/@source/@body/@arguments.0/@arguments.0"/>
        </source>
        <arguments xsi:type="ocl:IfExp" location="865:4-870:9">
          <thenExpression xsi:type="ocl:OperatorCallExp" location="867:5-867:42" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="867:5-867:30" name="varName">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="867:5-867:22" name="result">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="867:5-867:15" name="loopExpr">
                  <source xsi:type="ocl:VariableExp" location="867:5-867:6" referredVariable="//@elements.35/@inPattern/@elements.0"/>
                </source>
              </source>
            </source>
            <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="867:33-867:42" name="varName">
              <source xsi:type="ocl:VariableExp" location="867:33-867:34" referredVariable="//@elements.35/@inPattern/@elements.0"/>
            </arguments>
          </thenExpression>
          <condition xsi:type="ocl:OperationCallExp" location="865:7-865:45" operationName="oclIsTypeOf">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="865:7-865:17" name="loopExpr">
              <source xsi:type="ocl:VariableExp" location="865:7-865:8" referredVariable="//@elements.35/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:OclModelElement" location="865:30-865:44" name="IterateExp">
              <model href="new-model#/1"/>
            </arguments>
          </condition>
          <elseExpression xsi:type="ocl:BooleanExp" location="869:5-869:10"/>
        </arguments>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="886:1-905:2" name="ResultNameIsUniqueInIterate">
    <commentsBefore>-- Rule 'ResultNameIsUniqueInIterate'</commentsBefore>
    <commentsBefore>-- This rule generates an 'error' Problem for each 'result' variable</commentsBefore>
    <commentsBefore>-- declaration of an IterateExp for which there exists an Iterator variable of</commentsBefore>
    <commentsBefore>-- the same name in the Iterate loop definition.</commentsBefore>
    <commentsAfter>-- Rule 'VariableNameIsUniqueInContainer'</commentsAfter>
    <commentsAfter>-- This rule generates a 'warning' Problem for each declaration of a variable</commentsAfter>
    <commentsAfter>-- for which there exists another variable declaration of the same name in the</commentsAfter>
    <commentsAfter>-- same namespace (except multiple intances of an Iterator name in a same loop</commentsAfter>
    <commentsAfter>-- which handle 'error' Problems).</commentsAfter>
    <outPattern location="897:2-904:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="898:3-904:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="898:7-898:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="899:4-899:22" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="899:16-899:22" name="error"/>
        </bindings>
        <bindings location="900:4-900:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="900:16-900:26" name="location">
            <source xsi:type="ocl:VariableExp" location="900:16-900:17" referredVariable="//@elements.36/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="901:4-903:44" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="902:5-903:44" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="902:5-902:38" operationName="+">
              <source xsi:type="ocl:StringExp" location="902:5-902:26" stringSymbol="a variable named '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="902:29-902:38" name="varName">
                <source xsi:type="ocl:VariableExp" location="902:29-902:30" referredVariable="//@elements.36/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="903:7-903:44" stringSymbol="' is already declared in this loop"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="887:2-896:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="888:3-888:30" varName="s" variableExp="//@elements.36/@inPattern/@filter/@condition/@source/@source //@elements.36/@inPattern/@filter/@elseExpression/@source/@source/@source //@elements.36/@inPattern/@filter/@elseExpression/@body/@source/@source/@source //@elements.36/@inPattern/@filter/@elseExpression/@body/@arguments.0/@source //@elements.36/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.36/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="888:7-888:30" name="VariableDeclaration">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:IfExp" location="889:4-895:9">
        <thenExpression xsi:type="ocl:BooleanExp" location="891:5-891:10"/>
        <condition xsi:type="ocl:OperationCallExp" location="889:7-889:33" operationName="oclIsUndefined">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="889:7-889:16" name="baseExp">
            <source xsi:type="ocl:VariableExp" location="889:7-889:8" referredVariable="//@elements.36/@inPattern/@elements.0"/>
          </source>
        </condition>
        <elseExpression xsi:type="ocl:IteratorExp" location="893:5-894:52" name="exists">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="893:5-893:24" name="iterators">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="893:5-893:14" name="baseExp">
              <source xsi:type="ocl:VariableExp" location="893:5-893:6" referredVariable="//@elements.36/@inPattern/@elements.0"/>
            </source>
          </source>
          <body xsi:type="ocl:OperatorCallExp" location="894:19-894:51" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="894:19-894:40" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="894:19-894:28" name="varName">
                <source xsi:type="ocl:VariableExp" location="894:19-894:20" referredVariable="//@elements.36/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="894:31-894:40" name="varName">
                <source xsi:type="ocl:VariableExp" location="894:31-894:32" referredVariable="//@elements.36/@inPattern/@filter/@elseExpression/@iterators.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="894:45-894:51" operationName="&lt;>">
              <source xsi:type="ocl:VariableExp" location="894:45-894:46" referredVariable="//@elements.36/@inPattern/@elements.0"/>
              <arguments xsi:type="ocl:VariableExp" location="894:50-894:51" referredVariable="//@elements.36/@inPattern/@filter/@elseExpression/@iterators.0"/>
            </arguments>
          </body>
          <iterators location="894:15-894:16" varName="e" variableExp="//@elements.36/@inPattern/@filter/@elseExpression/@body/@source/@arguments.0/@source //@elements.36/@inPattern/@filter/@elseExpression/@body/@arguments.0/@arguments.0"/>
        </elseExpression>
      </filter>
    </inPattern>
  </elements>
  <elements xsi:type="atl:MatchedRule" location="912:1-925:2" name="VariableNameIsUniqueInContainer">
    <commentsBefore>-- Rule 'VariableNameIsUniqueInContainer'</commentsBefore>
    <commentsBefore>-- This rule generates a 'warning' Problem for each declaration of a variable</commentsBefore>
    <commentsBefore>-- for which there exists another variable declaration of the same name in the</commentsBefore>
    <commentsBefore>-- same namespace (except multiple intances of an Iterator name in a same loop</commentsBefore>
    <commentsBefore>-- which handle 'error' Problems).</commentsBefore>
    <outPattern location="917:2-924:4">
      <elements xsi:type="atl:SimpleOutPatternElement" location="918:3-924:4" varName="t">
        <type xsi:type="ocl:OclModelElement" location="918:7-918:22" name="Problem">
          <model href="new-model#/0"/>
        </type>
        <bindings location="919:4-919:24" propertyName="severity">
          <value xsi:type="ocl:EnumLiteralExp" location="919:16-919:24" name="warning"/>
        </bindings>
        <bindings location="920:4-920:26" propertyName="location">
          <value xsi:type="ocl:NavigationOrAttributeCallExp" location="920:16-920:26" name="location">
            <source xsi:type="ocl:VariableExp" location="920:16-920:17" referredVariable="//@elements.37/@inPattern/@elements.0"/>
          </value>
        </bindings>
        <bindings location="921:4-923:49" propertyName="description">
          <value xsi:type="ocl:OperatorCallExp" location="922:5-923:49" operationName="+">
            <source xsi:type="ocl:OperatorCallExp" location="922:5-922:38" operationName="+">
              <source xsi:type="ocl:StringExp" location="922:5-922:26" stringSymbol="a variable named '"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="922:29-922:38" name="varName">
                <source xsi:type="ocl:VariableExp" location="922:29-922:30" referredVariable="//@elements.37/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:StringExp" location="923:7-923:49" stringSymbol="' is already declared in this container"/>
          </value>
        </bindings>
      </elements>
    </outPattern>
    <inPattern location="913:2-916:4">
      <elements xsi:type="atl:SimpleInPatternElement" location="914:3-914:30" varName="s" variableExp="//@elements.37/@inPattern/@filter/@source/@source //@elements.37/@inPattern/@filter/@body/@source/@source/@source //@elements.37/@inPattern/@filter/@body/@arguments.0/@source //@elements.37/@outPattern/@elements.0/@bindings.1/@value/@source //@elements.37/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
        <type xsi:type="ocl:OclModelElement" location="914:7-914:30" name="VariableDeclaration">
          <model href="new-model#/1"/>
        </type>
      </elements>
      <filter xsi:type="ocl:IteratorExp" location="915:4-915:69" name="exists">
        <source xsi:type="ocl:OperationCallExp" location="915:4-915:23" operationName="getDeclarations">
          <source xsi:type="ocl:VariableExp" location="915:4-915:5" referredVariable="//@elements.37/@inPattern/@elements.0"/>
        </source>
        <body xsi:type="ocl:OperatorCallExp" location="915:36-915:68" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="915:36-915:57" operationName="=">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="915:36-915:45" name="varName">
              <source xsi:type="ocl:VariableExp" location="915:36-915:37" referredVariable="//@elements.37/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="915:48-915:57" name="varName">
              <source xsi:type="ocl:VariableExp" location="915:48-915:49" referredVariable="//@elements.37/@inPattern/@filter/@iterators.0"/>
            </arguments>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="915:62-915:68" operationName="&lt;>">
            <source xsi:type="ocl:VariableExp" location="915:62-915:63" referredVariable="//@elements.37/@inPattern/@elements.0"/>
            <arguments xsi:type="ocl:VariableExp" location="915:67-915:68" referredVariable="//@elements.37/@inPattern/@filter/@iterators.0"/>
          </arguments>
        </body>
        <iterators location="915:32-915:33" varName="e" variableExp="//@elements.37/@inPattern/@filter/@body/@source/@arguments.0/@source //@elements.37/@inPattern/@filter/@body/@arguments.0/@arguments.0"/>
      </filter>
    </inPattern>
  </elements>
</atl:Module>
