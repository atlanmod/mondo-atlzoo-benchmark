<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:atl="http://www.eclipse.org/gmt/2005/ATL" xmlns:ocl="http://www.eclipse.org/gmt/2005/OCL">
  <atl:Module location="4:1-108:2" name="IteratorsTests">
    <commentsBefore>-- @nsURI UML=http://www.eclipse.org/uml2/3.0.0/UML</commentsBefore>
    <commentsBefore>-- @path ITM=/org.eclipse.m2m.atl.tests/data/inputs/IteratorsTests/IteratorsTestsModel.ecore</commentsBefore>
    <inModels location="5:23-5:31" name="IN" metamodel="/2"/>
    <outModels location="5:8-5:17" name="OUT" metamodel="/1"/>
    <elements xsi:type="atl:Helper" location="8:1-13:56">
      <commentsBefore>--- This is a test helper</commentsBefore>
      <commentsAfter>--- This is another test helper, with parameters</commentsAfter>
      <definition location="8:8-13:55">
        <feature xsi:type="ocl:Attribute" location="8:14-13:55" name="sequenceTest">
          <initExpression xsi:type="ocl:SequenceExp" location="9:2-13:55">
            <elements xsi:type="ocl:TupleExp" location="9:11-9:55">
              <tuplePart location="9:17-9:32" varName="a">
                <type xsi:type="ocl:IntegerType" location="9:21-9:28"/>
                <initExpression xsi:type="ocl:IntegerExp" location="9:31-9:32" integerSymbol="8"/>
              </tuplePart>
              <tuplePart location="9:34-9:54" varName="b">
                <type xsi:type="ocl:StringType" location="9:38-9:44"/>
                <initExpression xsi:type="ocl:StringExp" location="9:47-9:54" stringSymbol="eight"/>
              </tuplePart>
            </elements>
            <elements xsi:type="ocl:TupleExp" location="10:3-10:52">
              <tuplePart location="10:9-10:25" varName="a">
                <type xsi:type="ocl:IntegerType" location="10:13-10:20"/>
                <initExpression xsi:type="ocl:OperatorCallExp" location="10:23-10:25" operationName="-">
                  <source xsi:type="ocl:IntegerExp" location="10:24-10:25" integerSymbol="1"/>
                </initExpression>
              </tuplePart>
              <tuplePart location="10:27-10:51" varName="b">
                <type xsi:type="ocl:StringType" location="10:31-10:37"/>
                <initExpression xsi:type="ocl:StringExp" location="10:40-10:51" stringSymbol="minus one"/>
              </tuplePart>
            </elements>
            <elements xsi:type="ocl:TupleExp" location="11:3-11:47">
              <tuplePart location="11:9-11:24" varName="a">
                <type xsi:type="ocl:IntegerType" location="11:13-11:20"/>
                <initExpression xsi:type="ocl:IntegerExp" location="11:23-11:24" integerSymbol="2"/>
              </tuplePart>
              <tuplePart location="11:26-11:46" varName="b">
                <type xsi:type="ocl:StringType" location="11:30-11:36"/>
                <initExpression xsi:type="ocl:StringExp" location="11:39-11:46" stringSymbol="two 1"/>
              </tuplePart>
            </elements>
            <elements xsi:type="ocl:TupleExp" location="12:3-12:47">
              <tuplePart location="12:9-12:24" varName="a">
                <type xsi:type="ocl:IntegerType" location="12:13-12:20"/>
                <initExpression xsi:type="ocl:IntegerExp" location="12:23-12:24" integerSymbol="2"/>
              </tuplePart>
              <tuplePart location="12:26-12:46" varName="b">
                <type xsi:type="ocl:StringType" location="12:30-12:36"/>
                <initExpression xsi:type="ocl:StringExp" location="12:39-12:46" stringSymbol="two 2"/>
              </tuplePart>
            </elements>
            <elements xsi:type="ocl:TupleExp" location="13:3-13:54">
              <tuplePart location="13:9-13:25" varName="a">
                <type xsi:type="ocl:IntegerType" location="13:13-13:20"/>
                <initExpression xsi:type="ocl:OperatorCallExp" location="13:23-13:25" operationName="-">
                  <source xsi:type="ocl:IntegerExp" location="13:24-13:25" integerSymbol="3"/>
                </initExpression>
              </tuplePart>
              <tuplePart location="13:27-13:53" varName="b">
                <type xsi:type="ocl:StringType" location="13:31-13:37"/>
                <initExpression xsi:type="ocl:StringExp" location="13:40-13:53" stringSymbol="minus three"/>
              </tuplePart>
            </elements>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="8:29-8:73">
            <elementType xsi:type="ocl:TupleType" location="8:38-8:72">
              <attributes location="8:48-8:59" name="a">
                <type xsi:type="ocl:IntegerType" location="8:52-8:59"/>
              </attributes>
              <attributes location="8:61-8:71" name="b">
                <type xsi:type="ocl:StringType" location="8:65-8:71"/>
              </attributes>
            </elementType>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="16:1-18:9">
      <commentsBefore>--- This is another test helper, with parameters</commentsBefore>
      <definition location="16:8-18:8">
        <feature xsi:type="ocl:Operation" location="16:14-18:8" name="rtest">
          <parameters location="16:20-16:31" varName="t1" variableExp="/0/@elements.1/@definition/@feature/@body/@source/@source">
            <type xsi:type="ocl:StringType" location="16:25-16:31"/>
          </parameters>
          <parameters location="16:33-16:45" varName="t2" variableExp="/0/@elements.1/@definition/@feature/@body/@arguments.0/@source">
            <type xsi:type="ocl:IntegerType" location="16:38-16:45"/>
          </parameters>
          <returnType xsi:type="ocl:OclAnyType" location="16:49-16:55"/>
          <body xsi:type="ocl:OperatorCallExp" location="17:2-18:8" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="17:2-17:13" operationName="=">
              <source xsi:type="ocl:VariableExp" location="17:2-17:4" referredVariable="/0/@elements.1/@definition/@feature/@parameters.0"/>
              <arguments xsi:type="ocl:StringExp" location="17:7-17:13" stringSymbol="Test"/>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="18:2-18:8" operationName="=">
              <source xsi:type="ocl:VariableExp" location="18:2-18:4" referredVariable="/0/@elements.1/@definition/@feature/@parameters.1"/>
              <arguments xsi:type="ocl:IntegerExp" location="18:7-18:8" integerSymbol="5"/>
            </arguments>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="20:1-108:2" name="IteratorsTests">
      <outPattern location="23:2-107:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="24:3-35:4" varName="iterateTest">
          <type xsi:type="ocl:OclModelElement" location="24:17-24:37" name="IterateTestClass" model="/4"/>
          <bindings location="25:4-27:5" propertyName="resultSum">
            <value xsi:type="ocl:IterateExp" location="25:17-27:5">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="25:17-25:40" name="sequenceTest">
                <source xsi:type="ocl:VariableExp" location="25:17-25:27" referredVariable="/5"/>
              </source>
              <body xsi:type="ocl:OperatorCallExp" location="26:5-26:14" operationName="+">
                <source xsi:type="ocl:VariableExp" location="26:5-26:8" referredVariable="/0/@elements.2/@outPattern/@elements.0/@bindings.0/@value/@result"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="26:11-26:14" name="a">
                  <source xsi:type="ocl:VariableExp" location="26:11-26:12" referredVariable="/0/@elements.2/@outPattern/@elements.0/@bindings.0/@value/@iterators.0"/>
                </arguments>
              </body>
              <iterators location="25:52-25:53" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.0/@bindings.0/@value/@body/@arguments.0/@source"/>
              <result location="25:55-25:72" varName="var" variableExp="/0/@elements.2/@outPattern/@elements.0/@bindings.0/@value/@body/@source">
                <type xsi:type="ocl:IntegerType" location="25:61-25:68"/>
                <initExpression xsi:type="ocl:IntegerExp" location="25:71-25:72"/>
              </result>
            </value>
          </bindings>
          <bindings location="28:4-34:5" propertyName="result">
            <commentsBefore>-- This first iteration sum all the integer values of the tuples of the sequence</commentsBefore>
            <commentsAfter>-- This second iteration says whether the integer value is positive or negative for each tuple</commentsAfter>
            <value xsi:type="ocl:IterateExp" location="28:14-34:5">
              <commentsAfter>-- This second iteration says whether the integer value is positive or negative for each tuple</commentsAfter>
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="28:14-28:37" name="sequenceTest">
                <source xsi:type="ocl:VariableExp" location="28:14-28:24" referredVariable="/6"/>
              </source>
              <body xsi:type="ocl:IfExp" location="29:5-33:10">
                <thenExpression xsi:type="ocl:OperatorCallExp" location="30:6-30:35" operationName="+">
                  <source xsi:type="ocl:OperatorCallExp" location="30:6-30:15" operationName="+">
                    <source xsi:type="ocl:VariableExp" location="30:6-30:9" referredVariable="/0/@elements.2/@outPattern/@elements.0/@bindings.1/@value/@result"/>
                    <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="30:12-30:15" name="b">
                      <source xsi:type="ocl:VariableExp" location="30:12-30:13" referredVariable="/0/@elements.2/@outPattern/@elements.0/@bindings.1/@value/@iterators.0"/>
                    </arguments>
                  </source>
                  <arguments xsi:type="ocl:StringExp" location="30:18-30:35" stringSymbol=" is positive - "/>
                </thenExpression>
                <condition xsi:type="ocl:OperatorCallExp" location="29:8-29:15" operationName=">">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="29:8-29:11" name="a">
                    <source xsi:type="ocl:VariableExp" location="29:8-29:9" referredVariable="/0/@elements.2/@outPattern/@elements.0/@bindings.1/@value/@iterators.0"/>
                  </source>
                  <arguments xsi:type="ocl:IntegerExp" location="29:14-29:15"/>
                </condition>
                <elseExpression xsi:type="ocl:OperatorCallExp" location="32:6-32:35" operationName="+">
                  <source xsi:type="ocl:OperatorCallExp" location="32:6-32:15" operationName="+">
                    <source xsi:type="ocl:VariableExp" location="32:6-32:9" referredVariable="/0/@elements.2/@outPattern/@elements.0/@bindings.1/@value/@result"/>
                    <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="32:12-32:15" name="b">
                      <source xsi:type="ocl:VariableExp" location="32:12-32:13" referredVariable="/0/@elements.2/@outPattern/@elements.0/@bindings.1/@value/@iterators.0"/>
                    </arguments>
                  </source>
                  <arguments xsi:type="ocl:StringExp" location="32:18-32:35" stringSymbol=" is negative - "/>
                </elseExpression>
              </body>
              <iterators location="28:49-28:50" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.0/@bindings.1/@value/@body/@condition/@source/@source /0/@elements.2/@outPattern/@elements.0/@bindings.1/@value/@body/@thenExpression/@source/@arguments.0/@source /0/@elements.2/@outPattern/@elements.0/@bindings.1/@value/@body/@elseExpression/@source/@arguments.0/@source"/>
              <result location="28:52-28:69" varName="var" variableExp="/0/@elements.2/@outPattern/@elements.0/@bindings.1/@value/@body/@thenExpression/@source/@source /0/@elements.2/@outPattern/@elements.0/@bindings.1/@value/@body/@elseExpression/@source/@source">
                <type xsi:type="ocl:StringType" location="28:58-28:64"/>
                <initExpression xsi:type="ocl:StringExp" location="28:67-28:69" stringSymbol=""/>
              </result>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="36:3-44:4" varName="existsTest">
          <type xsi:type="ocl:OclModelElement" location="36:16-36:35" name="ExistsTestClass" model="/7"/>
          <bindings location="37:4-37:64" propertyName="resultTrue">
            <value xsi:type="ocl:IteratorExp" location="37:18-37:64" name="exists">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="37:18-37:41" name="sequenceTest">
                <source xsi:type="ocl:VariableExp" location="37:18-37:28" referredVariable="/8"/>
              </source>
              <body xsi:type="ocl:OperatorCallExp" location="37:56-37:63" operationName="&lt;">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="37:56-37:59" name="a">
                  <source xsi:type="ocl:VariableExp" location="37:56-37:57" referredVariable="/0/@elements.2/@outPattern/@elements.1/@bindings.0/@value/@iterators.0"/>
                </source>
                <arguments xsi:type="ocl:IntegerExp" location="37:62-37:63"/>
              </body>
              <iterators location="37:52-37:53" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.1/@bindings.0/@value/@body/@source/@source"/>
            </value>
          </bindings>
          <bindings location="38:4-38:44" propertyName="resultFalse">
            <value xsi:type="ocl:OperationCallExp" location="38:19-38:44" operationName="rtest">
              <source xsi:type="ocl:VariableExp" location="38:19-38:29" referredVariable="/9"/>
              <arguments xsi:type="ocl:StringExp" location="38:36-38:40" stringSymbol="un"/>
              <arguments xsi:type="ocl:IntegerExp" location="38:42-38:43" integerSymbol="1"/>
            </value>
          </bindings>
          <bindings location="41:4-41:66" propertyName="resultFalse">
            <commentsBefore>-- This one returns true if the sequence contains at least on tuple in</commentsBefore>
            <commentsBefore>-- which the 'a' parameter is negative (in our case, it does)</commentsBefore>
            <commentsAfter>-- This one returns true if the sequence contains at least on tuple in</commentsAfter>
            <commentsAfter>-- which the 'a' parameter is greater than 15 (in our case, it doesn't)</commentsAfter>
            <value xsi:type="ocl:IteratorExp" location="41:19-41:66" name="exists">
              <commentsAfter>-- This one returns true if the sequence contains at least on tuple in</commentsAfter>
              <commentsAfter>-- which the 'a' parameter is greater than 15 (in our case, it doesn't)</commentsAfter>
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="41:19-41:42" name="sequenceTest">
                <source xsi:type="ocl:VariableExp" location="41:19-41:29" referredVariable="/10"/>
              </source>
              <body xsi:type="ocl:OperatorCallExp" location="41:57-41:65" operationName=">">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="41:57-41:60" name="a">
                  <source xsi:type="ocl:VariableExp" location="41:57-41:58" referredVariable="/0/@elements.2/@outPattern/@elements.1/@bindings.2/@value/@iterators.0"/>
                </source>
                <arguments xsi:type="ocl:IntegerExp" location="41:63-41:65" integerSymbol="15"/>
              </body>
              <iterators location="41:53-41:54" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.1/@bindings.2/@value/@body/@source/@source"/>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="45:3-53:4" varName="forAllTest">
          <type xsi:type="ocl:OclModelElement" location="45:16-45:35" name="ForAllTestClass" model="/11"/>
          <bindings location="46:4-46:65" propertyName="resultFalse">
            <value xsi:type="ocl:IteratorExp" location="46:19-46:65" name="forAll">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="46:19-46:42" name="sequenceTest">
                <source xsi:type="ocl:VariableExp" location="46:19-46:29" referredVariable="/12"/>
              </source>
              <body xsi:type="ocl:OperatorCallExp" location="46:57-46:64" operationName=">">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="46:57-46:60" name="a">
                  <source xsi:type="ocl:VariableExp" location="46:57-46:58" referredVariable="/0/@elements.2/@outPattern/@elements.2/@bindings.0/@value/@iterators.0"/>
                </source>
                <arguments xsi:type="ocl:IntegerExp" location="46:63-46:64"/>
              </body>
              <iterators location="46:53-46:54" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.2/@bindings.0/@value/@body/@source/@source"/>
            </value>
          </bindings>
          <bindings location="47:4-47:43" propertyName="resultTrue">
            <value xsi:type="ocl:OperationCallExp" location="47:18-47:43" operationName="rtest">
              <source xsi:type="ocl:VariableExp" location="47:18-47:28" referredVariable="/13"/>
              <arguments xsi:type="ocl:StringExp" location="47:35-47:39" stringSymbol="un"/>
              <arguments xsi:type="ocl:IntegerExp" location="47:41-47:42" integerSymbol="1"/>
            </value>
          </bindings>
          <bindings location="50:4-50:66" propertyName="resultTrue">
            <commentsBefore>-- This one returns true if every tuple of the sequence has it 'a'</commentsBefore>
            <commentsBefore>-- parameter positive (in our case, it doesn't)</commentsBefore>
            <commentsAfter>-- This one returns true if every tuple of the sequence has its 'a'</commentsAfter>
            <commentsAfter>-- parameter greater or equal to 3 (in our case, it does)</commentsAfter>
            <value xsi:type="ocl:IteratorExp" location="50:18-50:66" name="forAll">
              <commentsAfter>-- This one returns true if every tuple of the sequence has its 'a'</commentsAfter>
              <commentsAfter>-- parameter greater or equal to 3 (in our case, it does)</commentsAfter>
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="50:18-50:41" name="sequenceTest">
                <source xsi:type="ocl:VariableExp" location="50:18-50:28" referredVariable="/14"/>
              </source>
              <body xsi:type="ocl:OperatorCallExp" location="50:56-50:65" operationName=">=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="50:56-50:59" name="a">
                  <source xsi:type="ocl:VariableExp" location="50:56-50:57" referredVariable="/0/@elements.2/@outPattern/@elements.2/@bindings.2/@value/@iterators.0"/>
                </source>
                <arguments xsi:type="ocl:OperatorCallExp" location="50:63-50:65" operationName="-">
                  <source xsi:type="ocl:IntegerExp" location="50:64-50:65" integerSymbol="3"/>
                </arguments>
              </body>
              <iterators location="50:52-50:53" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.2/@bindings.2/@value/@body/@source/@source"/>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="54:3-61:4" varName="isUniqueTest">
          <type xsi:type="ocl:OclModelElement" location="54:18-54:39" name="IsUniqueTestClass" model="/15"/>
          <bindings location="55:4-55:68" propertyName="resultFalse">
            <value xsi:type="ocl:IteratorExp" location="55:19-55:68" name="isUnique">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="55:19-55:42" name="sequenceTest">
                <source xsi:type="ocl:VariableExp" location="55:19-55:29" referredVariable="/16"/>
              </source>
              <body xsi:type="ocl:OperatorCallExp" location="55:59-55:67" operationName="=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="55:59-55:62" name="a">
                  <source xsi:type="ocl:VariableExp" location="55:59-55:60" referredVariable="/0/@elements.2/@outPattern/@elements.3/@bindings.0/@value/@iterators.0"/>
                </source>
                <arguments xsi:type="ocl:IntegerExp" location="55:65-55:67" integerSymbol="10"/>
              </body>
              <iterators location="55:55-55:56" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.3/@bindings.0/@value/@body/@source/@source"/>
            </value>
          </bindings>
          <bindings location="58:4-58:62" propertyName="resultTrue">
            <commentsBefore>-- This one returns true if the results of each tuple's 'a' parameter</commentsBefore>
            <commentsBefore>-- compared to 10 are all different (that's just impossible -> false)</commentsBefore>
            <commentsAfter>-- This one returns true if each tuple's 'b' parameter is unique</commentsAfter>
            <commentsAfter>-- (in our case, they are all differents)</commentsAfter>
            <value xsi:type="ocl:IteratorExp" location="58:18-58:62" name="isUnique">
              <commentsAfter>-- This one returns true if each tuple's 'b' parameter is unique</commentsAfter>
              <commentsAfter>-- (in our case, they are all differents)</commentsAfter>
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="58:18-58:41" name="sequenceTest">
                <source xsi:type="ocl:VariableExp" location="58:18-58:28" referredVariable="/17"/>
              </source>
              <body xsi:type="ocl:NavigationOrAttributeCallExp" location="58:58-58:61" name="b">
                <source xsi:type="ocl:VariableExp" location="58:58-58:59" referredVariable="/0/@elements.2/@outPattern/@elements.3/@bindings.1/@value/@iterators.0"/>
              </body>
              <iterators location="58:54-58:55" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.3/@bindings.1/@value/@body/@source"/>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="62:3-69:4" varName="anyTest">
          <type xsi:type="ocl:OclModelElement" location="62:13-62:29" name="AnyTestClass" model="/18"/>
          <bindings location="63:4-63:76" propertyName="resultNull">
            <value xsi:type="ocl:CollectionOperationCallExp" location="63:18-63:76" operationName="toString">
              <source xsi:type="ocl:IteratorExp" location="63:18-63:62" name="any">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="63:18-63:41" name="sequenceTest">
                  <source xsi:type="ocl:VariableExp" location="63:18-63:28" referredVariable="/19"/>
                </source>
                <body xsi:type="ocl:OperatorCallExp" location="63:53-63:61" operationName="=">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="63:53-63:56" name="a">
                    <source xsi:type="ocl:VariableExp" location="63:53-63:54" referredVariable="/0/@elements.2/@outPattern/@elements.4/@bindings.0/@value/@source/@iterators.0"/>
                  </source>
                  <arguments xsi:type="ocl:OperatorCallExp" location="63:59-63:61" operationName="-">
                    <source xsi:type="ocl:IntegerExp" location="63:60-63:61" integerSymbol="5"/>
                  </arguments>
                </body>
                <iterators location="63:49-63:50" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.4/@bindings.0/@value/@source/@body/@source/@source"/>
              </source>
            </value>
          </bindings>
          <bindings location="66:4-66:78" propertyName="resultNotNull">
            <commentsBefore>-- This one returns one tuple for which the 'a' parameter equals -5</commentsBefore>
            <commentsBefore>-- (in our case, none)</commentsBefore>
            <commentsAfter>-- This one returns one tuple for which the 'a' parameter is greater than 1</commentsAfter>
            <commentsAfter>-- (in our case, there are three possibilities : 8 (eight), 2 (two 1) and 2 (two 2))</commentsAfter>
            <value xsi:type="ocl:CollectionOperationCallExp" location="66:21-66:78" operationName="toString">
              <commentsAfter>-- This one returns one tuple for which the 'a' parameter is greater than 1</commentsAfter>
              <commentsAfter>-- (in our case, there are three possibilities : 8 (eight), 2 (two 1) and 2 (two 2))</commentsAfter>
              <source xsi:type="ocl:IteratorExp" location="66:21-66:64" name="any">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="66:21-66:44" name="sequenceTest">
                  <source xsi:type="ocl:VariableExp" location="66:21-66:31" referredVariable="/20"/>
                </source>
                <body xsi:type="ocl:OperatorCallExp" location="66:56-66:63" operationName=">">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="66:56-66:59" name="a">
                    <source xsi:type="ocl:VariableExp" location="66:56-66:57" referredVariable="/0/@elements.2/@outPattern/@elements.4/@bindings.1/@value/@source/@iterators.0"/>
                  </source>
                  <arguments xsi:type="ocl:IntegerExp" location="66:62-66:63" integerSymbol="1"/>
                </body>
                <iterators location="66:52-66:53" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.4/@bindings.1/@value/@source/@body/@source/@source"/>
              </source>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="70:3-77:4" varName="oneTest">
          <type xsi:type="ocl:OclModelElement" location="70:13-70:29" name="OneTestClass" model="/21"/>
          <bindings location="71:4-71:61" propertyName="resultTrue">
            <value xsi:type="ocl:IteratorExp" location="71:18-71:61" name="one">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="71:18-71:41" name="sequenceTest">
                <source xsi:type="ocl:VariableExp" location="71:18-71:28" referredVariable="/22"/>
              </source>
              <body xsi:type="ocl:OperatorCallExp" location="71:53-71:60" operationName="=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="71:53-71:56" name="a">
                  <source xsi:type="ocl:VariableExp" location="71:53-71:54" referredVariable="/0/@elements.2/@outPattern/@elements.5/@bindings.0/@value/@iterators.0"/>
                </source>
                <arguments xsi:type="ocl:IntegerExp" location="71:59-71:60" integerSymbol="8"/>
              </body>
              <iterators location="71:49-71:50" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.5/@bindings.0/@value/@body/@source/@source"/>
            </value>
          </bindings>
          <bindings location="74:4-74:62" propertyName="resultFalse">
            <commentsBefore>-- This one returns true if there is one and only one tuple for which it's 'a' parameter</commentsBefore>
            <commentsBefore>-- equals 8 (in our case, there is one indeed)</commentsBefore>
            <commentsAfter>-- This one returns true if there is one and only one tuple for which it's 'a' parameter</commentsAfter>
            <commentsAfter>-- equals 2 (in our case, there is two, so it returns false)</commentsAfter>
            <value xsi:type="ocl:IteratorExp" location="74:19-74:62" name="one">
              <commentsAfter>-- This one returns true if there is one and only one tuple for which it's 'a' parameter</commentsAfter>
              <commentsAfter>-- equals 2 (in our case, there is two, so it returns false)</commentsAfter>
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="74:19-74:42" name="sequenceTest">
                <source xsi:type="ocl:VariableExp" location="74:19-74:29" referredVariable="/23"/>
              </source>
              <body xsi:type="ocl:OperatorCallExp" location="74:54-74:61" operationName="=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="74:54-74:57" name="a">
                  <source xsi:type="ocl:VariableExp" location="74:54-74:55" referredVariable="/0/@elements.2/@outPattern/@elements.5/@bindings.1/@value/@iterators.0"/>
                </source>
                <arguments xsi:type="ocl:IntegerExp" location="74:60-74:61" integerSymbol="2"/>
              </body>
              <iterators location="74:50-74:51" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.5/@bindings.1/@value/@body/@source/@source"/>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="78:3-85:4" varName="collectTest">
          <type xsi:type="ocl:OclModelElement" location="78:17-78:37" name="CollectTestClass" model="/24"/>
          <bindings location="79:4-79:84" propertyName="resultFalse">
            <value xsi:type="ocl:CollectionOperationCallExp" location="79:19-79:84" operationName="includes">
              <source xsi:type="ocl:IteratorExp" location="79:19-79:66" name="collect">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="79:19-79:42" name="sequenceTest">
                  <source xsi:type="ocl:VariableExp" location="79:19-79:29" referredVariable="/25"/>
                </source>
                <body xsi:type="ocl:OperatorCallExp" location="79:58-79:65" operationName="=">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="79:58-79:61" name="a">
                    <source xsi:type="ocl:VariableExp" location="79:58-79:59" referredVariable="/0/@elements.2/@outPattern/@elements.6/@bindings.0/@value/@source/@iterators.0"/>
                  </source>
                  <arguments xsi:type="ocl:IntegerExp" location="79:64-79:65" integerSymbol="3"/>
                </body>
                <iterators location="79:54-79:55" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.6/@bindings.0/@value/@source/@body/@source/@source"/>
              </source>
              <arguments xsi:type="ocl:BooleanExp" location="79:79-79:83" booleanSymbol="true"/>
            </value>
          </bindings>
          <bindings location="82:4-82:83" propertyName="resultTrue">
            <commentsBefore>-- This one returns true if the collect operation finds a tuple for which the 'a' parameter</commentsBefore>
            <commentsBefore>-- equals 3 (that is to say if the collect operation contains a true result, in our case, it doesn't)</commentsBefore>
            <commentsAfter>-- This one returns true if the collect operation finds a tuple for which the 'a' parameter</commentsAfter>
            <commentsAfter>-- equals 2 (in our case, it does)</commentsAfter>
            <value xsi:type="ocl:CollectionOperationCallExp" location="82:18-82:83" operationName="includes">
              <commentsAfter>-- This one returns true if the collect operation finds a tuple for which the 'a' parameter</commentsAfter>
              <commentsAfter>-- equals 2 (in our case, it does)</commentsAfter>
              <source xsi:type="ocl:IteratorExp" location="82:18-82:65" name="collect">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="82:18-82:41" name="sequenceTest">
                  <source xsi:type="ocl:VariableExp" location="82:18-82:28" referredVariable="/26"/>
                </source>
                <body xsi:type="ocl:OperatorCallExp" location="82:57-82:64" operationName="=">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="82:57-82:60" name="a">
                    <source xsi:type="ocl:VariableExp" location="82:57-82:58" referredVariable="/0/@elements.2/@outPattern/@elements.6/@bindings.1/@value/@source/@iterators.0"/>
                  </source>
                  <arguments xsi:type="ocl:IntegerExp" location="82:63-82:64" integerSymbol="2"/>
                </body>
                <iterators location="82:53-82:54" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.6/@bindings.1/@value/@source/@body/@source/@source"/>
              </source>
              <arguments xsi:type="ocl:BooleanExp" location="82:78-82:82" booleanSymbol="true"/>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="86:3-93:4" varName="selectTest">
          <type xsi:type="ocl:OclModelElement" location="86:16-86:35" name="SelectTestClass" model="/27"/>
          <bindings location="87:4-87:91" propertyName="resultNull">
            <value xsi:type="ocl:CollectionOperationCallExp" location="87:18-87:91" operationName="toString">
              <source xsi:type="ocl:CollectionOperationCallExp" location="87:18-87:77" operationName="flatten">
                <source xsi:type="ocl:IteratorExp" location="87:18-87:64" name="select">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="87:18-87:41" name="sequenceTest">
                    <source xsi:type="ocl:VariableExp" location="87:18-87:28" referredVariable="/28"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="87:56-87:63" operationName="=">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="87:56-87:59" name="a">
                      <source xsi:type="ocl:VariableExp" location="87:56-87:57" referredVariable="/0/@elements.2/@outPattern/@elements.7/@bindings.0/@value/@source/@source/@iterators.0"/>
                    </source>
                    <arguments xsi:type="ocl:IntegerExp" location="87:62-87:63" integerSymbol="3"/>
                  </body>
                  <iterators location="87:52-87:53" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.7/@bindings.0/@value/@source/@source/@body/@source/@source"/>
                </source>
              </source>
            </value>
          </bindings>
          <bindings location="90:4-90:94" propertyName="resultNotNull">
            <commentsBefore>-- This one returns a sequence containing the tuples for which the 'a' parameter equals 3</commentsBefore>
            <commentsBefore>-- (in our case, there is not, so it returns a empty sequence)</commentsBefore>
            <commentsAfter>-- This one returns a sequence containing the tuples for which the 'a' parameter equals 2</commentsAfter>
            <commentsAfter>-- (in our case, there are two)</commentsAfter>
            <value xsi:type="ocl:CollectionOperationCallExp" location="90:21-90:94" operationName="toString">
              <commentsAfter>-- This one returns a sequence containing the tuples for which the 'a' parameter equals 2</commentsAfter>
              <commentsAfter>-- (in our case, there are two)</commentsAfter>
              <source xsi:type="ocl:CollectionOperationCallExp" location="90:21-90:80" operationName="flatten">
                <source xsi:type="ocl:IteratorExp" location="90:21-90:67" name="select">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="90:21-90:44" name="sequenceTest">
                    <source xsi:type="ocl:VariableExp" location="90:21-90:31" referredVariable="/29"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="90:59-90:66" operationName="=">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="90:59-90:62" name="a">
                      <source xsi:type="ocl:VariableExp" location="90:59-90:60" referredVariable="/0/@elements.2/@outPattern/@elements.7/@bindings.1/@value/@source/@source/@iterators.0"/>
                    </source>
                    <arguments xsi:type="ocl:IntegerExp" location="90:65-90:66" integerSymbol="2"/>
                  </body>
                  <iterators location="90:55-90:56" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.7/@bindings.1/@value/@source/@source/@body/@source/@source"/>
                </source>
              </source>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="94:3-101:4" varName="rejectTest">
          <type xsi:type="ocl:OclModelElement" location="94:16-94:35" name="RejectTestClass" model="/30"/>
          <bindings location="95:4-95:92" propertyName="resultNull">
            <value xsi:type="ocl:CollectionOperationCallExp" location="95:18-95:92" operationName="toString">
              <source xsi:type="ocl:CollectionOperationCallExp" location="95:18-95:78" operationName="flatten">
                <source xsi:type="ocl:IteratorExp" location="95:18-95:65" name="reject">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="95:18-95:41" name="sequenceTest">
                    <source xsi:type="ocl:VariableExp" location="95:18-95:28" referredVariable="/31"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="95:56-95:64" operationName=">">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="95:56-95:59" name="a">
                      <source xsi:type="ocl:VariableExp" location="95:56-95:57" referredVariable="/0/@elements.2/@outPattern/@elements.8/@bindings.0/@value/@source/@source/@iterators.0"/>
                    </source>
                    <arguments xsi:type="ocl:OperatorCallExp" location="95:62-95:64" operationName="-">
                      <source xsi:type="ocl:IntegerExp" location="95:63-95:64" integerSymbol="4"/>
                    </arguments>
                  </body>
                  <iterators location="95:52-95:53" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.8/@bindings.0/@value/@source/@source/@body/@source/@source"/>
                </source>
              </source>
            </value>
          </bindings>
          <bindings location="98:4-98:94" propertyName="resultNotNull">
            <commentsBefore>-- This one returns a sequence containing the tuples for which the 'a' parameter IS NOT</commentsBefore>
            <commentsBefore>-- greater than -4 (in our case, there is not, so it returns a empty sequence)</commentsBefore>
            <commentsAfter>-- This one returns a sequence containing the tuples for which the 'a' parameter DOES NOT</commentsAfter>
            <commentsAfter>-- equal 3 (in our case, every tuple matches this condition)</commentsAfter>
            <value xsi:type="ocl:CollectionOperationCallExp" location="98:21-98:94" operationName="toString">
              <commentsAfter>-- This one returns a sequence containing the tuples for which the 'a' parameter DOES NOT</commentsAfter>
              <commentsAfter>-- equal 3 (in our case, every tuple matches this condition)</commentsAfter>
              <source xsi:type="ocl:CollectionOperationCallExp" location="98:21-98:80" operationName="flatten">
                <source xsi:type="ocl:IteratorExp" location="98:21-98:67" name="reject">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="98:21-98:44" name="sequenceTest">
                    <source xsi:type="ocl:VariableExp" location="98:21-98:31" referredVariable="/32"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="98:59-98:66" operationName="=">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="98:59-98:62" name="a">
                      <source xsi:type="ocl:VariableExp" location="98:59-98:60" referredVariable="/0/@elements.2/@outPattern/@elements.8/@bindings.1/@value/@source/@source/@iterators.0"/>
                    </source>
                    <arguments xsi:type="ocl:IntegerExp" location="98:65-98:66" integerSymbol="3"/>
                  </body>
                  <iterators location="98:55-98:56" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.8/@bindings.1/@value/@source/@source/@body/@source/@source"/>
                </source>
              </source>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="102:3-107:4" varName="sortedByTest">
          <type xsi:type="ocl:OclModelElement" location="102:18-102:39" name="SortedByTestClass" model="/33"/>
          <bindings location="103:4-103:93" propertyName="resultByString">
            <value xsi:type="ocl:CollectionOperationCallExp" location="103:22-103:93" operationName="toString">
              <source xsi:type="ocl:CollectionOperationCallExp" location="103:22-103:79" operationName="flatten">
                <source xsi:type="ocl:IteratorExp" location="103:22-103:66" name="sortedBy">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="103:22-103:45" name="sequenceTest">
                    <source xsi:type="ocl:VariableExp" location="103:22-103:32" referredVariable="/34"/>
                  </source>
                  <body xsi:type="ocl:NavigationOrAttributeCallExp" location="103:62-103:65" name="b">
                    <source xsi:type="ocl:VariableExp" location="103:62-103:63" referredVariable="/0/@elements.2/@outPattern/@elements.9/@bindings.0/@value/@source/@source/@iterators.0"/>
                  </body>
                  <iterators location="103:58-103:59" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.9/@bindings.0/@value/@source/@source/@body/@source"/>
                </source>
              </source>
            </value>
          </bindings>
          <bindings location="105:4-105:90" propertyName="resultByInt">
            <commentsBefore>-- This one returns the test sequence sorted by the 'b' parameter of the tuples</commentsBefore>
            <commentsAfter>-- This one returns the test sequence sorted by the 'a' parameter of the tuples</commentsAfter>
            <value xsi:type="ocl:CollectionOperationCallExp" location="105:19-105:90" operationName="toString">
              <commentsAfter>-- This one returns the test sequence sorted by the 'a' parameter of the tuples</commentsAfter>
              <source xsi:type="ocl:CollectionOperationCallExp" location="105:19-105:76" operationName="flatten">
                <source xsi:type="ocl:IteratorExp" location="105:19-105:63" name="sortedBy">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="105:19-105:42" name="sequenceTest">
                    <source xsi:type="ocl:VariableExp" location="105:19-105:29" referredVariable="/35"/>
                  </source>
                  <body xsi:type="ocl:NavigationOrAttributeCallExp" location="105:59-105:62" name="a">
                    <source xsi:type="ocl:VariableExp" location="105:59-105:60" referredVariable="/0/@elements.2/@outPattern/@elements.9/@bindings.1/@value/@source/@source/@iterators.0"/>
                  </body>
                  <iterators location="105:55-105:56" varName="i" variableExp="/0/@elements.2/@outPattern/@elements.9/@bindings.1/@value/@source/@source/@body/@source"/>
                </source>
              </source>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="21:2-22:20">
        <elements xsi:type="atl:SimpleInPatternElement" location="22:3-22:20" varName="input">
          <type xsi:type="ocl:OclModelElement" location="22:11-22:20" name="Model" model="/3"/>
        </elements>
      </inPattern>
    </elements>
  </atl:Module>
  <ocl:OclModel location="5:14-5:17" name="ITM" model="/0/@outModels.0"/>
  <ocl:OclModel location="5:28-5:31" name="UML" model="/0/@inModels.0"/>
  <ocl:OclModel location="22:11-22:14" name="UML" elements="/0/@elements.2/@inPattern/@elements.0/@type"/>
  <ocl:OclModel location="24:17-24:20" name="ITM" elements="/0/@elements.2/@outPattern/@elements.0/@type"/>
  <ocl:VariableDeclaration location="25:17-25:27" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.0/@bindings.0/@value/@source/@source"/>
  <ocl:VariableDeclaration location="28:14-28:24" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.0/@bindings.1/@value/@source/@source"/>
  <ocl:OclModel location="36:16-36:19" name="ITM" elements="/0/@elements.2/@outPattern/@elements.1/@type"/>
  <ocl:VariableDeclaration location="37:18-37:28" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.1/@bindings.0/@value/@source/@source"/>
  <ocl:VariableDeclaration location="38:19-38:29" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.1/@bindings.1/@value/@source"/>
  <ocl:VariableDeclaration location="41:19-41:29" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.1/@bindings.2/@value/@source/@source"/>
  <ocl:OclModel location="45:16-45:19" name="ITM" elements="/0/@elements.2/@outPattern/@elements.2/@type"/>
  <ocl:VariableDeclaration location="46:19-46:29" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.2/@bindings.0/@value/@source/@source"/>
  <ocl:VariableDeclaration location="47:18-47:28" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.2/@bindings.1/@value/@source"/>
  <ocl:VariableDeclaration location="50:18-50:28" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.2/@bindings.2/@value/@source/@source"/>
  <ocl:OclModel location="54:18-54:21" name="ITM" elements="/0/@elements.2/@outPattern/@elements.3/@type"/>
  <ocl:VariableDeclaration location="55:19-55:29" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.3/@bindings.0/@value/@source/@source"/>
  <ocl:VariableDeclaration location="58:18-58:28" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.3/@bindings.1/@value/@source/@source"/>
  <ocl:OclModel location="62:13-62:16" name="ITM" elements="/0/@elements.2/@outPattern/@elements.4/@type"/>
  <ocl:VariableDeclaration location="63:18-63:28" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.4/@bindings.0/@value/@source/@source/@source"/>
  <ocl:VariableDeclaration location="66:21-66:31" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.4/@bindings.1/@value/@source/@source/@source"/>
  <ocl:OclModel location="70:13-70:16" name="ITM" elements="/0/@elements.2/@outPattern/@elements.5/@type"/>
  <ocl:VariableDeclaration location="71:18-71:28" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.5/@bindings.0/@value/@source/@source"/>
  <ocl:VariableDeclaration location="74:19-74:29" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.5/@bindings.1/@value/@source/@source"/>
  <ocl:OclModel location="78:17-78:20" name="ITM" elements="/0/@elements.2/@outPattern/@elements.6/@type"/>
  <ocl:VariableDeclaration location="79:19-79:29" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.6/@bindings.0/@value/@source/@source/@source"/>
  <ocl:VariableDeclaration location="82:18-82:28" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.6/@bindings.1/@value/@source/@source/@source"/>
  <ocl:OclModel location="86:16-86:19" name="ITM" elements="/0/@elements.2/@outPattern/@elements.7/@type"/>
  <ocl:VariableDeclaration location="87:18-87:28" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.7/@bindings.0/@value/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="90:21-90:31" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.7/@bindings.1/@value/@source/@source/@source/@source"/>
  <ocl:OclModel location="94:16-94:19" name="ITM" elements="/0/@elements.2/@outPattern/@elements.8/@type"/>
  <ocl:VariableDeclaration location="95:18-95:28" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.8/@bindings.0/@value/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="98:21-98:31" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.8/@bindings.1/@value/@source/@source/@source/@source"/>
  <ocl:OclModel location="102:18-102:21" name="ITM" elements="/0/@elements.2/@outPattern/@elements.9/@type"/>
  <ocl:VariableDeclaration location="103:22-103:32" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.9/@bindings.0/@value/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="105:19-105:29" varName="thisModule" variableExp="/0/@elements.2/@outPattern/@elements.9/@bindings.1/@value/@source/@source/@source/@source"/>
</xmi:XMI>
